LitebaseSDK/src/native/Index.c:1262:15: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
         if (!(isNull = isBitSet(origNulls, colIndex))
              ^
LitebaseSDK/src/native/Index.c:546:27: style: Condition 'comp>=0' is always true [knownConditionTrueFalse]
            else if (comp >= 0) // left >= curr.keys[pos] ?
                          ^
LitebaseSDK/src/native/Index.c:541:96: note: Assuming that condition '(comp=keyCompareTo(context,left,&currKeys[++pos],numberColumns,plainDB))<=0' is not redundant
            if ((comp = keyCompareTo(context, left, &currKeys[++pos], numberColumns, plainDB)) <= 0)
                                                                                               ^
LitebaseSDK/src/native/Index.c:546:27: note: Condition 'comp>=0' is always true
            else if (comp >= 0) // left >= curr.keys[pos] ?
                          ^
LitebaseSDK/src/native/Index.c:242:12: style: The scope of the variable 'keyFound' can be reduced. [variableScope]
      Key* keyFound;
           ^
LitebaseSDK/src/native/Index.c:388:12: style: The scope of the variable 'keyFound' can be reduced. [variableScope]
      Key* keyFound;
           ^
LitebaseSDK/src/native/Index.c:476:9: style: The scope of the variable 'loaded' can be reduced. [variableScope]
  Node* loaded;
        ^
LitebaseSDK/src/native/Index.c:591:9: style: The scope of the variable 'med' can be reduced. [variableScope]
   Key* med;
        ^
LitebaseSDK/src/native/Index.c:771:9: style: The scope of the variable 'splitting' can be reduced. [variableScope]
   bool splitting = false;
        ^
LitebaseSDK/src/native/Index.c:788:12: style: The scope of the variable 'keyFound' can be reduced. [variableScope]
      Key* keyFound;
           ^
LitebaseSDK/src/native/Index.c:1253:12: style: The scope of the variable 'isNull' can be reduced. [variableScope]
      bool isNull;
           ^
LitebaseSDK/src/native/Index.c:941:14: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
         idx = 0,
             ^
LitebaseSDK/src/native/Index.c:1001:14: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
         idx = 0,
             ^
LitebaseSDK/src/native/Index.c:1094:15: style: Variable 'node' is assigned a value that is never used. [unreadVariable]
         node = 0,
              ^
LitebaseSDK/src/native/Index.c:1167:15: style: Variable 'node' is assigned a value that is never used. [unreadVariable]
         node = 0,
              ^
LitebaseSDK/src/native/Index.c:26:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createComposedIndex")
 ^
LitebaseSDK/src/native/Index.c:50:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createIndex")
 ^
LitebaseSDK/src/native/Index.c:231:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexRemoveValue")
 ^
LitebaseSDK/src/native/Index.c:377:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexGetValue")
 ^
LitebaseSDK/src/native/Index.c:453:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexClimbGreaterOrEqual")
 ^
LitebaseSDK/src/native/Index.c:517:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexGetGreaterOrEqual")
 ^
LitebaseSDK/src/native/Index.c:590:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexSplitNode")
 ^
LitebaseSDK/src/native/Index.c:643:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexRemove")
 ^
LitebaseSDK/src/native/Index.c:662:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexClose")
 ^
LitebaseSDK/src/native/Index.c:681:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexDeleteAllRows")
 ^
LitebaseSDK/src/native/Index.c:730:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE(delayed ? "indexSetWriteDelayed on" : "indexSetWriteDelayed off")
 ^
LitebaseSDK/src/native/Index.c:767:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexAddKey")
 ^
LitebaseSDK/src/native/Index.c:862:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexRename")
 ^
LitebaseSDK/src/native/Index.c:886:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("getLoadedNode")
   ^
LitebaseSDK/src/native/Index.c:935:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("findMinValue")
   ^
LitebaseSDK/src/native/Index.c:995:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("findMaxValue")
   ^
LitebaseSDK/src/native/Index.c:1052:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("loadStringForMaxMin")
   ^
LitebaseSDK/src/native/Index.c:1090:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("sortRecordsAsc")
   ^
LitebaseSDK/src/native/Index.c:1163:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("sortRecordsDesc")
   ^
LitebaseSDK/src/native/Index.c:1237:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("writeKey")
   ^
LitebaseSDK/src/native/Key.c:83:14: style: The scope of the variable 'keyAux' can be reduced. [variableScope]
   SQLValue* keyAux;
             ^
LitebaseSDK/src/native/Key.c:23:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keySet")
 ^
LitebaseSDK/src/native/Key.c:40:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keySetFromKey")
 ^
LitebaseSDK/src/native/Key.c:79:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keyLoad")
 ^
LitebaseSDK/src/native/Key.c:127:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keySave")
 ^
LitebaseSDK/src/native/Key.c:168:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keyCompareTo")
 ^
LitebaseSDK/src/native/Litebase.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
LitebaseSDK/src/native/Litebase.c:765:9: style: Variable 'locked' is reassigned a value before the old one has been used. [redundantAssignment]
 locked = false;
        ^
LitebaseSDK/src/native/Litebase.c:760:9: note: locked is assigned
 locked = true;
        ^
LitebaseSDK/src/native/Litebase.c:765:9: note: locked is overwritten
 locked = false;
        ^
LitebaseSDK/src/native/Litebase.c:19:1: style:inconclusive: Function 'TC_TCObjectsAdd' argument 3 names different: declaration 'h' definition 'heap'. [funcArgNamesDifferent]
TC_ImplementList(TCObject);
^
LitebaseSDK/src/native/LitebaseTypes.h:40:1: note: Function 'TC_TCObjectsAdd' argument 3 names different: declaration 'h' definition 'heap'.
TC_DeclareList(TCObject);
^
LitebaseSDK/src/native/Litebase.c:19:1: note: Function 'TC_TCObjectsAdd' argument 3 names different: declaration 'h' definition 'heap'.
TC_ImplementList(TCObject);
^
LitebaseSDK/src/native/Litebase.c:389:78: style:inconclusive: Function 'litebaseExecute' argument 4 names different: declaration 'len' definition 'sqlLen'. [funcArgNamesDifferent]
void litebaseExecute(Context context, TCObject driver, JCharP sqlStr, uint32 sqlLen)
                                                                             ^
LitebaseSDK/src/native/Litebase.h:125:78: note: Function 'litebaseExecute' argument 4 names different: declaration 'len' definition 'sqlLen'.
void litebaseExecute(Context context, TCObject driver, JCharP sqlStr, uint32 len);
                                                                             ^
LitebaseSDK/src/native/Litebase.c:389:78: note: Function 'litebaseExecute' argument 4 names different: declaration 'len' definition 'sqlLen'.
void litebaseExecute(Context context, TCObject driver, JCharP sqlStr, uint32 sqlLen)
                                                                             ^
LitebaseSDK/src/native/Litebase.c:397:11: style: Local variable 'names' shadows outer variable [shadowVariable]
   CharP* names;
          ^
LitebaseSDK/src/native/LitebaseGlobals.h:30:14: note: Shadowed declaration
extern CharP names[10];                 // An array with the names of the SQL data functions.
             ^
LitebaseSDK/src/native/Litebase.c:397:11: note: Shadow variable
   CharP* names;
          ^
LitebaseSDK/src/native/Litebase.c:1854:1: style: Label 'finish' is not used. [unusedLabel]
finish : ;
^
LitebaseSDK/src/native/Litebase.c:2352:1: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
finish: ;
^
LitebaseSDK/src/native/Litebase.c:2533:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/Litebase.c:2612:1: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
finish: ;
^
LitebaseSDK/src/native/Litebase.c:2637:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/Litebase.c:3127:1: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
finish: ;
^
LitebaseSDK/src/native/Litebase.c:96:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("LibClose")
 ^
LitebaseSDK/src/native/Litebase.c:345:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("freeLitebase")
 ^
LitebaseSDK/src/native/Litebase.c:1547:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("testRIClosed")
   ^
LitebaseSDK/src/native/Litebase.c:1575:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("checkApppath")
 ^
LitebaseSDK/src/native/Litebase.c:1647:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("bindFunctionDataType")
   ^
LitebaseSDK/src/native/Litebase.c:1671:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("dataTypeFunctionsName")
 ^
LitebaseSDK/src/native/MarkBits.c:239:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/MarkBits.c:22:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("markBitsReset")
 ^
LitebaseSDK/src/native/MarkBits.c:39:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("onKey")
 ^
LitebaseSDK/src/native/MarkBits.c:129:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("onValue")
 ^
LitebaseSDK/src/native/MemoryFile.c:118:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/MemoryFile.c:142:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/MemoryFile.c:212:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/MemoryFile.c:20:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfSetPos")
 ^
LitebaseSDK/src/native/MemoryFile.c:35:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfGrowTo")
 ^
LitebaseSDK/src/native/MemoryFile.c:56:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfReadBytes")
 ^
LitebaseSDK/src/native/MemoryFile.c:74:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfWriteBytes")
 ^
LitebaseSDK/src/native/MemoryFile.c:90:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfClose")
 ^
LitebaseSDK/src/native/NativeMethods.c:794:15: style: Variable 'locked' is reassigned a value before the old one has been used. [redundantAssignment]
       locked = false;
              ^
LitebaseSDK/src/native/NativeMethods.c:790:15: note: locked is assigned
       locked = true;
              ^
LitebaseSDK/src/native/NativeMethods.c:794:15: note: locked is overwritten
       locked = false;
              ^
LitebaseSDK/src/native/NativeMethods.c:1786:21: style: Variable 'nameStr' is reassigned a value before the old one has been used. [redundantAssignment]
       || !(nameStr = TC_createStringObjectFromTCHARP(context, name, -1)))
                    ^
LitebaseSDK/src/native/NativeMethods.c:1784:11: note: nameStr is assigned
  nameStr = null;
          ^
LitebaseSDK/src/native/NativeMethods.c:1786:21: note: nameStr is overwritten
       || !(nameStr = TC_createStringObjectFromTCHARP(context, name, -1)))
                    ^
LitebaseSDK/src/native/NativeMethods.c:4908:21: style: Variable 'locked' is reassigned a value before the old one has been used. [redundantAssignment]
             locked = false;
                    ^
LitebaseSDK/src/native/NativeMethods.c:4901:23: note: locked is assigned
               locked = true;
                      ^
LitebaseSDK/src/native/NativeMethods.c:4908:21: note: locked is overwritten
             locked = false;
                    ^
LitebaseSDK/src/native/NativeMethods.c:1232:12: style: The scope of the variable 'tableNameCharP' can be reduced. [variableScope]
      char tableNameCharP[DBNAME_SIZE],
           ^
LitebaseSDK/src/native/NativeMethods.c:1233:12: style: The scope of the variable 'bufName' can be reduced. [variableScope]
           bufName[DBNAME_SIZE];
           ^
LitebaseSDK/src/native/NativeMethods.c:1959:13: style: The scope of the variable 'resultSet' can be reduced. [variableScope]
 ResultSet* resultSet;
            ^
LitebaseSDK/src/native/NativeMethods.c:3922:29: style: The scope of the variable 'field' can be reduced. [variableScope]
         SQLResultSetField* field;
                            ^
LitebaseSDK/src/native/NativeMethods.c:4421:29: style: The scope of the variable 'field' can be reduced. [variableScope]
         SQLResultSetField* field;
                            ^
LitebaseSDK/src/native/NativeMethods.c:4539:29: style: The scope of the variable 'field' can be reduced. [variableScope]
         SQLResultSetField* field;
                            ^
LitebaseSDK/src/native/NativeMethods.c:4783:29: style: The scope of the variable 'field' can be reduced. [variableScope]
         SQLResultSetField* field;
                            ^
LitebaseSDK/src/native/NativeMethods.c:249:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, SHORT_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:249:4: note: Shadow variable
   getByIndex(p, SHORT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:266:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, INT_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:266:4: note: Shadow variable
   getByIndex(p, INT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:283:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, LONG_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:283:4: note: Shadow variable
   getByIndex(p, LONG_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:300:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, FLOAT_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:300:4: note: Shadow variable
   getByIndex(p, FLOAT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:317:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, DOUBLE_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:317:4: note: Shadow variable
   getByIndex(p, DOUBLE_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:334:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, CHARS_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:334:4: note: Shadow variable
   getByIndex(p, CHARS_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:351:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, BLOB_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:351:4: note: Shadow variable
   getByIndex(p, BLOB_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:368:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, DATE_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:368:4: note: Shadow variable
   getByIndex(p, DATE_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:386:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, DATETIME_TYPE);
   ^
LitebaseSDK/src/native/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:386:4: note: Shadow variable
   getByIndex(p, DATETIME_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:435:4: style: Local variable 'TC_setObjectLock' shadows outer variable [shadowVariable]
   TC_setObjectLock(p->retO = create(p->currentContext, TC_getApplicationId(), null), UNLOCKED);
   ^
LitebaseSDK/src/native/LitebaseGlobals.h:119:26: note: Shadowed declaration
extern setObjectLockFunc TC_setObjectLock;
                         ^
LitebaseSDK/src/native/NativeMethods.c:435:4: note: Shadow variable
   TC_setObjectLock(p->retO = create(p->currentContext, TC_getApplicationId(), null), UNLOCKED);
   ^
LitebaseSDK/src/native/NativeMethods.c:2010:22: style: Local variable 'length' shadows outer variable [shadowVariable]
               int32 length = String_charsLen(exceptionMsg);
                     ^
LitebaseSDK/src/native/NativeMethods.c:1956:6: note: Shadowed declaration
     length = ARRAYOBJ_LEN(sql),
     ^
LitebaseSDK/src/native/NativeMethods.c:2010:22: note: Shadow variable
               int32 length = String_charsLen(exceptionMsg);
                     ^
LitebaseSDK/src/native/NativeMethods.c:2417:18: style: Local variable 'buffer' shadows outer variable [shadowVariable]
            char buffer[1024];
                 ^
LitebaseSDK/src/native/NativeMethods.c:2366:16: note: Shadowed declaration
         TCHAR buffer[MAX_PATHNAME];
               ^
LitebaseSDK/src/native/NativeMethods.c:2417:18: note: Shadow variable
            char buffer[1024];
                 ^
LitebaseSDK/src/native/NativeMethods.c:2709:4: style: Local variable 'lLC_isOpen_s' shadows outer function [shadowFunction]
   lLC_isOpen_s(p);
   ^
LitebaseSDK/src/native/NativeMethods.h:467:13: note: Shadowed declaration
LB_API void lLC_isOpen_s(NMParams p);
            ^
LitebaseSDK/src/native/NativeMethods.c:2709:4: note: Shadow variable
   lLC_isOpen_s(p);
   ^
LitebaseSDK/src/native/NativeMethods.c:2891:4: style: Local variable 'encDecTables' shadows outer function [shadowFunction]
   encDecTables(p, true);
   ^
LitebaseSDK/src/native/Litebase.h:271:6: note: Shadowed declaration
void encDecTables(NMParams params, bool toEncrypt);
     ^
LitebaseSDK/src/native/NativeMethods.c:2891:4: note: Shadow variable
   encDecTables(p, true);
   ^
LitebaseSDK/src/native/NativeMethods.c:2907:4: style: Local variable 'encDecTables' shadows outer function [shadowFunction]
   encDecTables(p, false);
   ^
LitebaseSDK/src/native/Litebase.h:271:6: note: Shadowed declaration
void encDecTables(NMParams params, bool toEncrypt);
     ^
LitebaseSDK/src/native/NativeMethods.c:2907:4: note: Shadow variable
   encDecTables(p, false);
   ^
LitebaseSDK/src/native/NativeMethods.c:3134:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, SHORT_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3134:4: note: Shadow variable
   rsGetByIndex(p, SHORT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3152:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, SHORT_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3152:4: note: Shadow variable
   rsGetByName(p, SHORT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3169:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, INT_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3169:4: note: Shadow variable
   rsGetByIndex(p, INT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3186:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, INT_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3186:4: note: Shadow variable
   rsGetByName(p, INT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3203:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, LONG_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3203:4: note: Shadow variable
   rsGetByIndex(p, LONG_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3220:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, LONG_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3220:4: note: Shadow variable
   rsGetByName(p, LONG_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3237:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, FLOAT_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3237:4: note: Shadow variable
   rsGetByIndex(p, FLOAT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3254:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, FLOAT_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3254:4: note: Shadow variable
   rsGetByName(p, FLOAT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3271:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, DOUBLE_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3271:4: note: Shadow variable
   rsGetByIndex(p, DOUBLE_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3288:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, DOUBLE_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3288:4: note: Shadow variable
   rsGetByName(p, DOUBLE_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3305:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, CHARS_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3305:4: note: Shadow variable
   rsGetByIndex(p, CHARS_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3322:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, CHARS_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3322:4: note: Shadow variable
   rsGetByName(p, CHARS_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3339:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, UNDEFINED_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3339:4: note: Shadow variable
   rsGetByIndex(p, UNDEFINED_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3357:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, -1);
   ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3357:4: note: Shadow variable
   rsGetByName(p, -1);
   ^
LitebaseSDK/src/native/NativeMethods.c:3374:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, BLOB_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3374:4: note: Shadow variable
   rsGetByIndex(p, BLOB_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3391:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, BLOB_TYPE);
   ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3391:4: note: Shadow variable
   rsGetByName(p, BLOB_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:3411:4: style: Local variable 'getStrings' shadows outer function [shadowFunction]
   getStrings(p, p->i32[0]); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
   ^
LitebaseSDK/src/native/ResultSet.h:190:6: note: Shadowed declaration
void getStrings(NMParams p, int32 count); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
     ^
LitebaseSDK/src/native/NativeMethods.c:3411:4: note: Shadow variable
   getStrings(p, p->i32[0]); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
   ^
LitebaseSDK/src/native/NativeMethods.c:3430:4: style: Local variable 'getStrings' shadows outer function [shadowFunction]
   getStrings(p, -1); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
   ^
LitebaseSDK/src/native/ResultSet.h:190:6: note: Shadowed declaration
void getStrings(NMParams p, int32 count); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
     ^
LitebaseSDK/src/native/NativeMethods.c:3430:4: note: Shadow variable
   getStrings(p, -1); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
   ^
LitebaseSDK/src/native/NativeMethods.c:3447:2: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
 rsGetByIndex(p, DATE_TYPE);
 ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3447:2: note: Shadow variable
 rsGetByIndex(p, DATE_TYPE);
 ^
LitebaseSDK/src/native/NativeMethods.c:3465:2: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
 rsGetByName(p, DATE_TYPE);
 ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3465:2: note: Shadow variable
 rsGetByName(p, DATE_TYPE);
 ^
LitebaseSDK/src/native/NativeMethods.c:3484:2: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
 rsGetByIndex(p, DATETIME_TYPE);
 ^
LitebaseSDK/src/native/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3484:2: note: Shadow variable
 rsGetByIndex(p, DATETIME_TYPE);
 ^
LitebaseSDK/src/native/NativeMethods.c:3504:2: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
 rsGetByName(p, DATETIME_TYPE);
 ^
LitebaseSDK/src/native/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:3504:2: note: Shadow variable
 rsGetByName(p, DATETIME_TYPE);
 ^
LitebaseSDK/src/native/NativeMethods.c:4366:4: style: Local variable 'lRSMD_getColumnTableName_i' shadows outer function [shadowFunction]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
LitebaseSDK/src/native/NativeMethods.h:943:13: note: Shadowed declaration
LB_API void lRSMD_getColumnTableName_i(NMParams p);
            ^
LitebaseSDK/src/native/NativeMethods.c:4366:4: note: Shadow variable
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
LitebaseSDK/src/native/NativeMethods.c:4484:4: style: Local variable 'lRSMD_getColumnTableName_i' shadows outer function [shadowFunction]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
LitebaseSDK/src/native/NativeMethods.h:943:13: note: Shadowed declaration
LB_API void lRSMD_getColumnTableName_i(NMParams p);
            ^
LitebaseSDK/src/native/NativeMethods.c:4484:4: note: Shadow variable
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
LitebaseSDK/src/native/NativeMethods.c:4737:4: style: Local variable 'lRSMD_getColumnTableName_i' shadows outer function [shadowFunction]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
LitebaseSDK/src/native/NativeMethods.h:943:13: note: Shadowed declaration
LB_API void lRSMD_getColumnTableName_i(NMParams p);
            ^
LitebaseSDK/src/native/NativeMethods.c:4737:4: note: Shadow variable
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
LitebaseSDK/src/native/NativeMethods.c:5034:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, SHORT_TYPE);
   ^
LitebaseSDK/src/native/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:5034:4: note: Shadow variable
   psSetNumericParamValue(p, SHORT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:5051:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, INT_TYPE);
   ^
LitebaseSDK/src/native/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:5051:4: note: Shadow variable
   psSetNumericParamValue(p, INT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:5068:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, LONG_TYPE);
   ^
LitebaseSDK/src/native/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:5068:4: note: Shadow variable
   psSetNumericParamValue(p, LONG_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:5085:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, FLOAT_TYPE);
   ^
LitebaseSDK/src/native/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:5085:4: note: Shadow variable
   psSetNumericParamValue(p, FLOAT_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:5102:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, DOUBLE_TYPE);
   ^
LitebaseSDK/src/native/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
LitebaseSDK/src/native/NativeMethods.c:5102:4: note: Shadow variable
   psSetNumericParamValue(p, DOUBLE_TYPE);
   ^
LitebaseSDK/src/native/NativeMethods.c:249:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, SHORT_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:266:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, INT_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:283:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, LONG_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:300:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, FLOAT_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:317:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, DOUBLE_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:334:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, CHARS_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:351:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, BLOB_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:368:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, DATE_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:386:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, DATETIME_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:435:20: style: Variable 'TC_setObjectLock' is assigned a value that is never used. [unreadVariable]
   TC_setObjectLock(p->retO = create(p->currentContext, TC_getApplicationId(), null), UNLOCKED);
                   ^
LitebaseSDK/src/native/NativeMethods.c:1711:9: style: Variable 'LOCKVAR' is assigned a value that is never used. [unreadVariable]
 LOCKVAR(log);
        ^
LitebaseSDK/src/native/NativeMethods.c:1728:9: style: Variable 'LOCKVAR' is assigned a value that is never used. [unreadVariable]
 LOCKVAR(log);
        ^
LitebaseSDK/src/native/NativeMethods.c:1954:8: style: Unused variable: i [unusedVariable]
 int32 i,
       ^
LitebaseSDK/src/native/NativeMethods.c:2891:16: style: Variable 'encDecTables' is assigned a value that is never used. [unreadVariable]
   encDecTables(p, true);
               ^
LitebaseSDK/src/native/NativeMethods.c:2907:16: style: Variable 'encDecTables' is assigned a value that is never used. [unreadVariable]
   encDecTables(p, false);
               ^
LitebaseSDK/src/native/NativeMethods.c:3134:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, SHORT_TYPE);
               ^
LitebaseSDK/src/native/NativeMethods.c:3152:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, SHORT_TYPE);
              ^
LitebaseSDK/src/native/NativeMethods.c:3169:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, INT_TYPE);
               ^
LitebaseSDK/src/native/NativeMethods.c:3186:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, INT_TYPE);
              ^
LitebaseSDK/src/native/NativeMethods.c:3203:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, LONG_TYPE);
               ^
LitebaseSDK/src/native/NativeMethods.c:3220:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, LONG_TYPE);
              ^
LitebaseSDK/src/native/NativeMethods.c:3237:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, FLOAT_TYPE);
               ^
LitebaseSDK/src/native/NativeMethods.c:3254:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, FLOAT_TYPE);
              ^
LitebaseSDK/src/native/NativeMethods.c:3271:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, DOUBLE_TYPE);
               ^
LitebaseSDK/src/native/NativeMethods.c:3288:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, DOUBLE_TYPE);
              ^
LitebaseSDK/src/native/NativeMethods.c:3305:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, CHARS_TYPE);
               ^
LitebaseSDK/src/native/NativeMethods.c:3322:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, CHARS_TYPE);
              ^
LitebaseSDK/src/native/NativeMethods.c:3339:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, UNDEFINED_TYPE);
               ^
LitebaseSDK/src/native/NativeMethods.c:3357:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, -1);
              ^
LitebaseSDK/src/native/NativeMethods.c:3374:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, BLOB_TYPE);
               ^
LitebaseSDK/src/native/NativeMethods.c:3391:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, BLOB_TYPE);
              ^
LitebaseSDK/src/native/NativeMethods.c:3411:14: style: Variable 'getStrings' is assigned a value that is never used. [unreadVariable]
   getStrings(p, p->i32[0]); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
             ^
LitebaseSDK/src/native/NativeMethods.c:3430:14: style: Variable 'getStrings' is assigned a value that is never used. [unreadVariable]
   getStrings(p, -1); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
             ^
LitebaseSDK/src/native/NativeMethods.c:3447:14: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
 rsGetByIndex(p, DATE_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:3465:13: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
 rsGetByName(p, DATE_TYPE);
            ^
LitebaseSDK/src/native/NativeMethods.c:3484:14: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
 rsGetByIndex(p, DATETIME_TYPE);
             ^
LitebaseSDK/src/native/NativeMethods.c:3504:13: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
 rsGetByName(p, DATETIME_TYPE);
            ^
LitebaseSDK/src/native/NativeMethods.c:4366:30: style: Variable 'lRSMD_getColumnTableName_i' is assigned a value that is never used. [unreadVariable]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
                             ^
LitebaseSDK/src/native/NativeMethods.c:4484:30: style: Variable 'lRSMD_getColumnTableName_i' is assigned a value that is never used. [unreadVariable]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
                             ^
LitebaseSDK/src/native/NativeMethods.c:4737:30: style: Variable 'lRSMD_getColumnTableName_i' is assigned a value that is never used. [unreadVariable]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
                             ^
LitebaseSDK/src/native/NativeMethods.c:5034:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, SHORT_TYPE);
                         ^
LitebaseSDK/src/native/NativeMethods.c:5051:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, INT_TYPE);
                         ^
LitebaseSDK/src/native/NativeMethods.c:5068:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, LONG_TYPE);
                         ^
LitebaseSDK/src/native/NativeMethods.c:5085:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, FLOAT_TYPE);
                         ^
LitebaseSDK/src/native/NativeMethods.c:5102:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, DOUBLE_TYPE);
                         ^
LitebaseSDK/src/native/NativeMethods.c:23:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_next")
 ^
LitebaseSDK/src/native/NativeMethods.c:117:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_setSynced")
 ^
LitebaseSDK/src/native/NativeMethods.c:159:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_setNotSynced")
 ^
LitebaseSDK/src/native/NativeMethods.c:201:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_close")
 ^
LitebaseSDK/src/native/NativeMethods.c:230:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_reset")
 ^
LitebaseSDK/src/native/NativeMethods.c:247:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getShort_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:264:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getInt_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:281:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getLong_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:298:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getFloat_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:315:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getDouble_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:332:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getString_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:349:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getBlob_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:366:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getDate_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:384:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getDateTime_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:404:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRI_isNull_i")
   ^
LitebaseSDK/src/native/NativeMethods.c:433:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateGetInstance")
 ^
LitebaseSDK/src/native/NativeMethods.c:454:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateGetInstance_s")
 ^
LitebaseSDK/src/native/NativeMethods.c:501:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateGetInstance_ss")
 ^
LitebaseSDK/src/native/NativeMethods.c:533:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_getSourcePath")
 ^
LitebaseSDK/src/native/NativeMethods.c:1224:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_exists_s")
 ^
LitebaseSDK/src/native/NativeMethods.c:1709:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateGetLogger")
 ^
LitebaseSDK/src/native/NativeMethods.c:1726:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateSetLogger_l")
 ^
LitebaseSDK/src/native/NativeMethods.c:1945:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateProcessLogs_Ssb")
 ^
LitebaseSDK/src/native/NativeMethods.c:2562:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lLC_getSlot")
   ^
LitebaseSDK/src/native/NativeMethods.c:2580:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lLC_isOpen_s")
   ^
LitebaseSDK/src/native/NativeMethods.c:2889:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lLC_encryptTables_ssi")
   ^
LitebaseSDK/src/native/NativeMethods.c:2905:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lLC_decryptTables_ssi")
   ^
LitebaseSDK/src/native/NativeMethods.c:2922:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getResultSetMetaData")
 ^
LitebaseSDK/src/native/NativeMethods.c:2950:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_close")
 ^
LitebaseSDK/src/native/NativeMethods.c:2976:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_beforeFirst")
 ^
LitebaseSDK/src/native/NativeMethods.c:2997:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_afterLast")
 ^
LitebaseSDK/src/native/NativeMethods.c:3022:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_first")
 ^
LitebaseSDK/src/native/NativeMethods.c:3055:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_last")
 ^
LitebaseSDK/src/native/NativeMethods.c:3088:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_next")
 ^
LitebaseSDK/src/native/NativeMethods.c:3110:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_prev")
 ^
LitebaseSDK/src/native/NativeMethods.c:3132:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getShort_i");
   ^
LitebaseSDK/src/native/NativeMethods.c:3150:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getShort_s");
   ^
LitebaseSDK/src/native/NativeMethods.c:3167:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getInt_i");
   ^
LitebaseSDK/src/native/NativeMethods.c:3184:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getInt_s");
   ^
LitebaseSDK/src/native/NativeMethods.c:3201:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getLong_i");
   ^
LitebaseSDK/src/native/NativeMethods.c:3218:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getLong_s");
   ^
LitebaseSDK/src/native/NativeMethods.c:3235:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getFloat_i");
   ^
LitebaseSDK/src/native/NativeMethods.c:3252:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getFloat_s");
   ^
LitebaseSDK/src/native/NativeMethods.c:3269:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getDouble_i");
   ^
LitebaseSDK/src/native/NativeMethods.c:3286:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getDouble_s");
   ^
LitebaseSDK/src/native/NativeMethods.c:3303:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getChars_i");
   ^
LitebaseSDK/src/native/NativeMethods.c:3320:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getChars_s");
   ^
LitebaseSDK/src/native/NativeMethods.c:3337:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getString_i");
   ^
LitebaseSDK/src/native/NativeMethods.c:3355:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getString_s");
   ^
LitebaseSDK/src/native/NativeMethods.c:3372:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getBlob_i");
   ^
LitebaseSDK/src/native/NativeMethods.c:3389:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getBlob_s");
   ^
LitebaseSDK/src/native/NativeMethods.c:3409:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getStrings_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:3428:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getStrings")
 ^
LitebaseSDK/src/native/NativeMethods.c:3445:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getDate_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:3463:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getDate_s")
 ^
LitebaseSDK/src/native/NativeMethods.c:3482:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getDateTime_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:3502:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getDateTime_s")
 ^
LitebaseSDK/src/native/NativeMethods.c:3771:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_setDecimalPlaces_ii")
 ^
LitebaseSDK/src/native/NativeMethods.c:3819:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getRowCount")
 ^
LitebaseSDK/src/native/NativeMethods.c:3847:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_isNull_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:3871:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_isNull_s")
 ^
LitebaseSDK/src/native/NativeMethods.c:3901:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_rowToString")
   ^
LitebaseSDK/src/native/NativeMethods.c:4010:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnCount")
 ^
LitebaseSDK/src/native/NativeMethods.c:4123:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnLabel_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:4164:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnType_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:4253:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnTableName_i")
 ^
LitebaseSDK/src/native/NativeMethods.c:4297:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnTableName_s")
 ^
LitebaseSDK/src/native/NativeMethods.c:4360:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_hasDefaultValue_i")
   ^
LitebaseSDK/src/native/NativeMethods.c:4408:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_hasDefaultValue_s")
   ^
LitebaseSDK/src/native/NativeMethods.c:4477:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_isNotNull_i")
   ^
LitebaseSDK/src/native/NativeMethods.c:4526:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_isNotNull_s")
   ^
LitebaseSDK/src/native/NativeMethods.c:4730:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_getDefaultValue_i")
   ^
LitebaseSDK/src/native/NativeMethods.c:4770:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_getDefaultValue_s")
   ^
LitebaseSDK/src/native/NativeMethods.c:5032:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setShort_is")
 ^
LitebaseSDK/src/native/NativeMethods.c:5049:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setInt_ii")
 ^
LitebaseSDK/src/native/NativeMethods.c:5066:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setLong_il")
 ^
LitebaseSDK/src/native/NativeMethods.c:5083:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setFloat_id")
 ^
LitebaseSDK/src/native/NativeMethods.c:5100:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setDouble_id")
 ^
LitebaseSDK/src/native/NativeMethods.c:5119:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setString_is")
 ^
LitebaseSDK/src/native/NativeMethods.c:5289:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setDateTime_id")
 ^
LitebaseSDK/src/native/NativeMethods.c:5521:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lPS_close")
   ^
LitebaseSDK/src/native/NativeMethods.c:5545:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lPS_isValid")
   ^
LitebaseSDK/src/native/Node.c:31:9: style: The scope of the variable 'key' can be reduced. [variableScope]
   Key* key;
        ^
LitebaseSDK/src/native/Node.c:23:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createNode")
 ^
LitebaseSDK/src/native/Node.c:58:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeLoad")
 ^
LitebaseSDK/src/native/Node.c:98:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeSaveDirtyKey")
 ^
LitebaseSDK/src/native/Node.c:123:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeSave")
 ^
LitebaseSDK/src/native/Node.c:200:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeSet")
 ^
LitebaseSDK/src/native/Node.c:218:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeFindIn")
 ^
LitebaseSDK/src/native/Node.c:255:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeInsert")
 ^
LitebaseSDK/src/native/Node.c:287:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE(delayed ? "nodeSetWriteDelayed on" : "nodeSetWriteDelayed off")
   ^
LitebaseSDK/src/native/NormalFile.c:38:12: style: Local variable 'buffer' shadows outer variable [shadowVariable]
      char buffer[1024];
           ^
LitebaseSDK/src/native/NormalFile.c:29:10: note: Shadowed declaration
   TCHAR buffer[MAX_PATHNAME];
         ^
LitebaseSDK/src/native/NormalFile.c:38:12: note: Shadow variable
      char buffer[1024];
           ^
LitebaseSDK/src/native/NormalFile.c:28:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfCreateFile")
 ^
LitebaseSDK/src/native/NormalFile.c:94:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfReadBytes")
 ^
LitebaseSDK/src/native/NormalFile.c:128:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfWriteBytes")
 ^
LitebaseSDK/src/native/NormalFile.c:227:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfSetPos")
 ^
LitebaseSDK/src/native/NormalFile.c:244:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("nfRename")
   ^
LitebaseSDK/src/native/NormalFile.c:291:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfClose")
 ^
LitebaseSDK/src/native/NormalFile.c:337:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfRemove")
 ^
LitebaseSDK/src/native/NormalFile.c:373:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("refreshCache")
 ^
LitebaseSDK/src/native/NormalFile.c:464:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("fileError")
   ^
LitebaseSDK/src/native/PlainDB.c:306:45: style:inconclusive: Boolean expression '!plainDB->wasNotSavedCorrectly' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
    *pointer++ = plainDB->isAscii? IS_ASCII | !plainDB->wasNotSavedCorrectly : !plainDB->wasNotSavedCorrectly;
                                            ^
LitebaseSDK/src/native/PlainDB.c:306:45: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
    *pointer++ = plainDB->isAscii? IS_ASCII | !plainDB->wasNotSavedCorrectly : !plainDB->wasNotSavedCorrectly;
                                            ^
LitebaseSDK/src/native/PlainDB.c:32:9: style: The scope of the variable 'buffer' can be reduced. [variableScope]
   char buffer[DBNAME_SIZE];
        ^
LitebaseSDK/src/native/PlainDB.c:31:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("createPlainDB")
   ^
LitebaseSDK/src/native/PlainDB.c:80:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainSetRowSize")
 ^
LitebaseSDK/src/native/PlainDB.c:98:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainAdd")
 ^
LitebaseSDK/src/native/PlainDB.c:118:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainWrite")
 ^
LitebaseSDK/src/native/PlainDB.c:137:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainRead")
 ^
LitebaseSDK/src/native/PlainDB.c:151:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainRewrite")
 ^
LitebaseSDK/src/native/PlainDB.c:166:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainRename")
 ^
LitebaseSDK/src/native/PlainDB.c:204:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainWriteMetaData")
 ^
LitebaseSDK/src/native/PlainDB.c:245:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainReadMetaData")
 ^
LitebaseSDK/src/native/PlainDB.c:286:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainClose")
 ^
LitebaseSDK/src/native/PlainDB.c:331:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainRemove")
 ^
LitebaseSDK/src/native/PlainDB.c:352:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainSetPos")
 ^
LitebaseSDK/src/native/PlainDB.c:381:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainShrinkToSize")
 ^
LitebaseSDK/src/native/PlainDB.c:749:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("recordNotDeleted")
 ^
LitebaseSDK/src/native/PlainDB.c:767:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("loadString")
   ^
LitebaseSDK/src/native/PreparedStatement.c:195:29: style: Variable 'string' is assigned a value that is never used. [unreadVariable]
               if (!(string = paramsAsStrs[index] = TC_CharP2JCharP(ptr, length)))
                            ^
LitebaseSDK/src/native/PreparedStatement.c:269:39: style: Variable 'paramAsStr[stringLength+2]' is assigned a value that is never used. [unreadVariable]
         paramAsStr[stringLength + 2] = 0;
                                      ^
LitebaseSDK/src/native/PreparedStatement.c:289:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("toStringBuffer")
   ^
LitebaseSDK/src/native/PreparedStatement.c:331:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resetWhereClause")
 ^
LitebaseSDK/src/native/PreparedStatement.c:353:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resetColumnListClause")
 ^
LitebaseSDK/src/native/PreparedStatement.c:380:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rearrangeNullsInTable")
 ^
LitebaseSDK/src/native/PreparedStatement.c:399:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("testPSClosed")
   ^
LitebaseSDK/src/native/ResultSet.c:958:102: warning: Comparison of a boolean expression with an integer other than 0 or 1. [compareBoolExpressionWithInt]
                        if ((ret = sqlBooleanClauseSatisfied(context, whereClause, resultSet, heap)) == -1)
                                                                                                     ^
LitebaseSDK/src/native/ResultSet.c:979:99: warning: Comparison of a boolean expression with an integer other than 0 or 1. [compareBoolExpressionWithInt]
                     if ((ret = sqlBooleanClauseSatisfied(context, whereClause, resultSet, heap)) == -1)
                                                                                                  ^
LitebaseSDK/src/native/ResultSet.c:998:93: warning: Comparison of a boolean expression with an integer other than 0 or 1. [compareBoolExpressionWithInt]
               if ((ret = sqlBooleanClauseSatisfied(context, whereClause, resultSet, heap)) == -1)
                                                                                            ^
LitebaseSDK/src/native/ResultSet.c:166:9: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   if (!(isDeleted = (value & ROW_ATTR_MASK) == ROW_ATTR_DELETED))
        ^
LitebaseSDK/src/native/ResultSet.c:182:5: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
 if ((ret = resultSet->pos < rowCountLess1 && plainRead(context, plainDB, ++resultSet->pos)))
    ^
LitebaseSDK/src/native/ResultSet.c:232:9: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   if (!(isDeleted = (value & ROW_ATTR_MASK) == ROW_ATTR_DELETED))
        ^
LitebaseSDK/src/native/ResultSet.c:248:7: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   if ((ret = resultSet->pos > 0 && plainRead(context, plainDB, --resultSet->pos)))
      ^
LitebaseSDK/src/native/ResultSet.c:574:20: style: The scope of the variable 'strings' can be reduced. [variableScope]
         TCObject* strings;
                   ^
LitebaseSDK/src/native/ResultSet.c:561:26: style:inconclusive: Function 'getStrings' argument 1 names different: declaration 'p' definition 'params'. [funcArgNamesDifferent]
void getStrings(NMParams params, int32 count) // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
                         ^
LitebaseSDK/src/native/ResultSet.h:190:26: note: Function 'getStrings' argument 1 names different: declaration 'p' definition 'params'.
void getStrings(NMParams p, int32 count); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
                         ^
LitebaseSDK/src/native/ResultSet.c:561:26: note: Function 'getStrings' argument 1 names different: declaration 'p' definition 'params'.
void getStrings(NMParams params, int32 count) // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
                         ^
LitebaseSDK/src/native/ResultSet.c:29:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("freeResultSet")
 ^
LitebaseSDK/src/native/ResultSet.c:57:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createResultSet")
 ^
LitebaseSDK/src/native/ResultSet.c:77:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createSimpleResultSet")
 ^
LitebaseSDK/src/native/ResultSet.c:107:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createResultSetForSelect")
 ^
LitebaseSDK/src/native/ResultSet.c:128:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resultSetNext")
 ^
LitebaseSDK/src/native/ResultSet.c:196:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resultSetPrev")
 ^
LitebaseSDK/src/native/ResultSet.c:263:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("rsGetShort")
   ^
LitebaseSDK/src/native/ResultSet.c:279:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetInt")
 ^
LitebaseSDK/src/native/ResultSet.c:300:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetLong")
 ^
LitebaseSDK/src/native/ResultSet.c:316:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetFloat")
 ^
LitebaseSDK/src/native/ResultSet.c:332:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetDouble")
 ^
LitebaseSDK/src/native/ResultSet.c:352:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetChars")
 ^
LitebaseSDK/src/native/ResultSet.c:405:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetInt")
 ^
LitebaseSDK/src/native/ResultSet.c:426:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetBlob")
 ^
LitebaseSDK/src/native/ResultSet.c:563:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getStrings")
 ^
LitebaseSDK/src/native/ResultSet.c:702:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetByIndex")
 ^
LitebaseSDK/src/native/ResultSet.c:727:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetByName")
 ^
LitebaseSDK/src/native/ResultSet.c:890:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("verifyRSState")
 ^
LitebaseSDK/src/native/ResultSet.c:917:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getNextRecord")
 ^
LitebaseSDK/src/native/ResultSet.c:1019:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("formatDate")
 ^
LitebaseSDK/src/native/ResultSet.c:1064:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("formatTime")
 ^
LitebaseSDK/src/native/ResultSet.c:1113:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("zeroPad")
 ^
LitebaseSDK/src/native/ResultSet.c:1130:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("identHashCode")
 ^
LitebaseSDK/src/native/ResultSet.c:1322:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("loadPlainDBAndPosition")
   ^
LitebaseSDK/src/native/ResultSet.c:1347:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("testRSClosed")
   ^
LitebaseSDK/src/native/SQLValue.c:348:1: style: Label 'finish' is not used. [unusedLabel]
finish : ;
^
LitebaseSDK/src/native/SQLValue.c:532:1: style: Label 'finish' is not used. [unusedLabel]
finish : ;
^
LitebaseSDK/src/native/SQLValue.c:21:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("newSQLValues")
 ^
LitebaseSDK/src/native/TCVMLib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
LitebaseSDK/src/native/TCVMLib.c:181:1: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
finish: ;
^
LitebaseSDK/src/native/Table.c:2612:13: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
            values[i] = &oldValues[i];
            ^
LitebaseSDK/src/native/Table.c:730:38: style:inconclusive: Boolean expression '!table->isModified' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
 *ptr++ = plainDB->isAscii? IS_ASCII | !table->isModified : !table->isModified; // juliana@226_4: table is not saved correctly yet if modified.
                                     ^
LitebaseSDK/src/native/Table.c:730:38: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 *ptr++ = plainDB->isAscii? IS_ASCII | !table->isModified : !table->isModified; // juliana@226_4: table is not saved correctly yet if modified.
                                     ^
LitebaseSDK/src/native/Table.c:1260:8: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   if ((result = types[0] == DATETIME_TYPE) || result == LONG_TYPE || result == DOUBLE_TYPE)
       ^
LitebaseSDK/src/native/Table.c:41:14: style: The scope of the variable 'columns' can be reduced. [variableScope]
      uint8* columns;
             ^
LitebaseSDK/src/native/Table.c:126:11: style: The scope of the variable 'idxColumns' can be reduced. [variableScope]
   uint8* idxColumns;
          ^
LitebaseSDK/src/native/Table.c:1290:15: style: The scope of the variable 'mid' can be reduced. [variableScope]
   SQLValue** mid;
              ^
LitebaseSDK/src/native/Table.c:2200:9: style: The scope of the variable 'changePos' can be reduced. [variableScope]
   bool changePos,
        ^
LitebaseSDK/src/native/Table.c:2203:9: style: The scope of the variable 'hasIndex' can be reduced. [variableScope]
        hasIndex,
        ^
LitebaseSDK/src/native/Table.c:2204:9: style: The scope of the variable 'isNullVOld' can be reduced. [variableScope]
        isNullVOld,
        ^
LitebaseSDK/src/native/Table.c:2205:9: style: The scope of the variable 'isNull' can be reduced. [variableScope]
        isNull;
        ^
LitebaseSDK/src/native/Table.c:2218:11: style: The scope of the variable 'idx' can be reduced. [variableScope]
   Index* idx;
          ^
LitebaseSDK/src/native/Table.c:2385:12: style: The scope of the variable 'remove' can be reduced. [variableScope]
      bool remove, // juliana@230_43
           ^
LitebaseSDK/src/native/Table.c:2386:12: style: The scope of the variable 'change' can be reduced. [variableScope]
           change; // juliana@252_2: corrected a bug of possible composed index corruption when updating or deleting data.
           ^
LitebaseSDK/src/native/Table.c:3083:9: style: The scope of the variable 'name' can be reduced. [variableScope]
   char name[DBNAME_SIZE];
        ^
LitebaseSDK/src/native/Table.c:496:21: style: Local variable 'buffer' shadows outer variable [shadowVariable]
               char buffer[1024];
                    ^
LitebaseSDK/src/native/Table.c:321:10: note: Shadowed declaration
   uint8 buffer[512]; // A buffer for small metadata.
         ^
LitebaseSDK/src/native/Table.c:496:21: note: Shadow variable
               char buffer[1024];
                    ^
LitebaseSDK/src/native/Table.c:643:21: style: Local variable 'buffer' shadows outer variable [shadowVariable]
               char buffer[1024];
                    ^
LitebaseSDK/src/native/Table.c:321:10: note: Shadowed declaration
   uint8 buffer[512]; // A buffer for small metadata.
         ^
LitebaseSDK/src/native/Table.c:643:21: note: Shadow variable
               char buffer[1024];
                    ^
LitebaseSDK/src/native/Table.c:27:14: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
   int32 idx = -1,
             ^
LitebaseSDK/src/native/Table.c:3284:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/Table.c:26:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("verifyIfIndexAlreadyExists")
 ^
LitebaseSDK/src/native/Table.c:91:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("driverDropIndex") // Column does not have an index.
   ^
LitebaseSDK/src/native/Table.c:123:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("driverDropComposedIndex")
 ^
LitebaseSDK/src/native/Table.c:189:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("deleteAllIndexes")
 ^
LitebaseSDK/src/native/Table.c:234:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("computeColumnOffsets")
 ^
LitebaseSDK/src/native/Table.c:862:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("tableSetMetaData")
 ^
LitebaseSDK/src/native/Table.c:913:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getTSMDSize")
 ^
LitebaseSDK/src/native/Table.c:942:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getStringsTotalSize")
 ^
LitebaseSDK/src/native/Table.c:999:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("computeComposedIndicesTotalSize")
   ^
LitebaseSDK/src/native/Table.c:1024:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("reorder")
 ^
LitebaseSDK/src/native/Table.c:1251:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("compareSortRecords")
 ^
LitebaseSDK/src/native/Table.c:1289:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("sortRecords")
 ^
LitebaseSDK/src/native/Table.c:1357:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("radixSort")
 ^
LitebaseSDK/src/native/Table.c:1690:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("renameTable")
   ^
LitebaseSDK/src/native/Table.c:1758:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("renameColumnTable")
   ^
LitebaseSDK/src/native/Table.c:2017:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexCreateIndex")
 ^
LitebaseSDK/src/native/Table.c:2057:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexCreateComposedIndex")
 ^
LitebaseSDK/src/native/Table.c:2112:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("readRecord")
 ^
LitebaseSDK/src/native/Table.c:2530:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("writeRSRecord")
 ^
LitebaseSDK/src/native/Table.c:2567:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("checkPrimaryKey")
 ^
LitebaseSDK/src/native/Table.c:2646:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("verifyNullValues")
 ^
LitebaseSDK/src/native/Table.c:2788:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("computeCRC32")
   ^
LitebaseSDK/src/native/Table.c:2801:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("make_crc_table")
   ^
LitebaseSDK/src/native/Table.c:2830:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resetAuxRowId")
 ^
LitebaseSDK/src/native/Table.c:2853:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rowUpdated")
 ^
LitebaseSDK/src/native/Table.c:2868:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("freeTableHT")
   ^
LitebaseSDK/src/native/Table.c:2883:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("freeTable")
 ^
LitebaseSDK/src/native/Table.c:2966:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("getTableColValue")
   ^
LitebaseSDK/src/native/Table.c:2986:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("tableExistsByName")
   ^
LitebaseSDK/src/native/Table.c:3025:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getDiskTableName")
 ^
LitebaseSDK/src/native/Table.c:3055:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getTableFromName")
 ^
LitebaseSDK/src/native/Table.c:3144:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("readString")
   ^
LitebaseSDK/src/native/Table.c:3163:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("readStringArray")
 ^
LitebaseSDK/src/native/Table.c:3182:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("writeString")
 ^
LitebaseSDK/src/native/Table.c:3200:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("writeStringArray")
 ^
LitebaseSDK/src/native/Table.c:3219:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("writeString16")
 ^
LitebaseSDK/src/native/Table.c:3234:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("setModified")
   ^
LitebaseSDK/src/native/Table.c:3255:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("randBetween")
   ^
LitebaseSDK/src/native/UtilsLB.c:312:9: style: The scope of the variable 'c' can be reduced. [variableScope]
   char c;
        ^
LitebaseSDK/src/native/UtilsLB.c:366:9: style: The scope of the variable 'c' can be reduced. [variableScope]
   char c;
        ^
LitebaseSDK/src/native/UtilsLB.c:596:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
LitebaseSDK/src/native/UtilsLB.c:25:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("str16CompareTo")
 ^
LitebaseSDK/src/native/UtilsLB.c:71:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("str16StartsWith")
 ^
LitebaseSDK/src/native/UtilsLB.c:101:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("str16IndexOf")
 ^
LitebaseSDK/src/native/UtilsLB.c:189:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getDaysInMonth")
 ^
LitebaseSDK/src/native/UtilsLB.c:205:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("verifyDate")
 ^
LitebaseSDK/src/native/UtilsLB.c:229:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("strLeftTrim")
   ^
LitebaseSDK/src/native/UtilsLB.c:243:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("strTrim")
 ^
LitebaseSDK/src/native/UtilsLB.c:264:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("tstrTrim")
   ^
LitebaseSDK/src/native/UtilsLB.c:286:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("str16LeftTrim")
 ^
LitebaseSDK/src/native/UtilsLB.c:303:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("testAndPrepareDate")
 ^
LitebaseSDK/src/native/UtilsLB.c:354:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("testAndPrepareTime")
 ^
LitebaseSDK/src/native/UtilsLB.c:414:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("testAndPrepareDateAndTime")
   ^
LitebaseSDK/src/native/UtilsLB.c:457:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("newIntVector")
 ^
LitebaseSDK/src/native/UtilsLB.c:474:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("IntVectorAdd")
 ^
LitebaseSDK/src/native/UtilsLB.c:497:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("shortVector2Array")
 ^
LitebaseSDK/src/native/UtilsLB.c:513:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("shortVector2Array")
 ^
LitebaseSDK/src/native/UtilsLB.c:528:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("newIntBits")
 ^
LitebaseSDK/src/native/UtilsLB.c:592:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("compareRecords")
   ^
LitebaseSDK/src/native/UtilsLB.c:624:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("setBit")
 ^
LitebaseSDK/src/native/UtilsLB.c:640:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getFullFileName")
 ^
LitebaseSDK/src/native/UtilsLB.c:663:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("getTimeLong")
   ^
LitebaseSDK/src/native/UtilsLB.c:678:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("JCharPStartsWithCharP")
   ^
LitebaseSDK/src/native/UtilsLB.c:702:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("JCharPEqualsCharP")
   ^
LitebaseSDK/src/native/UtilsLB.c:728:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("getCurrentPath")
   ^
LitebaseSDK/src/native/UtilsLB.c:746:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("date2JCharP")
   ^
LitebaseSDK/src/native/UtilsLB.c:767:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("dateTime2JCharP")
   ^
LitebaseSDK/src/native/UtilsLB.c:785:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("str2short")
   ^
LitebaseSDK/src/native/UtilsLB.c:805:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("str2float")
   ^
LitebaseSDK/src/native/parser/LitebaseLex.c:454:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/parser/LitebaseMessage.c:613:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/parser/LitebaseMessage.c:902:1: style: Label 'finish' is not used. [unusedLabel]
finish : ;
^
LitebaseSDK/src/native/parser/LitebaseParser.c:1353:9: style: The scope of the variable 'direction' can be reduced. [variableScope]
   bool direction;
        ^
LitebaseSDK/src/native/parser/LitebaseParser.c:102:73: style:inconclusive: Function 'setOperandType' argument 2 names different: declaration 'parse' definition 'parser'. [funcArgNamesDifferent]
SQLBooleanClauseTree* setOperandType(int32 operandType, LitebaseParser* parser)
                                                                        ^
LitebaseSDK/src/native/parser/LitebaseParser.h:55:73: note: Function 'setOperandType' argument 2 names different: declaration 'parse' definition 'parser'.
SQLBooleanClauseTree* setOperandType(int32 operandType, LitebaseParser* parse);
                                                                        ^
LitebaseSDK/src/native/parser/LitebaseParser.c:102:73: note: Function 'setOperandType' argument 2 names different: declaration 'parse' definition 'parser'.
SQLBooleanClauseTree* setOperandType(int32 operandType, LitebaseParser* parser)
                                                                        ^
LitebaseSDK/src/native/parser/LitebaseParser.c:124:23: style: Local variable 'field' shadows outer function [shadowFunction]
   SQLResultSetField* field = parser->auxField;
                      ^
LitebaseSDK/src/native/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:124:23: note: Shadow variable
   SQLResultSetField* field = parser->auxField;
                      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:259:42: style: Local variable 'field' shadows outer function [shadowFunction]
                     SQLFieldDefinition* field = parser->fieldList[0];
                                         ^
LitebaseSDK/src/native/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:259:42: note: Shadow variable
                     SQLFieldDefinition* field = parser->fieldList[0];
                                         ^
LitebaseSDK/src/native/parser/LitebaseParser.c:859:26: style: Local variable 'field' shadows outer function [shadowFunction]
      SQLResultSetField* field = parser->auxField;
                         ^
LitebaseSDK/src/native/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:859:26: note: Shadow variable
      SQLResultSetField* field = parser->auxField;
                         ^
LitebaseSDK/src/native/parser/LitebaseParser.c:897:26: style: Local variable 'field' shadows outer function [shadowFunction]
      SQLResultSetField* field;
                         ^
LitebaseSDK/src/native/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:897:26: note: Shadow variable
      SQLResultSetField* field;
                         ^
LitebaseSDK/src/native/parser/LitebaseParser.c:1088:23: style: Local variable 'field' shadows outer function [shadowFunction]
   SQLResultSetField* field;
                      ^
LitebaseSDK/src/native/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:1088:23: note: Shadow variable
   SQLResultSetField* field;
                      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:1209:23: style: Local variable 'field' shadows outer function [shadowFunction]
   SQLResultSetField* field = parser->auxField = initSQLResultSetField(parser->heap);
                      ^
LitebaseSDK/src/native/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:1209:23: note: Shadow variable
   SQLResultSetField* field = parser->auxField = initSQLResultSetField(parser->heap);
                      ^
LitebaseSDK/src/native/parser/LitebaseParser.c:707:18: style: Variable 'token' is assigned a value that is never used. [unreadVariable]
      if ((token = expression(yylex(parser), parser)) != TK_CLOSE)
                 ^
LitebaseSDK/src/native/parser/LitebaseParser.c:1426:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/parser/LitebaseParser.c:1444:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
LitebaseSDK/src/native/parser/SQLBooleanClause.c:506:26: style: The scope of the variable 'tree' can be reduced. [variableScope]
   SQLBooleanClauseTree* tree;
                         ^
LitebaseSDK/src/native/parser/SQLBooleanClause.c:514:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
LitebaseSDK/src/native/parser/SQLBooleanClause.c:637:26: style: The scope of the variable 'field' can be reduced. [variableScope]
      SQLResultSetField* field;
                         ^
LitebaseSDK/src/native/parser/SQLBooleanClause.c:673:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
LitebaseSDK/src/native/parser/SQLBooleanClause.c:779:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
LitebaseSDK/src/native/parser/SQLBooleanClauseTree.c:862:24: warning: Comparison of a boolean expression with an integer. [compareBoolExpressionWithInt]
         return result < 0;
                       ^
LitebaseSDK/src/native/parser/SQLBooleanClauseTree.c:864:24: warning: Comparison of a boolean expression with an integer. [compareBoolExpressionWithInt]
         return result >= 0;
                       ^
LitebaseSDK/src/native/parser/SQLBooleanClauseTree.c:866:24: warning: Comparison of a boolean expression with an integer. [compareBoolExpressionWithInt]
         return result <= 0;
                       ^
LitebaseSDK/src/native/parser/SQLColumnListClause.c:166:22: style: The scope of the variable 'compIndex' can be reduced. [variableScope]
      ComposedIndex* compIndex;
                     ^
LitebaseSDK/src/native/parser/SQLDeleteStatement.c:376:4: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
   heapDestroy(heap);
   ^
LitebaseSDK/src/native/parser/SQLInsertStatement.c:110:14: style: The scope of the variable 'record' can be reduced. [variableScope]
   SQLValue* record;
             ^
LitebaseSDK/src/native/parser/SQLInsertStatement.c:162:12: style: The scope of the variable 'record' can be reduced. [variableScope]
 SQLValue* record;
           ^
LitebaseSDK/src/native/parser/SQLInsertStatement.c:158:111: style:inconclusive: Function 'setStrBlobParamValueIns' argument 5 names different: declaration 'len' definition 'length'. [funcArgNamesDifferent]
bool setStrBlobParamValueIns(Context context, SQLInsertStatement* insertStmt, int32 index, VoidP value, int32 length, bool isStr)
                                                                                                              ^
LitebaseSDK/src/native/parser/SQLInsertStatement.h:51:111: note: Function 'setStrBlobParamValueIns' argument 5 names different: declaration 'len' definition 'length'.
bool setStrBlobParamValueIns(Context context, SQLInsertStatement* insertStmt, int32 index, VoidP value, int32 len, bool isStr);
                                                                                                              ^
LitebaseSDK/src/native/parser/SQLInsertStatement.c:158:111: note: Function 'setStrBlobParamValueIns' argument 5 names different: declaration 'len' definition 'length'.
bool setStrBlobParamValueIns(Context context, SQLInsertStatement* insertStmt, int32 index, VoidP value, int32 length, bool isStr)
                                                                                                              ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:1303:43: style:inconclusive: Boolean expression 'hasComposedIndex' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
      hasComposedIndex = hasComposedIndex | (table->numberComposedIndexes > 0);
                                          ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:1510:18: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
            if (!(isMatch = (op = relationalOps[i]) == OP_PAT_MATCH_NOT_LIKE || op == OP_PAT_MATCH_LIKE)
                 ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:2391:59: style: Condition 'verifyWhereCondition' is always true [knownConditionTrueFalse]
                     if (resultSet->auxRowsBitmap.size && verifyWhereCondition && whereClause)
                                                          ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:2376:27: note: Assuming that condition 'verifyWhereCondition' is not redundant
   if (rowsBitmap.size && verifyWhereCondition)
                          ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:2391:59: note: Condition 'verifyWhereCondition' is always true
                     if (resultSet->auxRowsBitmap.size && verifyWhereCondition && whereClause)
                                                          ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:2551:16: style: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
               return -1;
               ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:26:23: style: The scope of the variable 'listClause' can be reduced. [variableScope]
 SQLColumnListClause* listClause;
                      ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:349:9: style: The scope of the variable 'table' can be reduced. [variableScope]
 Table *table;
        ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:381:11: style: The scope of the variable 'tableAux1' can be reduced. [variableScope]
   Table* tableAux1;
          ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:456:9: style: The scope of the variable 'table' can be reduced. [variableScope]
 Table* table;
        ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:504:21: style: The scope of the variable 'field1' can be reduced. [variableScope]
 SQLResultSetField* field1;
                    ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:676:17: style: The scope of the variable 'table' can be reduced. [variableScope]
         Table* table;
                ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:1331:20: style: The scope of the variable 'appliedComposedIndexes' can be reduced. [variableScope]
   ComposedIndex** appliedComposedIndexes;
                   ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:1398:5: style: The scope of the variable 'isCI' can be reduced. [variableScope]
    isCI, // has composed index?
    ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:1399:7: style: The scope of the variable 'isMatch' can be reduced. [variableScope]
      isMatch;
      ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:1647:14: style: The scope of the variable 'value' can be reduced. [variableScope]
   SQLValue* value;
             ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:1800:10: style: The scope of the variable 'columnTypes' can be reduced. [variableScope]
   int8* columnTypes;
         ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:2034:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:884:17: style: Local variable 'allRowsBitmap' shadows outer variable [shadowVariable]
         uint8* allRowsBitmap = tempTable1->allRowsBitmap;
                ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:646:11: note: Shadowed declaration
   uint8* allRowsBitmap;
          ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:884:17: note: Shadow variable
         uint8* allRowsBitmap = tempTable1->allRowsBitmap;
                ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:353:19: style: Variable 'table' is assigned a value that is never used. [unreadVariable]
      if (!(table = tableList[i]->table = getTable(context, driver, tableList[i]->tableName)))
                  ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:1907:40: style: Variable 'auxTable' is assigned a value that is never used. [unreadVariable]
               currentTable = auxTable = null;
                                       ^
LitebaseSDK/src/native/parser/SQLSelectStatement.c:2262:12: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
       ret = NO_RECORD,
           ^
LitebaseSDK/src/native/parser/SQLUpdateStatement.c:181:12: style: The scope of the variable 'record' can be reduced. [variableScope]
 SQLValue* record;
           ^
LitebaseSDK/src/native/parser/SQLUpdateStatement.c:240:12: style: The scope of the variable 'record' can be reduced. [variableScope]
 SQLValue* record;
           ^
LitebaseSDK/src/native/parser/SQLUpdateStatement.c:23:94: style:inconclusive: Function 'initSQLUpdateStatement' argument 3 names different: declaration 'parse' definition 'parser'. [funcArgNamesDifferent]
SQLUpdateStatement* initSQLUpdateStatement(Context context, TCObject driver, LitebaseParser* parser, bool isPrepared)
                                                                                             ^
LitebaseSDK/src/native/parser/SQLUpdateStatement.h:26:94: note: Function 'initSQLUpdateStatement' argument 3 names different: declaration 'parse' definition 'parser'.
SQLUpdateStatement* initSQLUpdateStatement(Context context, TCObject driver, LitebaseParser* parse, bool isPrepared);
                                                                                             ^
LitebaseSDK/src/native/parser/SQLUpdateStatement.c:23:94: note: Function 'initSQLUpdateStatement' argument 3 names different: declaration 'parse' definition 'parser'.
SQLUpdateStatement* initSQLUpdateStatement(Context context, TCObject driver, LitebaseParser* parser, bool isPrepared)
                                                                                             ^
TotalCrossVM/src/axtls/aes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/aes.c:179:18: style: The scope of the variable 'tmp' can be reduced. [variableScope]
    uint32_t *W, tmp, tmp2;
                 ^
TotalCrossVM/src/axtls/aes.c:253:17: style: The scope of the variable 'w' can be reduced. [variableScope]
    uint32_t *k,w,t1,t2,t3,t4;
                ^
TotalCrossVM/src/axtls/aes.c:308:31: style:inconclusive: Function 'AES_cbc_decrypt' argument 1 names different: declaration 'ks' definition 'ctx'. [funcArgNamesDifferent]
void AES_cbc_decrypt(AES_CTX *ctx, const uint8_t *msg, uint8_t *out, int length)
                              ^
TotalCrossVM/src/axtls/crypto.h:87:31: note: Function 'AES_cbc_decrypt' argument 1 names different: declaration 'ks' definition 'ctx'.
void AES_cbc_decrypt(AES_CTX *ks, const uint8_t *in, uint8_t *out, int length);
                              ^
TotalCrossVM/src/axtls/aes.c:308:31: note: Function 'AES_cbc_decrypt' argument 1 names different: declaration 'ks' definition 'ctx'.
void AES_cbc_decrypt(AES_CTX *ctx, const uint8_t *msg, uint8_t *out, int length)
                              ^
TotalCrossVM/src/axtls/aes.c:308:51: style:inconclusive: Function 'AES_cbc_decrypt' argument 2 names different: declaration 'in' definition 'msg'. [funcArgNamesDifferent]
void AES_cbc_decrypt(AES_CTX *ctx, const uint8_t *msg, uint8_t *out, int length)
                                                  ^
TotalCrossVM/src/axtls/crypto.h:87:50: note: Function 'AES_cbc_decrypt' argument 2 names different: declaration 'in' definition 'msg'.
void AES_cbc_decrypt(AES_CTX *ks, const uint8_t *in, uint8_t *out, int length);
                                                 ^
TotalCrossVM/src/axtls/aes.c:308:51: note: Function 'AES_cbc_decrypt' argument 2 names different: declaration 'in' definition 'msg'.
void AES_cbc_decrypt(AES_CTX *ctx, const uint8_t *msg, uint8_t *out, int length)
                                                  ^
TotalCrossVM/src/axtls/asn1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/asn1.c:100:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
TotalCrossVM/src/axtls/bigint.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 27 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/bigint.c:301:21: style:inconclusive: Boolean expression 'rl<sl' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
        carry = cy1 | (rl < sl);
                    ^
TotalCrossVM/src/axtls/bigint.c:338:21: style:inconclusive: Boolean expression 'rl>sl' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
        carry = cy1 | (rl > sl);
                    ^
TotalCrossVM/src/axtls/bigint.c:818:16: style: The scope of the variable 'j' can be reduced. [variableScope]
    int i = 0, j;
               ^
TotalCrossVM/src/axtls/bigint.c:834:19: style: The scope of the variable 'tmp' can be reduced. [variableScope]
        long_comp tmp;
                  ^
TotalCrossVM/src/axtls/bigint.c:957:15: style: The scope of the variable 'carry' can be reduced. [variableScope]
    long_comp carry;
              ^
TotalCrossVM/src/axtls/bigint.c:354:53: style:inconclusive: Function 'bi_int_multiply' argument 2 names different: declaration 'bi' definition 'bia'. [funcArgNamesDifferent]
static bigint *bi_int_multiply(BI_CTX *ctx, bigint *bia, comp b)
                                                    ^
TotalCrossVM/src/axtls/bigint.c:80:53: note: Function 'bi_int_multiply' argument 2 names different: declaration 'bi' definition 'bia'.
static bigint *bi_int_multiply(BI_CTX *ctx, bigint *bi, comp i);
                                                    ^
TotalCrossVM/src/axtls/bigint.c:354:53: note: Function 'bi_int_multiply' argument 2 names different: declaration 'bi' definition 'bia'.
static bigint *bi_int_multiply(BI_CTX *ctx, bigint *bia, comp b)
                                                    ^
TotalCrossVM/src/axtls/bigint.c:354:63: style:inconclusive: Function 'bi_int_multiply' argument 3 names different: declaration 'i' definition 'b'. [funcArgNamesDifferent]
static bigint *bi_int_multiply(BI_CTX *ctx, bigint *bia, comp b)
                                                              ^
TotalCrossVM/src/axtls/bigint.c:80:62: note: Function 'bi_int_multiply' argument 3 names different: declaration 'i' definition 'b'.
static bigint *bi_int_multiply(BI_CTX *ctx, bigint *bi, comp i);
                                                             ^
TotalCrossVM/src/axtls/bigint.c:354:63: note: Function 'bi_int_multiply' argument 3 names different: declaration 'i' definition 'b'.
static bigint *bi_int_multiply(BI_CTX *ctx, bigint *bia, comp b)
                                                              ^
TotalCrossVM/src/axtls/bigint.c:390:40: style:inconclusive: Function 'bi_divide' argument 2 names different: declaration 'bia' definition 'u'. [funcArgNamesDifferent]
bigint *bi_divide(BI_CTX *ctx, bigint *u, bigint *v, int is_mod)
                                       ^
TotalCrossVM/src/axtls/bigint.h:52:40: note: Function 'bi_divide' argument 2 names different: declaration 'bia' definition 'u'.
bigint *bi_divide(BI_CTX *ctx, bigint *bia, bigint *bim, int is_mod);
                                       ^
TotalCrossVM/src/axtls/bigint.c:390:40: note: Function 'bi_divide' argument 2 names different: declaration 'bia' definition 'u'.
bigint *bi_divide(BI_CTX *ctx, bigint *u, bigint *v, int is_mod)
                                       ^
TotalCrossVM/src/axtls/bigint.c:390:51: style:inconclusive: Function 'bi_divide' argument 3 names different: declaration 'bim' definition 'v'. [funcArgNamesDifferent]
bigint *bi_divide(BI_CTX *ctx, bigint *u, bigint *v, int is_mod)
                                                  ^
TotalCrossVM/src/axtls/bigint.h:52:53: note: Function 'bi_divide' argument 3 names different: declaration 'bim' definition 'v'.
bigint *bi_divide(BI_CTX *ctx, bigint *bia, bigint *bim, int is_mod);
                                                    ^
TotalCrossVM/src/axtls/bigint.c:390:51: note: Function 'bi_divide' argument 3 names different: declaration 'bim' definition 'v'.
bigint *bi_divide(BI_CTX *ctx, bigint *u, bigint *v, int is_mod)
                                                  ^
TotalCrossVM/src/axtls/bigint.c:626:57: style:inconclusive: Function 'bi_import' argument 3 names different: declaration 'len' definition 'size'. [funcArgNamesDifferent]
bigint *bi_import(BI_CTX *ctx, const uint8_t *data, int size)
                                                        ^
TotalCrossVM/src/axtls/bigint.h:45:57: note: Function 'bi_import' argument 3 names different: declaration 'len' definition 'size'.
bigint *bi_import(BI_CTX *ctx, const uint8_t *data, int len);
                                                        ^
TotalCrossVM/src/axtls/bigint.c:626:57: note: Function 'bi_import' argument 3 names different: declaration 'len' definition 'size'.
bigint *bi_import(BI_CTX *ctx, const uint8_t *data, int size)
                                                        ^
TotalCrossVM/src/axtls/bigint.c:678:42: style:inconclusive: Function 'bi_print' argument 2 names different: declaration 'bi' definition 'x'. [funcArgNamesDifferent]
void bi_print(const char *label, bigint *x)
                                         ^
TotalCrossVM/src/axtls/bigint.h:61:42: note: Function 'bi_print' argument 2 names different: declaration 'bi' definition 'x'.
void bi_print(const char *label, bigint *bi);
                                         ^
TotalCrossVM/src/axtls/bigint.c:678:42: note: Function 'bi_print' argument 2 names different: declaration 'bi' definition 'x'.
void bi_print(const char *label, bigint *x)
                                         ^
TotalCrossVM/src/axtls/bigint.c:713:37: style:inconclusive: Function 'bi_export' argument 2 names different: declaration 'bi' definition 'x'. [funcArgNamesDifferent]
void bi_export(BI_CTX *ctx, bigint *x, uint8_t *data, int size)
                                    ^
TotalCrossVM/src/axtls/bigint.h:44:37: note: Function 'bi_export' argument 2 names different: declaration 'bi' definition 'x'.
void bi_export(BI_CTX *ctx, bigint *bi, uint8_t *data, int size);
                                    ^
TotalCrossVM/src/axtls/bigint.c:713:37: note: Function 'bi_export' argument 2 names different: declaration 'bi' definition 'x'.
void bi_export(BI_CTX *ctx, bigint *x, uint8_t *data, int size)
                                    ^
TotalCrossVM/src/axtls/bigint.c:1006:40: style:inconclusive: Function 'bi_square' argument 2 names different: declaration 'bi' definition 'bia'. [funcArgNamesDifferent]
bigint *bi_square(BI_CTX *ctx, bigint *bia)
                                       ^
TotalCrossVM/src/axtls/bigint.h:87:40: note: Function 'bi_square' argument 2 names different: declaration 'bi' definition 'bia'.
bigint *bi_square(BI_CTX *ctx, bigint *bi);
                                       ^
TotalCrossVM/src/axtls/bigint.c:1006:40: note: Function 'bi_square' argument 2 names different: declaration 'bi' definition 'bia'.
bigint *bi_square(BI_CTX *ctx, bigint *bia)
                                       ^
TotalCrossVM/src/axtls/bigint.c:693:30: error: Signed integer overflow for expression '0x0f<<(j*4)'. [integerOverflow]
            comp mask = 0x0f << (j*4);
                             ^
TotalCrossVM/src/axtls/bigint.c:724:30: error: Signed integer overflow for expression '0xff<<(j*8)'. [integerOverflow]
            comp mask = 0xff << (j*8);
                             ^
TotalCrossVM/src/axtls/crypto_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/hmac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/loader.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/loader.c:108:64: style:inconclusive: Function 'ssl_obj_memory_load' argument 2 names different: declaration 'obj_type' definition 'mem_type'. [funcArgNamesDifferent]
EXP_FUNC int STDCALL ssl_obj_memory_load(SSL_CTX *ssl_ctx, int mem_type,
                                                               ^
TotalCrossVM/src/axtls/ssl.h:501:64: note: Function 'ssl_obj_memory_load' argument 2 names different: declaration 'obj_type' definition 'mem_type'.
EXP_FUNC int STDCALL ssl_obj_memory_load(SSL_CTX *ssl_ctx, int obj_type, const uint8_t *data, int len, const char *password);
                                                               ^
TotalCrossVM/src/axtls/loader.c:108:64: note: Function 'ssl_obj_memory_load' argument 2 names different: declaration 'obj_type' definition 'mem_type'.
EXP_FUNC int STDCALL ssl_obj_memory_load(SSL_CTX *ssl_ctx, int mem_type,
                                                               ^
TotalCrossVM/src/axtls/md2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/md2.c:92:60: style:inconclusive: Function 'MD2Update' argument 2 names different: declaration 'msg' definition 'data'. [funcArgNamesDifferent]
EXP_FUNC int STDCALL MD2Update (MD2_CTX *c, const uint8_t *data, int len)
                                                           ^
TotalCrossVM/src/axtls/crypto.h:216:58: note: Function 'MD2Update' argument 2 names different: declaration 'msg' definition 'data'.
EXP_FUNC int STDCALL MD2Update(MD2_CTX *, const uint8_t *msg, int len);
                                                         ^
TotalCrossVM/src/axtls/md2.c:92:60: note: Function 'MD2Update' argument 2 names different: declaration 'msg' definition 'data'.
EXP_FUNC int STDCALL MD2Update (MD2_CTX *c, const uint8_t *data, int len)
                                                           ^
TotalCrossVM/src/axtls/md2.c:176:58: style:inconclusive: Function 'MD2Final' argument 2 names different: declaration 'digest' definition 'md'. [funcArgNamesDifferent]
EXP_FUNC int STDCALL MD2Final(MD2_CTX *c, unsigned char *md)
                                                         ^
TotalCrossVM/src/axtls/crypto.h:217:51: note: Function 'MD2Final' argument 2 names different: declaration 'digest' definition 'md'.
EXP_FUNC int STDCALL MD2Final(MD2_CTX *, uint8_t *digest);
                                                  ^
TotalCrossVM/src/axtls/md2.c:176:58: note: Function 'MD2Final' argument 2 names different: declaration 'digest' definition 'md'.
EXP_FUNC int STDCALL MD2Final(MD2_CTX *c, unsigned char *md)
                                                         ^
TotalCrossVM/src/axtls/md5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/openssl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/openssl.c:292:29: style: int result is returned as long value. If the return value is long to avoid loss of information, then you have loss of information. [truncLongCastReturn]
                            return CONFIG_SSL_EXPIRY_TIME*3600; }
                            ^
TotalCrossVM/src/axtls/os_port.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/os_port.c:307:11: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
   result = (year - 1970) * 365 + m_to_d[month];
          ^
TotalCrossVM/src/axtls/os_port.c:306:11: note: result is assigned
   result = (year - 1970) * 365 + (year - 1969) / 4 + m_to_d[month];
          ^
TotalCrossVM/src/axtls/os_port.c:307:11: note: result is overwritten
   result = (year - 1970) * 365 + m_to_d[month];
          ^
TotalCrossVM/src/axtls/p12.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/rc4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/rc4.c:48:26: style: The scope of the variable 'a' can be reduced. [variableScope]
    int i, j = 0, k = 0, a;
                         ^
TotalCrossVM/src/axtls/rc4.c:78:23: style: The scope of the variable 'a' can be reduced. [variableScope]
    uint8_t *m, x, y, a, b;
                      ^
TotalCrossVM/src/axtls/rc4.c:78:26: style: The scope of the variable 'b' can be reduced. [variableScope]
    uint8_t *m, x, y, a, b;
                         ^
TotalCrossVM/src/axtls/rc4.c:46:25: style:inconclusive: Function 'RC4_setup' argument 1 names different: declaration 's' definition 'ctx'. [funcArgNamesDifferent]
void RC4_setup(RC4_CTX *ctx, const uint8_t *key, int length)
                        ^
TotalCrossVM/src/axtls/crypto.h:99:25: note: Function 'RC4_setup' argument 1 names different: declaration 's' definition 'ctx'.
void RC4_setup(RC4_CTX *s, const uint8_t *key, int length);
                        ^
TotalCrossVM/src/axtls/rc4.c:46:25: note: Function 'RC4_setup' argument 1 names different: declaration 's' definition 'ctx'.
void RC4_setup(RC4_CTX *ctx, const uint8_t *key, int length)
                        ^
TotalCrossVM/src/axtls/rc4.c:75:25: style:inconclusive: Function 'RC4_crypt' argument 1 names different: declaration 's' definition 'ctx'. [funcArgNamesDifferent]
void RC4_crypt(RC4_CTX *ctx, const uint8_t *msg, uint8_t *out, int length)
                        ^
TotalCrossVM/src/axtls/crypto.h:100:25: note: Function 'RC4_crypt' argument 1 names different: declaration 's' definition 'ctx'.
void RC4_crypt(RC4_CTX *s, const uint8_t *msg, uint8_t *data, int length);
                        ^
TotalCrossVM/src/axtls/rc4.c:75:25: note: Function 'RC4_crypt' argument 1 names different: declaration 's' definition 'ctx'.
void RC4_crypt(RC4_CTX *ctx, const uint8_t *msg, uint8_t *out, int length)
                        ^
TotalCrossVM/src/axtls/rc4.c:75:59: style:inconclusive: Function 'RC4_crypt' argument 3 names different: declaration 'data' definition 'out'. [funcArgNamesDifferent]
void RC4_crypt(RC4_CTX *ctx, const uint8_t *msg, uint8_t *out, int length)
                                                          ^
TotalCrossVM/src/axtls/crypto.h:100:57: note: Function 'RC4_crypt' argument 3 names different: declaration 'data' definition 'out'.
void RC4_crypt(RC4_CTX *s, const uint8_t *msg, uint8_t *data, int length);
                                                        ^
TotalCrossVM/src/axtls/rc4.c:75:59: note: Function 'RC4_crypt' argument 3 names different: declaration 'data' definition 'out'.
void RC4_crypt(RC4_CTX *ctx, const uint8_t *msg, uint8_t *out, int length)
                                                          ^
TotalCrossVM/src/axtls/rsa.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/rsa.c:197:33: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    uint8_t *block = (uint8_t *)alloca(byte_size);
                                ^
TotalCrossVM/src/axtls/rsa.c:73:33: style:inconclusive: Function 'RSA_priv_key_new' argument 1 names different: declaration 'rsa_ctx' definition 'ctx'. [funcArgNamesDifferent]
void RSA_priv_key_new(RSA_CTX **ctx,
                                ^
TotalCrossVM/src/axtls/crypto.h:249:33: note: Function 'RSA_priv_key_new' argument 1 names different: declaration 'rsa_ctx' definition 'ctx'.
void RSA_priv_key_new(RSA_CTX **rsa_ctx,
                                ^
TotalCrossVM/src/axtls/rsa.c:73:33: note: Function 'RSA_priv_key_new' argument 1 names different: declaration 'rsa_ctx' definition 'ctx'.
void RSA_priv_key_new(RSA_CTX **ctx,
                                ^
TotalCrossVM/src/axtls/rsa.c:115:32: style:inconclusive: Function 'RSA_pub_key_new' argument 1 names different: declaration 'rsa_ctx' definition 'ctx'. [funcArgNamesDifferent]
void RSA_pub_key_new(RSA_CTX **ctx,
                               ^
TotalCrossVM/src/axtls/crypto.h:273:32: note: Function 'RSA_pub_key_new' argument 1 names different: declaration 'rsa_ctx' definition 'ctx'.
void RSA_pub_key_new(RSA_CTX **rsa_ctx,
                               ^
TotalCrossVM/src/axtls/rsa.c:115:32: note: Function 'RSA_pub_key_new' argument 1 names different: declaration 'rsa_ctx' definition 'ctx'.
void RSA_pub_key_new(RSA_CTX **ctx,
                               ^
TotalCrossVM/src/axtls/rsa.c:141:24: style:inconclusive: Function 'RSA_free' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'. [funcArgNamesDifferent]
void RSA_free(RSA_CTX *rsa_ctx)
                       ^
TotalCrossVM/src/axtls/crypto.h:279:24: note: Function 'RSA_free' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'.
void RSA_free(RSA_CTX *ctx);
                       ^
TotalCrossVM/src/axtls/rsa.c:141:24: note: Function 'RSA_free' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'.
void RSA_free(RSA_CTX *rsa_ctx)
                       ^
TotalCrossVM/src/axtls/rsa.c:150:33: style:inconclusive: Function 'RSA_free_external' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'. [funcArgNamesDifferent]
void RSA_free_external(RSA_CTX *rsa_ctx)
                                ^
TotalCrossVM/src/axtls/crypto.h:280:33: note: Function 'RSA_free_external' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'.
void RSA_free_external(RSA_CTX *ctx);
                                ^
TotalCrossVM/src/axtls/rsa.c:150:33: note: Function 'RSA_free_external' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'.
void RSA_free_external(RSA_CTX *rsa_ctx)
                                ^
TotalCrossVM/src/axtls/rsa.c:268:31: style:inconclusive: Function 'RSA_print' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'. [funcArgNamesDifferent]
void RSA_print(const RSA_CTX *rsa_ctx)
                              ^
TotalCrossVM/src/axtls/crypto.h:290:31: note: Function 'RSA_print' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'.
void RSA_print(const RSA_CTX *ctx);
                              ^
TotalCrossVM/src/axtls/rsa.c:268:31: note: Function 'RSA_print' argument 1 names different: declaration 'ctx' definition 'rsa_ctx'.
void RSA_print(const RSA_CTX *rsa_ctx)
                              ^
TotalCrossVM/src/axtls/sha1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/sha256.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/sha256.c:62:30: style:inconclusive: Function 'SHA256_Init' argument 1 names different: declaration 'c' definition 'ctx'. [funcArgNamesDifferent]
void SHA256_Init(SHA256_CTX *ctx)
                             ^
TotalCrossVM/src/axtls/crypto.h:138:30: note: Function 'SHA256_Init' argument 1 names different: declaration 'c' definition 'ctx'.
void SHA256_Init(SHA256_CTX *c);
                             ^
TotalCrossVM/src/axtls/sha256.c:62:30: note: Function 'SHA256_Init' argument 1 names different: declaration 'c' definition 'ctx'.
void SHA256_Init(SHA256_CTX *ctx)
                             ^
TotalCrossVM/src/axtls/sha256.c:211:53: style:inconclusive: Function 'SHA256_Update' argument 2 names different: declaration 'input' definition 'msg'. [funcArgNamesDifferent]
void SHA256_Update(SHA256_CTX *ctx, const uint8_t * msg, int len)
                                                    ^
TotalCrossVM/src/axtls/crypto.h:139:49: note: Function 'SHA256_Update' argument 2 names different: declaration 'input' definition 'msg'.
void SHA256_Update(SHA256_CTX *, const uint8_t *input, int len);
                                                ^
TotalCrossVM/src/axtls/sha256.c:211:53: note: Function 'SHA256_Update' argument 2 names different: declaration 'input' definition 'msg'.
void SHA256_Update(SHA256_CTX *ctx, const uint8_t * msg, int len)
                                                    ^
TotalCrossVM/src/axtls/sha384.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/sha384.c:38:31: style:inconclusive: Function 'SHA384_Init' argument 1 names different: declaration 'c' definition 'ctx'. [funcArgNamesDifferent]
 void SHA384_Init(SHA384_CTX *ctx)
                              ^
TotalCrossVM/src/axtls/crypto.h:175:30: note: Function 'SHA384_Init' argument 1 names different: declaration 'c' definition 'ctx'.
void SHA384_Init(SHA384_CTX *c);
                             ^
TotalCrossVM/src/axtls/sha384.c:38:31: note: Function 'SHA384_Init' argument 1 names different: declaration 'c' definition 'ctx'.
 void SHA384_Init(SHA384_CTX *ctx)
                              ^
TotalCrossVM/src/axtls/sha384.c:59:53: style:inconclusive: Function 'SHA384_Update' argument 2 names different: declaration 'input' definition 'msg'. [funcArgNamesDifferent]
void SHA384_Update(SHA384_CTX *ctx, const uint8_t * msg, int len)
                                                    ^
TotalCrossVM/src/axtls/crypto.h:176:49: note: Function 'SHA384_Update' argument 2 names different: declaration 'input' definition 'msg'.
void SHA384_Update(SHA384_CTX *, const uint8_t *input, int len);
                                                ^
TotalCrossVM/src/axtls/sha384.c:59:53: note: Function 'SHA384_Update' argument 2 names different: declaration 'input' definition 'msg'.
void SHA384_Update(SHA384_CTX *ctx, const uint8_t * msg, int len)
                                                    ^
TotalCrossVM/src/axtls/sha512.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/sha512.c:103:14: style: The scope of the variable 'temp1' can be reduced. [variableScope]
    uint64_t temp1;
             ^
TotalCrossVM/src/axtls/sha512.c:104:14: style: The scope of the variable 'temp2' can be reduced. [variableScope]
    uint64_t temp2;
             ^
TotalCrossVM/src/axtls/sha512.c:86:30: style:inconclusive: Function 'SHA512_Init' argument 1 names different: declaration 'c' definition 'ctx'. [funcArgNamesDifferent]
void SHA512_Init(SHA512_CTX *ctx)
                             ^
TotalCrossVM/src/axtls/crypto.h:164:30: note: Function 'SHA512_Init' argument 1 names different: declaration 'c' definition 'ctx'.
void SHA512_Init(SHA512_CTX *c);
                             ^
TotalCrossVM/src/axtls/sha512.c:86:30: note: Function 'SHA512_Init' argument 1 names different: declaration 'c' definition 'ctx'.
void SHA512_Init(SHA512_CTX *ctx)
                             ^
TotalCrossVM/src/axtls/sha512.c:159:53: style:inconclusive: Function 'SHA512_Update' argument 2 names different: declaration 'input' definition 'msg'. [funcArgNamesDifferent]
void SHA512_Update(SHA512_CTX *ctx, const uint8_t * msg, int len)
                                                    ^
TotalCrossVM/src/axtls/crypto.h:165:49: note: Function 'SHA512_Update' argument 2 names different: declaration 'input' definition 'msg'.
void SHA512_Update(SHA512_CTX *, const uint8_t *input, int len);
                                                ^
TotalCrossVM/src/axtls/sha512.c:159:53: note: Function 'SHA512_Update' argument 2 names different: declaration 'input' definition 'msg'.
void SHA512_Update(SHA512_CTX *ctx, const uint8_t * msg, int len)
                                                    ^
TotalCrossVM/src/axtls/tls1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/tls1.c:693:33: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    uint8_t *t_buf = (uint8_t *)alloca(hmac_len);
                                ^
TotalCrossVM/src/axtls/tls1.c:1169:30: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
            uint8_t *t_buf = alloca(msg_length + iv_size);
                             ^
TotalCrossVM/src/axtls/tls1.c:316:22: style: The scope of the variable 'nw' can be reduced. [variableScope]
    int n = out_len, nw, i, tot = 0;
                     ^
TotalCrossVM/src/axtls/tls1.c:316:26: style: The scope of the variable 'i' can be reduced. [variableScope]
    int n = out_len, nw, i, tot = 0;
                         ^
TotalCrossVM/src/axtls/tls1.c:739:42: style: The scope of the variable 'i' can be reduced. [variableScope]
    int last_blk_size = buf[read_len-1], i;
                                         ^
TotalCrossVM/src/axtls/tls1.c:689:43: style:inconclusive: Function 'add_hmac_digest' argument 2 names different: declaration 'snd' definition 'mode'. [funcArgNamesDifferent]
static void add_hmac_digest(SSL *ssl, int mode, uint8_t *hmac_header,
                                          ^
TotalCrossVM/src/axtls/tls1.c:131:43: note: Function 'add_hmac_digest' argument 2 names different: declaration 'snd' definition 'mode'.
static void add_hmac_digest(SSL *ssl, int snd, uint8_t *hmac_header,
                                          ^
TotalCrossVM/src/axtls/tls1.c:689:43: note: Function 'add_hmac_digest' argument 2 names different: declaration 'snd' definition 'mode'.
static void add_hmac_digest(SSL *ssl, int mode, uint8_t *hmac_header,
                                          ^
TotalCrossVM/src/axtls/tls1_clnt.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/tls1_clnt.c:509:9: style: Condition 'rsa_ctx' is always true [knownConditionTrueFalse]
    if (rsa_ctx)
        ^
TotalCrossVM/src/axtls/tls1_clnt.c:485:17: note: Assuming that condition 'rsa_ctx==NULL' is not redundant
    if (rsa_ctx == NULL)
                ^
TotalCrossVM/src/axtls/tls1_clnt.c:509:9: note: Condition 'rsa_ctx' is always true
    if (rsa_ctx)
        ^
TotalCrossVM/src/axtls/tls1_svr.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/x509.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/axtls/x509.c:390:33: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
    uint8_t *block = (uint8_t *)alloca(sig_len);
                                ^
TotalCrossVM/src/dx/DirectXHelper.h:27:69: error: syntax error [syntaxError]
  }).then([] (Streams::IBuffer^ fileBuffer) -> Platform::Array<byte>^
                                                                    ^
TotalCrossVM/src/event/linux/event_c.h:70:8: style: The scope of the variable 'key' can be reduced. [variableScope]
   int key, modifier;
       ^
TotalCrossVM/src/event/linux/event_c.h:70:13: style: The scope of the variable 'modifier' can be reduced. [variableScope]
   int key, modifier;
            ^
TotalCrossVM/src/event/linux/event_c.h:129:8: style: The scope of the variable 'key' can be reduced. [variableScope]
   int key;
       ^
TotalCrossVM/src/event/win/event_c.h:361:15: style: Variable 'scan' is reassigned a value before the old one has been used. [redundantAssignment]
         scan = (lParam>>16) & 0xFF;
              ^
TotalCrossVM/src/event/win/event_c.h:352:15: note: scan is assigned
         scan = (lParam>>16) & 0xFF;
              ^
TotalCrossVM/src/event/win/event_c.h:361:15: note: scan is overwritten
         scan = (lParam>>16) & 0xFF;
              ^
TotalCrossVM/src/event/win/event_c.h:264:14: style: Variable 'hDC' is assigned a value that is never used. [unreadVariable]
         hDC = BeginPaint(hWnd, &ps);
             ^
TotalCrossVM/src/event/win/event_c.h:420:15: style: Variable 'scan' is assigned a value that is never used. [unreadVariable]
         scan = (lParam>>16) & 0xFFFF;
              ^
TotalCrossVM/src/init/globals.c:82:0: information: Skipping configuration 'INITIAL_MEM' since the value of 'INITIAL_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
uint32 maxAvail = INITIAL_MEM; // in bytes
^
TotalCrossVM/src/init/settings.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/init/settings.c:144:9: style: Local variable 'deviceId' shadows outer variable [shadowVariable]
   char deviceId[100];
        ^
TotalCrossVM/src/init/settings.c:16:13: note: Shadowed declaration
static char deviceId[128];
            ^
TotalCrossVM/src/init/settings.c:144:9: note: Shadow variable
   char deviceId[100];
        ^
TotalCrossVM/src/init/win/settings_c.h:224:4: style:inconclusive: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
   return 0;
   ^
TotalCrossVM/src/init/win/settings_c.h:317:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
TotalCrossVM/src/init/win/settings_c.h:169:11: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
      ret = RegSetValueEx(handle,TEXT("Value"),0,REG_BINARY,data,len); // store the data
          ^
TotalCrossVM/src/init/win/settings_c.h:195:18: style: Variable 'temp' is assigned a value that is never used. [unreadVariable]
   TCObject temp = null, target = null;
                 ^
TotalCrossVM/src/init/win/settings_c.h:207:11: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
      ret = RegQueryValueEx(handle,TEXT("Value"),NULL,NULL,NULL,&len);
          ^
TotalCrossVM/src/init/win/settings_c.h:212:14: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
         ret = RegQueryValueEx(handle,TEXT("Value"),NULL,&type,ARRAYOBJ_START(temp), &len);
             ^
TotalCrossVM/src/init/win/settings_c.h:312:24: style: Variable 'BytesReturned' is assigned a value that is never used. [unreadVariable]
    int32 BytesReturned=0;
                       ^
TotalCrossVM/src/init/win/settings_c.h:857:18: style: Unused variable: osvi [unusedVariable]
   OSVERSIONINFO osvi;
                 ^
TotalCrossVM/src/init/posix/settings_c.h:446:8: style: Unused variable: gmtBias [unusedVariable]
   int gmtBias;             // gmt+0
       ^
TotalCrossVM/src/init/posix/settings_c.h:447:8: style: Unused variable: daylightSavings [unusedVariable]
   int daylightSavings;     // 1 when DST is on
       ^
TotalCrossVM/src/init/startup.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/init/startup.c:406:30: style: Condition '*c!=0' is always true [knownConditionTrueFalse]
      while (*c == ' ' && *c != 0)
                             ^
TotalCrossVM/src/init/startup.c:406:17: note: Assuming that condition '*c==' '' is not redundant
      while (*c == ' ' && *c != 0)
                ^
TotalCrossVM/src/init/startup.c:406:30: note: Condition '*c!=0' is always true
      while (*c == ' ' && *c != 0)
                             ^
TotalCrossVM/src/init/startup.c:197:10: style: Unused variable: retc [unusedVariable]
   int32 retc;
         ^
TotalCrossVM/src/init/win/startup_c.h:25:8: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   err = RegOpenKeyEx(HKEY_LOCAL_MACHINE, TEXT("\\Services\\TotalCrossSrv"), 0, KEY_ALL_ACCESS, &handle);
       ^
TotalCrossVM/src/init/win/startup_c.h:45:17: style: Variable 'hThread' is assigned a value that is never used. [unreadVariable]
 HANDLE hThread = CreateThread( 0, 0, StartVMFromService, 0, 0, 0);
                ^
TotalCrossVM/src/init/win/startup_c.h:97:11: style: The scope of the variable 'ret' can be reduced. [variableScope]
   int i, ret;
          ^
TotalCrossVM/src/init/tcsdl.cpp:137:0: error: failed to expand 'IS_NULL', it is invalid to use a preprocessor directive as macro parameter [preprocessorErrorDirective]
#if !defined APPLE && !defined ANDROID && defined linux && defined __arm__
^
TotalCrossVM/src/init/tcsdl.cpp:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/jpeg/JpegLoader.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/JpegLoader.c:89:11: style: The scope of the variable 'buffer' can be reduced. [variableScope]
   uint8* buffer;
          ^
TotalCrossVM/src/jpeg/JpegLoader.c:21:20: style:inconclusive: Function 'jpegRead' argument 1 names different: declaration 'buf' definition 'buff'. [funcArgNamesDifferent]
int jpegRead(void *buff, int count, JPEGFILE *in)
                   ^
TotalCrossVM/src/jpeg/jinclude.h:70:29: note: Function 'jpegRead' argument 1 names different: declaration 'buf' definition 'buff'.
extern int jpegRead (void * buf, int size, JPEGFILE * in);
                            ^
TotalCrossVM/src/jpeg/JpegLoader.c:21:20: note: Function 'jpegRead' argument 1 names different: declaration 'buf' definition 'buff'.
int jpegRead(void *buff, int count, JPEGFILE *in)
                   ^
TotalCrossVM/src/jpeg/JpegLoader.c:21:30: style:inconclusive: Function 'jpegRead' argument 2 names different: declaration 'size' definition 'count'. [funcArgNamesDifferent]
int jpegRead(void *buff, int count, JPEGFILE *in)
                             ^
TotalCrossVM/src/jpeg/jinclude.h:70:38: note: Function 'jpegRead' argument 2 names different: declaration 'size' definition 'count'.
extern int jpegRead (void * buf, int size, JPEGFILE * in);
                                     ^
TotalCrossVM/src/jpeg/JpegLoader.c:21:30: note: Function 'jpegRead' argument 2 names different: declaration 'size' definition 'count'.
int jpegRead(void *buff, int count, JPEGFILE *in)
                             ^
TotalCrossVM/src/jpeg/JpegLoader.c:142:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   jpeg_read_header(&cinfo, TRUE); /* Read file header, set default decompression parameters */
^
TotalCrossVM/src/jpeg/JpegLoader.c:282:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   jpeg_set_quality(&cinfo, 85, TRUE);
^
TotalCrossVM/src/jpeg/JpegLoader.c:395:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   jpeg_set_quality(&cinfo, quality, TRUE);
^
TotalCrossVM/src/jpeg/cdjpeg.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/cdjpeg.c:124:20: style: The scope of the variable 'ck' can be reduced. [variableScope]
  register int ca, ck;
                   ^
TotalCrossVM/src/jpeg/cdjpeg.c:129:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;  /* arg longer than keyword, no good */
^
TotalCrossVM/src/jpeg/cdjpeg.c:133:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;  /* no good */
^
TotalCrossVM/src/jpeg/cdjpeg.c:138:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/cdjpeg.c:139:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;   /* A-OK */
^
TotalCrossVM/src/jpeg/cjpeg.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/cjpeg.c:632:14: style: Variable 'file_index' is assigned a value that is never used. [unreadVariable]
  file_index = parse_switches(&cinfo, argc, argv, 0, TRUE);
             ^
TotalCrossVM/src/jpeg/ckconfig.c:171:3: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
  arg1 = (void *) locptr;
  ^
TotalCrossVM/src/jpeg/ckconfig.c:268:18: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
  long res = arg >> 4;
                 ^
TotalCrossVM/src/jpeg/ckconfig.c:275:16: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
  res |= (~0L) << (32-4);
               ^
TotalCrossVM/src/jpeg/ckconfig.c:106:9: style: struct member 'methods_struct::error_exit' is never used. [unusedStructMember]
  int (*error_exit) (char *msgtext);
        ^
TotalCrossVM/src/jpeg/ckconfig.c:107:9: style: struct member 'methods_struct::trace_message' is never used. [unusedStructMember]
  int (*trace_message) (char *msgtext);
        ^
TotalCrossVM/src/jpeg/ckconfig.c:108:9: style: struct member 'methods_struct::another_method' is never used. [unusedStructMember]
  int (*another_method) (void);
        ^
TotalCrossVM/src/jpeg/ckconfig.c:171:8: style: Variable 'arg1' is assigned a value that is never used. [unreadVariable]
  arg1 = (void *) locptr;
       ^
TotalCrossVM/src/jpeg/djpeg.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 35 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/djpeg.c:379:16: style: The scope of the variable 'ch' can be reduced. [variableScope]
  unsigned int ch;
               ^
TotalCrossVM/src/jpeg/djpeg.c:242:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      static boolean printed_version = FALSE;
^
TotalCrossVM/src/jpeg/djpeg.c:253:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->two_pass_quantize = FALSE;
^
TotalCrossVM/src/jpeg/djpeg.c:258:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->do_fancy_upsampling = FALSE;
^
TotalCrossVM/src/jpeg/djpeg.c:307:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->do_fancy_upsampling = FALSE;
^
TotalCrossVM/src/jpeg/djpeg.c:311:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->two_pass_quantize = FALSE;
^
TotalCrossVM/src/jpeg/djpeg.c:482:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  file_index = parse_switches(&cinfo, argc, argv, 0, FALSE);
^
TotalCrossVM/src/jpeg/djpeg.c:549:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    dest_mgr = jinit_write_bmp(&cinfo, FALSE);
^
TotalCrossVM/src/jpeg/djpeg.c:211:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->quantize_colors = TRUE;
^
TotalCrossVM/src/jpeg/djpeg.c:247:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 printed_version = TRUE;
^
TotalCrossVM/src/jpeg/djpeg.c:286:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 cinfo->quantize_colors = TRUE;
^
TotalCrossVM/src/jpeg/djpeg.c:421:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/djpeg.c:538:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (void) jpeg_read_header(&cinfo, TRUE);
^
TotalCrossVM/src/jpeg/djpeg.c:541:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  file_index = parse_switches(&cinfo, argc, argv, 0, TRUE);
^
TotalCrossVM/src/jpeg/djpeg.c:552:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    dest_mgr = jinit_write_bmp(&cinfo, TRUE);
^
TotalCrossVM/src/jpeg/example.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/example.c:137:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  jpeg_set_quality(&cinfo, quality, TRUE /* limit to baseline-JPEG values */);
^
TotalCrossVM/src/jpeg/example.c:144:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  jpeg_start_compress(&cinfo, TRUE);
^
TotalCrossVM/src/jpeg/example.c:334:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (void) jpeg_read_header(&cinfo, TRUE);
^
TotalCrossVM/src/jpeg/jaricom.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcapimin.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcapimin.c:130:16: style: The scope of the variable 'qtbl' can be reduced. [variableScope]
  JQUANT_TBL * qtbl;
               ^
TotalCrossVM/src/jpeg/jcapimin.c:131:15: style: The scope of the variable 'htbl' can be reduced. [variableScope]
  JHUFF_TBL * htbl;
              ^
TotalCrossVM/src/jpeg/jcapimin.c:56:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->is_decompressor = FALSE;
^
TotalCrossVM/src/jpeg/jcapistd.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcapistd.c:45:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    jpeg_suppress_tables(cinfo, FALSE); /* mark all tables to be written */
^
TotalCrossVM/src/jpeg/jcarith.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcarith.c:880:28: warning: Either the condition 'tbl>=16' is redundant or the array 'entropy->dc_stats[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      if (entropy->dc_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jcarith.c:878:26: note: Assuming that condition 'tbl>=16' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
                         ^
TotalCrossVM/src/jpeg/jcarith.c:880:28: note: Array index out of bounds
      if (entropy->dc_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jcarith.c:880:28: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->dc_stats[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      if (entropy->dc_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jcarith.c:878:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
              ^
TotalCrossVM/src/jpeg/jcarith.c:880:28: note: Negative array index
      if (entropy->dc_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jcarith.c:883:7: warning: Either the condition 'tbl>=16' is redundant or the array 'entropy->dc_stats[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jcarith.c:878:26: note: Assuming that condition 'tbl>=16' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
                         ^
TotalCrossVM/src/jpeg/jcarith.c:883:7: note: Array index out of bounds
      MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jcarith.c:883:7: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->dc_stats[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jcarith.c:878:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
              ^
TotalCrossVM/src/jpeg/jcarith.c:883:7: note: Negative array index
      MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jcarith.c:893:28: warning: Either the condition 'tbl>=16' is redundant or the array 'entropy->ac_stats[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      if (entropy->ac_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jcarith.c:891:26: note: Assuming that condition 'tbl>=16' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
                         ^
TotalCrossVM/src/jpeg/jcarith.c:893:28: note: Array index out of bounds
      if (entropy->ac_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jcarith.c:893:28: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->ac_stats[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      if (entropy->ac_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jcarith.c:891:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
              ^
TotalCrossVM/src/jpeg/jcarith.c:893:28: note: Negative array index
      if (entropy->ac_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jcarith.c:896:7: warning: Either the condition 'tbl>=16' is redundant or the array 'entropy->ac_stats[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jcarith.c:891:26: note: Assuming that condition 'tbl>=16' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
                         ^
TotalCrossVM/src/jpeg/jcarith.c:896:7: note: Array index out of bounds
      MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jcarith.c:896:7: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->ac_stats[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jcarith.c:891:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
              ^
TotalCrossVM/src/jpeg/jcarith.c:896:7: note: Negative array index
      MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jcarith.c:323:25: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info * compptr;
                        ^
TotalCrossVM/src/jpeg/jcarith.c:365:18: style: The scope of the variable 'st' can be reduced. [variableScope]
  unsigned char *st;
                 ^
TotalCrossVM/src/jpeg/jcarith.c:366:13: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int blkn, ci, tbl;
            ^
TotalCrossVM/src/jpeg/jcarith.c:366:17: style: The scope of the variable 'tbl' can be reduced. [variableScope]
  int blkn, ci, tbl;
                ^
TotalCrossVM/src/jpeg/jcarith.c:367:14: style: The scope of the variable 'm' can be reduced. [variableScope]
  int v, v2, m;
             ^
TotalCrossVM/src/jpeg/jcarith.c:458:14: style: The scope of the variable 'm' can be reduced. [variableScope]
  int v, v2, m;
             ^
TotalCrossVM/src/jpeg/jcarith.c:696:13: style: The scope of the variable 'block' can be reduced. [variableScope]
  JBLOCKROW block;
            ^
TotalCrossVM/src/jpeg/jcarith.c:697:18: style: The scope of the variable 'st' can be reduced. [variableScope]
  unsigned char *st;
                 ^
TotalCrossVM/src/jpeg/jcarith.c:698:7: style: The scope of the variable 'tbl' can be reduced. [variableScope]
  int tbl, k, ke;
      ^
TotalCrossVM/src/jpeg/jcarith.c:698:15: style: The scope of the variable 'ke' can be reduced. [variableScope]
  int tbl, k, ke;
              ^
TotalCrossVM/src/jpeg/jcarith.c:700:13: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int blkn, ci;
            ^
TotalCrossVM/src/jpeg/jcarith.c:629:13: style: Variable 'v' is assigned a value that is never used. [unreadVariable]
      if (v >>= cinfo->Al) break;
            ^
TotalCrossVM/src/jpeg/jcarith.c:632:13: style: Variable 'v' is assigned a value that is never used. [unreadVariable]
      if (v >>= cinfo->Al) break;
            ^
TotalCrossVM/src/jpeg/jcarith.c:639:13: style: Variable 'v' is assigned a value that is never used. [unreadVariable]
      if (v >>= cinfo->Ah) break;
            ^
TotalCrossVM/src/jpeg/jcarith.c:642:13: style: Variable 'v' is assigned a value that is never used. [unreadVariable]
      if (v >>= cinfo->Ah) break;
            ^
TotalCrossVM/src/jpeg/jcarith.c:441:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jcarith.c:547:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jcarith.c:584:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jcarith.c:683:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jcarith.c:832:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jccoefct.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jccoefct.c:253:14: style: The scope of the variable 'blocks_across' can be reduced. [variableScope]
  JDIMENSION blocks_across, MCUs_across, MCUindex;
             ^
TotalCrossVM/src/jpeg/jccoefct.c:254:15: style: The scope of the variable 'h_samp_factor' can be reduced. [variableScope]
  int bi, ci, h_samp_factor, block_row, block_rows, ndummy;
              ^
TotalCrossVM/src/jpeg/jccoefct.c:254:53: style: The scope of the variable 'ndummy' can be reduced. [variableScope]
  int bi, ci, h_samp_factor, block_row, block_rows, ndummy;
                                                    ^
TotalCrossVM/src/jpeg/jccoefct.c:259:19: style: The scope of the variable 'forward_DCT' can be reduced. [variableScope]
  forward_DCT_ptr forward_DCT;
                  ^
TotalCrossVM/src/jpeg/jccoefct.c:212:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jccoefct.c:365:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/jccoefct.c:390:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jccoefct.c:431:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
^
TotalCrossVM/src/jpeg/jccoefct.c:221:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jccoefct.c:267:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/jccoefct.c:399:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jccolor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jccolor.c:150:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:151:21: style: The scope of the variable 'outptr0' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:151:30: style: The scope of the variable 'outptr1' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                             ^
TotalCrossVM/src/jpeg/jccolor.c:151:39: style: The scope of the variable 'outptr2' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                                      ^
TotalCrossVM/src/jpeg/jccolor.c:206:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:207:21: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW outptr;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:245:21: style: The scope of the variable 'outptr0' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2, outptr3;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:245:30: style: The scope of the variable 'outptr1' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2, outptr3;
                             ^
TotalCrossVM/src/jpeg/jccolor.c:245:39: style: The scope of the variable 'outptr2' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2, outptr3;
                                      ^
TotalCrossVM/src/jpeg/jccolor.c:245:48: style: The scope of the variable 'outptr3' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2, outptr3;
                                               ^
TotalCrossVM/src/jpeg/jccolor.c:300:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:301:21: style: The scope of the variable 'outptr0' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:301:30: style: The scope of the variable 'outptr1' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                             ^
TotalCrossVM/src/jpeg/jccolor.c:301:39: style: The scope of the variable 'outptr2' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                                      ^
TotalCrossVM/src/jpeg/jccolor.c:340:21: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW outptr;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:367:21: style: The scope of the variable 'outptr0' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                    ^
TotalCrossVM/src/jpeg/jccolor.c:367:30: style: The scope of the variable 'outptr1' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                             ^
TotalCrossVM/src/jpeg/jccolor.c:367:39: style: The scope of the variable 'outptr2' can be reduced. [variableScope]
  register JSAMPROW outptr0, outptr1, outptr2;
                                      ^
TotalCrossVM/src/jpeg/jccolor.c:552:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->comp_info[1].component_needed = TRUE;
^
TotalCrossVM/src/jpeg/jccolor.c:553:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->comp_info[2].component_needed = TRUE;
^
TotalCrossVM/src/jpeg/jccolor.c:560:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->comp_info[1].component_needed = TRUE;
^
TotalCrossVM/src/jpeg/jccolor.c:561:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->comp_info[2].component_needed = TRUE;
^
TotalCrossVM/src/jpeg/jcdctmgr.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcdctmgr.c:363:33: warning: Either the condition 'qtblno>=4' is redundant or the array 'cinfo->quant_tbl_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
    qtbl = cinfo->quant_tbl_ptrs[qtblno];
                                ^
TotalCrossVM/src/jpeg/jcdctmgr.c:360:30: note: Assuming that condition 'qtblno>=4' is not redundant
    if (qtblno < 0 || qtblno >= NUM_QUANT_TBLS ||
                             ^
TotalCrossVM/src/jpeg/jcdctmgr.c:363:33: note: Array index out of bounds
    qtbl = cinfo->quant_tbl_ptrs[qtblno];
                                ^
TotalCrossVM/src/jpeg/jcdctmgr.c:363:33: warning: Either the condition 'qtblno<0' is redundant or the array 'cinfo->quant_tbl_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
    qtbl = cinfo->quant_tbl_ptrs[qtblno];
                                ^
TotalCrossVM/src/jpeg/jcdctmgr.c:360:16: note: Assuming that condition 'qtblno<0' is not redundant
    if (qtblno < 0 || qtblno >= NUM_QUANT_TBLS ||
               ^
TotalCrossVM/src/jpeg/jcdctmgr.c:363:33: note: Negative array index
    qtbl = cinfo->quant_tbl_ptrs[qtblno];
                                ^
TotalCrossVM/src/jpeg/jcdctmgr.c:157:27: style: The scope of the variable 'temp' can be reduced. [variableScope]
    { register FAST_FLOAT temp;
                          ^
TotalCrossVM/src/jpeg/jcdctmgr.c:46:11: style: union member 'divisor_table::int_array' is never used. [unusedStructMember]
  DCTELEM int_array[DCTSIZE2];
          ^
TotalCrossVM/src/jpeg/jcdctmgr.c:48:14: style: union member 'divisor_table::float_array' is never used. [unusedStructMember]
  FAST_FLOAT float_array[DCTSIZE2];
             ^
TotalCrossVM/src/jpeg/jchuff.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jchuff.c:243:17: warning: Either the condition 'i<0' is redundant or the array 'dtbl->ehufco[256]' is accessed at index -1, which is out of bounds. [negativeIndex]
    dtbl->ehufco[i] = huffcode[p];
                ^
TotalCrossVM/src/jpeg/jchuff.c:241:11: note: Assuming that condition 'i<0' is not redundant
    if (i < 0 || i > maxsymbol || dtbl->ehufsi[i])
          ^
TotalCrossVM/src/jpeg/jchuff.c:243:17: note: Negative array index
    dtbl->ehufco[i] = huffcode[p];
                ^
TotalCrossVM/src/jpeg/jchuff.c:244:17: warning: Either the condition 'i<0' is redundant or the array 'dtbl->ehufsi[256]' is accessed at index -1, which is out of bounds. [negativeIndex]
    dtbl->ehufsi[i] = huffsize[p];
                ^
TotalCrossVM/src/jpeg/jchuff.c:241:11: note: Assuming that condition 'i<0' is not redundant
    if (i < 0 || i > maxsymbol || dtbl->ehufsi[i])
          ^
TotalCrossVM/src/jpeg/jchuff.c:244:17: note: Negative array index
    dtbl->ehufsi[i] = huffsize[p];
                ^
TotalCrossVM/src/jpeg/jchuff.c:1334:11: warning: Either the condition 'codesize[i]>32' is redundant or the array 'bits[33]' is accessed at index 33, which is out of bounds. [arrayIndexOutOfBoundsCond]
      bits[codesize[i]]++;
          ^
TotalCrossVM/src/jpeg/jchuff.c:1331:23: note: Assuming that condition 'codesize[i]>32' is not redundant
      if (codesize[i] > MAX_CLEN)
                      ^
TotalCrossVM/src/jpeg/jchuff.c:1334:11: note: Array index out of bounds
      bits[codesize[i]]++;
          ^
TotalCrossVM/src/jpeg/jchuff.c:1507:28: warning: Either the condition 'tbl>=4' is redundant or the array 'entropy->dc_count_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
 if (entropy->dc_count_ptrs[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jchuff.c:1503:21: note: Assuming that condition 'tbl>=4' is not redundant
 if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
                    ^
TotalCrossVM/src/jpeg/jchuff.c:1507:28: note: Array index out of bounds
 if (entropy->dc_count_ptrs[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jchuff.c:1507:28: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->dc_count_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
 if (entropy->dc_count_ptrs[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jchuff.c:1503:10: note: Assuming that condition 'tbl<0' is not redundant
 if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
         ^
TotalCrossVM/src/jpeg/jchuff.c:1507:28: note: Negative array index
 if (entropy->dc_count_ptrs[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jchuff.c:1511:2: warning: Either the condition 'tbl>=4' is redundant or the array 'entropy->dc_count_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
 MEMZERO(entropy->dc_count_ptrs[tbl], 257 * SIZEOF(long));
 ^
TotalCrossVM/src/jpeg/jchuff.c:1503:21: note: Assuming that condition 'tbl>=4' is not redundant
 if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
                    ^
TotalCrossVM/src/jpeg/jchuff.c:1511:2: note: Array index out of bounds
 MEMZERO(entropy->dc_count_ptrs[tbl], 257 * SIZEOF(long));
 ^
TotalCrossVM/src/jpeg/jchuff.c:1511:2: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->dc_count_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
 MEMZERO(entropy->dc_count_ptrs[tbl], 257 * SIZEOF(long));
 ^
TotalCrossVM/src/jpeg/jchuff.c:1503:10: note: Assuming that condition 'tbl<0' is not redundant
 if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
         ^
TotalCrossVM/src/jpeg/jchuff.c:1511:2: note: Negative array index
 MEMZERO(entropy->dc_count_ptrs[tbl], 257 * SIZEOF(long));
 ^
TotalCrossVM/src/jpeg/jchuff.c:1527:28: warning: Either the condition 'tbl>=4' is redundant or the array 'entropy->ac_count_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
 if (entropy->ac_count_ptrs[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jchuff.c:1525:21: note: Assuming that condition 'tbl>=4' is not redundant
 if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
                    ^
TotalCrossVM/src/jpeg/jchuff.c:1527:28: note: Array index out of bounds
 if (entropy->ac_count_ptrs[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jchuff.c:1527:28: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->ac_count_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
 if (entropy->ac_count_ptrs[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jchuff.c:1525:10: note: Assuming that condition 'tbl<0' is not redundant
 if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
         ^
TotalCrossVM/src/jpeg/jchuff.c:1527:28: note: Negative array index
 if (entropy->ac_count_ptrs[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jchuff.c:1531:2: warning: Either the condition 'tbl>=4' is redundant or the array 'entropy->ac_count_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
 MEMZERO(entropy->ac_count_ptrs[tbl], 257 * SIZEOF(long));
 ^
TotalCrossVM/src/jpeg/jchuff.c:1525:21: note: Assuming that condition 'tbl>=4' is not redundant
 if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
                    ^
TotalCrossVM/src/jpeg/jchuff.c:1531:2: note: Array index out of bounds
 MEMZERO(entropy->ac_count_ptrs[tbl], 257 * SIZEOF(long));
 ^
TotalCrossVM/src/jpeg/jchuff.c:1531:2: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->ac_count_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
 MEMZERO(entropy->ac_count_ptrs[tbl], 257 * SIZEOF(long));
 ^
TotalCrossVM/src/jpeg/jchuff.c:1525:10: note: Assuming that condition 'tbl<0' is not redundant
 if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
         ^
TotalCrossVM/src/jpeg/jchuff.c:1531:2: note: Negative array index
 MEMZERO(entropy->ac_count_ptrs[tbl], 257 * SIZEOF(long));
 ^
TotalCrossVM/src/jpeg/jchuff.c:466:16: style: The scope of the variable 'temp' can be reduced. [variableScope]
  register int temp, nbits;
               ^
TotalCrossVM/src/jpeg/jchuff.c:466:22: style: The scope of the variable 'nbits' can be reduced. [variableScope]
  register int temp, nbits;
                     ^
TotalCrossVM/src/jpeg/jchuff.c:518:7: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int ci;
      ^
TotalCrossVM/src/jpeg/jchuff.c:549:16: style: The scope of the variable 'temp' can be reduced. [variableScope]
  register int temp, temp2;
               ^
TotalCrossVM/src/jpeg/jchuff.c:549:22: style: The scope of the variable 'temp2' can be reduced. [variableScope]
  register int temp, temp2;
                     ^
TotalCrossVM/src/jpeg/jchuff.c:550:16: style: The scope of the variable 'nbits' can be reduced. [variableScope]
  register int nbits;
               ^
TotalCrossVM/src/jpeg/jchuff.c:551:13: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int blkn, ci, tbl;
            ^
TotalCrossVM/src/jpeg/jchuff.c:551:17: style: The scope of the variable 'tbl' can be reduced. [variableScope]
  int blkn, ci, tbl;
                ^
TotalCrossVM/src/jpeg/jchuff.c:634:16: style: The scope of the variable 'temp' can be reduced. [variableScope]
  register int temp, temp2;
               ^
TotalCrossVM/src/jpeg/jchuff.c:1017:13: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int blkn, ci;
            ^
TotalCrossVM/src/jpeg/jchuff.c:1018:25: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info * compptr;
                        ^
TotalCrossVM/src/jpeg/jchuff.c:1198:25: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info * compptr;
                        ^
TotalCrossVM/src/jpeg/jchuff.c:1259:7: style: The scope of the variable 'c1' can be reduced. [variableScope]
  int c1, c2;
      ^
TotalCrossVM/src/jpeg/jchuff.c:1259:11: style: The scope of the variable 'c2' can be reduced. [variableScope]
  int c1, c2;
          ^
TotalCrossVM/src/jpeg/jchuff.c:1261:8: style: The scope of the variable 'v' can be reduced. [variableScope]
  long v;
       ^
TotalCrossVM/src/jpeg/jchuff.c:275:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:332:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    emit_byte_s(state, c, return FALSE);
^
TotalCrossVM/src/jpeg/jchuff.c:334:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      emit_byte_s(state, 0, return FALSE);
^
TotalCrossVM/src/jpeg/jchuff.c:394:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:500:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:502:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  emit_byte_s(state, 0xFF, return FALSE);
^
TotalCrossVM/src/jpeg/jchuff.c:503:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  emit_byte_s(state, JPEG_RST0 + restart_num, return FALSE);
^
TotalCrossVM/src/jpeg/jchuff.c:947:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:953:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:966:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:988:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:993:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:1002:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:1030:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:1041:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:1385:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  htbl->sent_table = FALSE;
^
TotalCrossVM/src/jpeg/jchuff.c:1533:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 jpeg_make_c_derived_tbl(cinfo, FALSE, tbl,
^
TotalCrossVM/src/jpeg/jchuff.c:279:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:343:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:397:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:511:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:619:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:729:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:774:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:906:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:1004:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:1061:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:1221:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:1423:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 did_dc[tbl] = TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:1434:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 did_ac[tbl] = TRUE;
^
TotalCrossVM/src/jpeg/jchuff.c:1515:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 jpeg_make_c_derived_tbl(cinfo, TRUE, tbl,
^
TotalCrossVM/src/jpeg/jcinit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcinit.c:41:27: style: Checking if unsigned expression 'cinfo->image_height' is less than zero. [unsignedLessThanZero]
  if (cinfo->image_height <= 0 || cinfo->image_width <= 0 ||
                          ^
TotalCrossVM/src/jpeg/jcinit.c:41:54: style: Checking if unsigned expression 'cinfo->image_width' is less than zero. [unsignedLessThanZero]
  if (cinfo->image_height <= 0 || cinfo->image_width <= 0 ||
                                                     ^
TotalCrossVM/src/jpeg/jcinit.c:52:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  jinit_c_master_control(cinfo, FALSE /* full compression */);
^
TotalCrossVM/src/jpeg/jcinit.c:58:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    jinit_c_prep_controller(cinfo, FALSE /* never need full buffer here */);
^
TotalCrossVM/src/jpeg/jcinit.c:72:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  jinit_c_main_controller(cinfo, FALSE /* never need full buffer here */);
^
TotalCrossVM/src/jpeg/jcmainct.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcmainct.c:80:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  mainp->suspended = FALSE;
^
TotalCrossVM/src/jpeg/jcmainct.c:154:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      mainp->suspended = FALSE;
^
TotalCrossVM/src/jpeg/jcmainct.c:145:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 mainp->suspended = TRUE;
^
TotalCrossVM/src/jpeg/jcmarker.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcmarker.c:163:9: warning: Either the condition 'qtbl==NULL' is redundant or there is possible null pointer dereference: qtbl. [nullPointerRedundantCheck]
  if (! qtbl->sent_table) {
        ^
TotalCrossVM/src/jpeg/jcmarker.c:154:12: note: Assuming that condition 'qtbl==NULL' is not redundant
  if (qtbl == NULL)
           ^
TotalCrossVM/src/jpeg/jcmarker.c:163:9: note: Null pointer dereference
  if (! qtbl->sent_table) {
        ^
TotalCrossVM/src/jpeg/jcmarker.c:203:9: warning: Either the condition 'htbl==NULL' is redundant or there is possible null pointer dereference: htbl. [nullPointerRedundantCheck]
  if (! htbl->sent_table) {
        ^
TotalCrossVM/src/jpeg/jcmarker.c:200:12: note: Assuming that condition 'htbl==NULL' is not redundant
  if (htbl == NULL)
           ^
TotalCrossVM/src/jpeg/jcmarker.c:203:9: note: Null pointer dereference
  if (! htbl->sent_table) {
        ^
TotalCrossVM/src/jpeg/jcmarker.c:191:7: style: The scope of the variable 'length' can be reduced. [variableScope]
  int length, i;
      ^
TotalCrossVM/src/jpeg/jcmarker.c:191:15: style: The scope of the variable 'i' can be reduced. [variableScope]
  int length, i;
              ^
TotalCrossVM/src/jpeg/jcmarker.c:234:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/jcmarker.c:351:10: style: The scope of the variable 'td' can be reduced. [variableScope]
  int i, td, ta;
         ^
TotalCrossVM/src/jpeg/jcmarker.c:351:14: style: The scope of the variable 'ta' can be reduced. [variableScope]
  int i, td, ta;
             ^
TotalCrossVM/src/jpeg/jcmarker.c:352:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/jcmarker.c:616:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
TotalCrossVM/src/jpeg/jcmarker.c:617:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/jcmarker.c:566:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    is_baseline = FALSE;
^
TotalCrossVM/src/jpeg/jcmarker.c:572:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 is_baseline = FALSE;
^
TotalCrossVM/src/jpeg/jcmarker.c:575:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      is_baseline = FALSE;
^
TotalCrossVM/src/jpeg/jcmarker.c:633:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 emit_dht(cinfo, compptr->dc_tbl_no, FALSE);
^
TotalCrossVM/src/jpeg/jcmarker.c:685:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 emit_dht(cinfo, i, FALSE);
^
TotalCrossVM/src/jpeg/jcmarker.c:179:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    qtbl->sent_table = TRUE;
^
TotalCrossVM/src/jpeg/jcmarker.c:219:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    htbl->sent_table = TRUE;
^
TotalCrossVM/src/jpeg/jcmarker.c:568:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    is_baseline = TRUE;
^
TotalCrossVM/src/jpeg/jcmarker.c:636:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 emit_dht(cinfo, compptr->ac_tbl_no, TRUE);
^
TotalCrossVM/src/jpeg/jcmarker.c:687:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 emit_dht(cinfo, i, TRUE);
^
TotalCrossVM/src/jpeg/jcmaster.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcmaster.c:570:7: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int ci, mcublks, tmp;
      ^
TotalCrossVM/src/jpeg/jcmaster.c:570:11: style: The scope of the variable 'mcublks' can be reduced. [variableScope]
  int ci, mcublks, tmp;
          ^
TotalCrossVM/src/jpeg/jcmaster.c:251:26: style: Checking if unsigned expression 'cinfo->jpeg_height' is less than zero. [unsignedLessThanZero]
  if (cinfo->jpeg_height <= 0 || cinfo->jpeg_width <= 0 ||
                         ^
TotalCrossVM/src/jpeg/jcmaster.c:251:52: style: Checking if unsigned expression 'cinfo->jpeg_width' is less than zero. [unsignedLessThanZero]
  if (cinfo->jpeg_height <= 0 || cinfo->jpeg_width <= 0 ||
                                                   ^
TotalCrossVM/src/jpeg/jcmaster.c:337:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    compptr->component_needed = FALSE;
^
TotalCrossVM/src/jpeg/jcmaster.c:385:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->progressive_mode = FALSE;
^
TotalCrossVM/src/jpeg/jcmaster.c:387:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      component_sent[ci] = FALSE;
^
TotalCrossVM/src/jpeg/jcmaster.c:683:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      master->pub.call_pass_startup = FALSE;
^
TotalCrossVM/src/jpeg/jcmaster.c:697:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      master->pub.call_pass_startup = FALSE;
^
TotalCrossVM/src/jpeg/jcmaster.c:714:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (*cinfo->entropy->start_pass) (cinfo, FALSE);
^
TotalCrossVM/src/jpeg/jcmaster.c:720:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    master->pub.call_pass_startup = FALSE;
^
TotalCrossVM/src/jpeg/jcmaster.c:749:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->master->call_pass_startup = FALSE; /* reset flag so call only once */
^
TotalCrossVM/src/jpeg/jcmaster.c:812:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  master->pub.is_last_pass = FALSE;
^
TotalCrossVM/src/jpeg/jcmaster.c:826:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->progressive_mode = FALSE;
^
TotalCrossVM/src/jpeg/jcmaster.c:831:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->arith_code = FALSE; /* disable arithmetic coding */
^
TotalCrossVM/src/jpeg/jcmaster.c:376:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->progressive_mode = TRUE;
^
TotalCrossVM/src/jpeg/jcmaster.c:459:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 component_sent[thisi] = TRUE;
^
TotalCrossVM/src/jpeg/jcmaster.c:686:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      master->pub.call_pass_startup = TRUE;
^
TotalCrossVM/src/jpeg/jcmaster.c:695:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      (*cinfo->entropy->start_pass) (cinfo, TRUE);
^
TotalCrossVM/src/jpeg/jcmaster.c:837:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->optimize_coding = TRUE; /* force Huffman optimization */
^
TotalCrossVM/src/jpeg/jcomapi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcomapi.c:92:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  tbl->sent_table = FALSE; /* make sure this is false in any new table */
^
TotalCrossVM/src/jpeg/jcomapi.c:104:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  tbl->sent_table = FALSE; /* make sure this is false in any new table */
^
TotalCrossVM/src/jpeg/jcparam.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcparam.c:44:36: warning: Either the condition 'which_tbl<0' is redundant or the array 'cinfo->quant_tbl_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
  qtblptr = & cinfo->quant_tbl_ptrs[which_tbl];
                                   ^
TotalCrossVM/src/jpeg/jcparam.c:41:17: note: Assuming that condition 'which_tbl<0' is not redundant
  if (which_tbl < 0 || which_tbl >= NUM_QUANT_TBLS)
                ^
TotalCrossVM/src/jpeg/jcparam.c:44:36: note: Negative array index
  qtblptr = & cinfo->quant_tbl_ptrs[which_tbl];
                                   ^
TotalCrossVM/src/jpeg/jcparam.c:35:8: style: The scope of the variable 'temp' can be reduced. [variableScope]
  long temp;
       ^
TotalCrossVM/src/jpeg/jcparam.c:573:7: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int ci;
      ^
TotalCrossVM/src/jpeg/jcparam.c:660:13: style: Variable 'scanptr' is assigned a value that is never used. [unreadVariable]
    scanptr = fill_a_scan(scanptr, 0, 1, 63, 1, 0);
            ^
TotalCrossVM/src/jpeg/jcparam.c:671:13: style: Variable 'scanptr' is assigned a value that is never used. [unreadVariable]
    scanptr = fill_scans(scanptr, ncomps, 1, 63, 1, 0);
            ^
TotalCrossVM/src/jpeg/jcparam.c:60:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (*qtblptr)->sent_table = FALSE;
^
TotalCrossVM/src/jpeg/jcparam.c:194:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (*htblptr)->sent_table = FALSE;
^
TotalCrossVM/src/jpeg/jcparam.c:324:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->raw_data_in = FALSE;
^
TotalCrossVM/src/jpeg/jcparam.c:333:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->arith_code = cinfo->data_precision > 8 ? TRUE : FALSE;
^
TotalCrossVM/src/jpeg/jcparam.c:336:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->optimize_coding = FALSE;
^
TotalCrossVM/src/jpeg/jcparam.c:339:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->CCIR601_sampling = FALSE;
^
TotalCrossVM/src/jpeg/jcparam.c:449:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->write_JFIF_header = FALSE; /* No marker for non-JFIF colorspaces */
^
TotalCrossVM/src/jpeg/jcparam.c:450:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->write_Adobe_marker = FALSE; /* write no Adobe marker by default */
^
TotalCrossVM/src/jpeg/jcparam.c:308:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  jpeg_set_quality(cinfo, 75, TRUE);
^
TotalCrossVM/src/jpeg/jcparam.c:333:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->arith_code = cinfo->data_precision > 8 ? TRUE : FALSE;
^
TotalCrossVM/src/jpeg/jcparam.c:342:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->do_fancy_downsampling = TRUE;
^
TotalCrossVM/src/jpeg/jcparam.c:463:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->write_JFIF_header = TRUE; /* Write a JFIF marker */
^
TotalCrossVM/src/jpeg/jcparam.c:469:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->write_Adobe_marker = TRUE; /* write Adobe marker to flag RGB */
^
TotalCrossVM/src/jpeg/jcparam.c:480:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->write_JFIF_header = TRUE; /* Write a JFIF marker */
^
TotalCrossVM/src/jpeg/jcparam.c:489:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->write_Adobe_marker = TRUE; /* write Adobe marker to flag CMYK */
^
TotalCrossVM/src/jpeg/jcparam.c:497:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->write_Adobe_marker = TRUE; /* write Adobe marker to flag YCCK */
^
TotalCrossVM/src/jpeg/jcparam.c:505:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->write_JFIF_header = TRUE; /* Write a JFIF marker */
^
TotalCrossVM/src/jpeg/jcparam.c:518:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->write_JFIF_header = TRUE; /* Write a JFIF marker */
^
TotalCrossVM/src/jpeg/jcphuff.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcphuff.c:165:30: warning: Either the condition 'tbl>=4' is redundant or the array 'entropy->count_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
      if (entropy->count_ptrs[tbl] == NULL)
                             ^
TotalCrossVM/src/jpeg/jcphuff.c:161:26: note: Assuming that condition 'tbl>=4' is not redundant
      if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
                         ^
TotalCrossVM/src/jpeg/jcphuff.c:165:30: note: Array index out of bounds
      if (entropy->count_ptrs[tbl] == NULL)
                             ^
TotalCrossVM/src/jpeg/jcphuff.c:165:30: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->count_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
      if (entropy->count_ptrs[tbl] == NULL)
                             ^
TotalCrossVM/src/jpeg/jcphuff.c:161:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
              ^
TotalCrossVM/src/jpeg/jcphuff.c:165:30: note: Negative array index
      if (entropy->count_ptrs[tbl] == NULL)
                             ^
TotalCrossVM/src/jpeg/jcphuff.c:169:7: warning: Either the condition 'tbl>=4' is redundant or the array 'entropy->count_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
      MEMZERO(entropy->count_ptrs[tbl], 257 * SIZEOF(long));
      ^
TotalCrossVM/src/jpeg/jcphuff.c:161:26: note: Assuming that condition 'tbl>=4' is not redundant
      if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
                         ^
TotalCrossVM/src/jpeg/jcphuff.c:169:7: note: Array index out of bounds
      MEMZERO(entropy->count_ptrs[tbl], 257 * SIZEOF(long));
      ^
TotalCrossVM/src/jpeg/jcphuff.c:169:7: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->count_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
      MEMZERO(entropy->count_ptrs[tbl], 257 * SIZEOF(long));
      ^
TotalCrossVM/src/jpeg/jcphuff.c:161:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_HUFF_TBLS)
              ^
TotalCrossVM/src/jpeg/jcphuff.c:169:7: note: Negative array index
      MEMZERO(entropy->count_ptrs[tbl], 257 * SIZEOF(long));
      ^
TotalCrossVM/src/jpeg/jcphuff.c:318:16: style: The scope of the variable 'temp' can be reduced. [variableScope]
  register int temp, nbits;
               ^
TotalCrossVM/src/jpeg/jcphuff.c:318:22: style: The scope of the variable 'nbits' can be reduced. [variableScope]
  register int temp, nbits;
                     ^
TotalCrossVM/src/jpeg/jcphuff.c:349:7: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int ci;
      ^
TotalCrossVM/src/jpeg/jcphuff.c:380:16: style: The scope of the variable 'temp' can be reduced. [variableScope]
  register int temp, temp2;
               ^
TotalCrossVM/src/jpeg/jcphuff.c:380:22: style: The scope of the variable 'temp2' can be reduced. [variableScope]
  register int temp, temp2;
                     ^
TotalCrossVM/src/jpeg/jcphuff.c:381:16: style: The scope of the variable 'nbits' can be reduced. [variableScope]
  register int nbits;
               ^
TotalCrossVM/src/jpeg/jcphuff.c:382:13: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int blkn, ci;
            ^
TotalCrossVM/src/jpeg/jcphuff.c:384:13: style: The scope of the variable 'block' can be reduced. [variableScope]
  JBLOCKROW block;
            ^
TotalCrossVM/src/jpeg/jcphuff.c:385:25: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info * compptr;
                        ^
TotalCrossVM/src/jpeg/jcphuff.c:467:16: style: The scope of the variable 'temp' can be reduced. [variableScope]
  register int temp, temp2;
               ^
TotalCrossVM/src/jpeg/jcphuff.c:574:16: style: The scope of the variable 'temp' can be reduced. [variableScope]
  register int temp;
               ^
TotalCrossVM/src/jpeg/jcphuff.c:577:13: style: The scope of the variable 'block' can be reduced. [variableScope]
  JBLOCKROW block;
            ^
TotalCrossVM/src/jpeg/jcphuff.c:454:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jcphuff.c:560:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jcphuff.c:609:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jcphuff.c:737:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jcphuff.c:803:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      did[tbl] = TRUE;
^
TotalCrossVM/src/jpeg/jcprepct.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcprepct.c:135:7: style: The scope of the variable 'numrows' can be reduced. [variableScope]
  int numrows, ci;
      ^
TotalCrossVM/src/jpeg/jcprepct.c:136:14: style: The scope of the variable 'inrows' can be reduced. [variableScope]
  JDIMENSION inrows;
             ^
TotalCrossVM/src/jpeg/jcsample.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jcsample.c:100:20: style: The scope of the variable 'pixval' can be reduced. [variableScope]
  register JSAMPLE pixval;
                   ^
TotalCrossVM/src/jpeg/jcsample.c:101:16: style: The scope of the variable 'count' can be reduced. [variableScope]
  register int count;
               ^
TotalCrossVM/src/jpeg/jcsample.c:102:7: style: The scope of the variable 'row' can be reduced. [variableScope]
  int row;
      ^
TotalCrossVM/src/jpeg/jcsample.c:130:14: style: The scope of the variable 'in_ptr' can be reduced. [variableScope]
  JSAMPARRAY in_ptr, out_ptr;
             ^
TotalCrossVM/src/jpeg/jcsample.c:130:22: style: The scope of the variable 'out_ptr' can be reduced. [variableScope]
  JSAMPARRAY in_ptr, out_ptr;
                     ^
TotalCrossVM/src/jpeg/jcsample.c:157:19: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW inptr, outptr;
                  ^
TotalCrossVM/src/jpeg/jcsample.c:230:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr, outptr;
                    ^
TotalCrossVM/src/jpeg/jcsample.c:230:28: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW inptr, outptr;
                           ^
TotalCrossVM/src/jpeg/jcsample.c:231:16: style: The scope of the variable 'bias' can be reduced. [variableScope]
  register int bias;
               ^
TotalCrossVM/src/jpeg/jcsample.c:267:21: style: The scope of the variable 'inptr0' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, outptr;
                    ^
TotalCrossVM/src/jpeg/jcsample.c:267:29: style: The scope of the variable 'inptr1' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, outptr;
                            ^
TotalCrossVM/src/jpeg/jcsample.c:267:37: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, outptr;
                                    ^
TotalCrossVM/src/jpeg/jcsample.c:268:16: style: The scope of the variable 'bias' can be reduced. [variableScope]
  register int bias;
               ^
TotalCrossVM/src/jpeg/jcsample.c:311:21: style: The scope of the variable 'inptr0' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
                    ^
TotalCrossVM/src/jpeg/jcsample.c:311:29: style: The scope of the variable 'inptr1' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
                            ^
TotalCrossVM/src/jpeg/jcsample.c:311:37: style: The scope of the variable 'above_ptr' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
                                    ^
TotalCrossVM/src/jpeg/jcsample.c:311:48: style: The scope of the variable 'below_ptr' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
                                               ^
TotalCrossVM/src/jpeg/jcsample.c:311:59: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
                                                          ^
TotalCrossVM/src/jpeg/jcsample.c:312:9: style: The scope of the variable 'membersum' can be reduced. [variableScope]
  INT32 membersum, neighsum, memberscale, neighscale;
        ^
TotalCrossVM/src/jpeg/jcsample.c:312:20: style: The scope of the variable 'neighsum' can be reduced. [variableScope]
  INT32 membersum, neighsum, memberscale, neighscale;
                   ^
TotalCrossVM/src/jpeg/jcsample.c:412:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr, above_ptr, below_ptr, outptr;
                    ^
TotalCrossVM/src/jpeg/jcsample.c:412:28: style: The scope of the variable 'above_ptr' can be reduced. [variableScope]
  register JSAMPROW inptr, above_ptr, below_ptr, outptr;
                           ^
TotalCrossVM/src/jpeg/jcsample.c:412:39: style: The scope of the variable 'below_ptr' can be reduced. [variableScope]
  register JSAMPROW inptr, above_ptr, below_ptr, outptr;
                                      ^
TotalCrossVM/src/jpeg/jcsample.c:412:50: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW inptr, above_ptr, below_ptr, outptr;
                                                 ^
TotalCrossVM/src/jpeg/jcsample.c:413:9: style: The scope of the variable 'membersum' can be reduced. [variableScope]
  INT32 membersum, neighsum, memberscale, neighscale;
        ^
TotalCrossVM/src/jpeg/jcsample.c:413:20: style: The scope of the variable 'neighsum' can be reduced. [variableScope]
  INT32 membersum, neighsum, memberscale, neighscale;
                   ^
TotalCrossVM/src/jpeg/jcsample.c:414:7: style: The scope of the variable 'colsum' can be reduced. [variableScope]
  int colsum, lastcolsum, nextcolsum;
      ^
TotalCrossVM/src/jpeg/jcsample.c:414:15: style: The scope of the variable 'lastcolsum' can be reduced. [variableScope]
  int colsum, lastcolsum, nextcolsum;
              ^
TotalCrossVM/src/jpeg/jcsample.c:414:27: style: The scope of the variable 'nextcolsum' can be reduced. [variableScope]
  int colsum, lastcolsum, nextcolsum;
                          ^
TotalCrossVM/src/jpeg/jcsample.c:492:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  downsample->pub.need_context_rows = FALSE;
^
TotalCrossVM/src/jpeg/jcsample.c:520:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      smoothok = FALSE;
^
TotalCrossVM/src/jpeg/jcsample.c:533:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      smoothok = FALSE;
^
TotalCrossVM/src/jpeg/jcsample.c:483:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  boolean smoothok = TRUE;
^
TotalCrossVM/src/jpeg/jcsample.c:514:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 downsample->pub.need_context_rows = TRUE;
^
TotalCrossVM/src/jpeg/jcsample.c:527:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 downsample->pub.need_context_rows = TRUE;
^
TotalCrossVM/src/jpeg/jctrans.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jctrans.c:128:41: warning: Either the condition 'tblno>=4' is redundant or the array 'srcinfo->quant_tbl_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
    slot_quant = srcinfo->quant_tbl_ptrs[tblno];
                                        ^
TotalCrossVM/src/jpeg/jctrans.c:125:28: note: Assuming that condition 'tblno>=4' is not redundant
    if (tblno < 0 || tblno >= NUM_QUANT_TBLS ||
                           ^
TotalCrossVM/src/jpeg/jctrans.c:128:41: note: Array index out of bounds
    slot_quant = srcinfo->quant_tbl_ptrs[tblno];
                                        ^
TotalCrossVM/src/jpeg/jctrans.c:128:41: warning: Either the condition 'tblno<0' is redundant or the array 'srcinfo->quant_tbl_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
    slot_quant = srcinfo->quant_tbl_ptrs[tblno];
                                        ^
TotalCrossVM/src/jpeg/jctrans.c:125:15: note: Assuming that condition 'tblno<0' is not redundant
    if (tblno < 0 || tblno >= NUM_QUANT_TBLS ||
              ^
TotalCrossVM/src/jpeg/jctrans.c:128:41: note: Negative array index
    slot_quant = srcinfo->quant_tbl_ptrs[tblno];
                                        ^
TotalCrossVM/src/jpeg/jctrans.c:69:15: style: The scope of the variable 'c_quant' can be reduced. [variableScope]
  JQUANT_TBL *c_quant, *slot_quant;
              ^
TotalCrossVM/src/jpeg/jctrans.c:69:25: style: The scope of the variable 'slot_quant' can be reduced. [variableScope]
  JQUANT_TBL *c_quant, *slot_quant;
                        ^
TotalCrossVM/src/jpeg/jctrans.c:44:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  jpeg_suppress_tables(cinfo, FALSE);
^
TotalCrossVM/src/jpeg/jctrans.c:104:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      (*qtblptr)->sent_table = FALSE;
^
TotalCrossVM/src/jpeg/jctrans.c:294:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/jctrans.c:338:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jctrans.c:170:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  jinit_c_master_control(cinfo, TRUE /* transcode only */);
^
TotalCrossVM/src/jpeg/jctrans.c:347:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdapimin.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdapimin.c:195:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->buffered_image = FALSE;
^
TotalCrossVM/src/jpeg/jdapimin.c:196:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->raw_data_out = FALSE;
^
TotalCrossVM/src/jpeg/jdapimin.c:200:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->quantize_colors = FALSE;
^
TotalCrossVM/src/jpeg/jdapimin.c:211:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->enable_1pass_quant = FALSE;
^
TotalCrossVM/src/jpeg/jdapimin.c:212:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->enable_external_quant = FALSE;
^
TotalCrossVM/src/jpeg/jdapimin.c:213:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->enable_2pass_quant = FALSE;
^
TotalCrossVM/src/jpeg/jdapimin.c:392:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;  /* Suspend, come back later */
^
TotalCrossVM/src/jpeg/jdapimin.c:56:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->is_decompressor = TRUE;
^
TotalCrossVM/src/jpeg/jdapimin.c:198:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->do_fancy_upsampling = TRUE;
^
TotalCrossVM/src/jpeg/jdapimin.c:199:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->do_block_smoothing = TRUE;
^
TotalCrossVM/src/jpeg/jdapimin.c:204:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->two_pass_quantize = TRUE;
^
TotalCrossVM/src/jpeg/jdapimin.c:398:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdapistd.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdapistd.c:63:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   return FALSE;
^
TotalCrossVM/src/jpeg/jdapistd.c:121:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;  /* No progress made, must suspend */
^
TotalCrossVM/src/jpeg/jdapistd.c:270:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;  /* Suspend, come back later */
^
TotalCrossVM/src/jpeg/jdapistd.c:47:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return TRUE;
^
TotalCrossVM/src/jpeg/jdapistd.c:135:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdapistd.c:273:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdarith.c:718:28: warning: Either the condition 'tbl>=16' is redundant or the array 'entropy->dc_stats[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      if (entropy->dc_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jdarith.c:716:26: note: Assuming that condition 'tbl>=16' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
                         ^
TotalCrossVM/src/jpeg/jdarith.c:718:28: note: Array index out of bounds
      if (entropy->dc_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jdarith.c:718:28: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->dc_stats[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      if (entropy->dc_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jdarith.c:716:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
              ^
TotalCrossVM/src/jpeg/jdarith.c:718:28: note: Negative array index
      if (entropy->dc_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jdarith.c:721:7: warning: Either the condition 'tbl>=16' is redundant or the array 'entropy->dc_stats[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jdarith.c:716:26: note: Assuming that condition 'tbl>=16' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
                         ^
TotalCrossVM/src/jpeg/jdarith.c:721:7: note: Array index out of bounds
      MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jdarith.c:721:7: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->dc_stats[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jdarith.c:716:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
              ^
TotalCrossVM/src/jpeg/jdarith.c:721:7: note: Negative array index
      MEMZERO(entropy->dc_stats[tbl], DC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jdarith.c:731:28: warning: Either the condition 'tbl>=16' is redundant or the array 'entropy->ac_stats[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      if (entropy->ac_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jdarith.c:729:26: note: Assuming that condition 'tbl>=16' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
                         ^
TotalCrossVM/src/jpeg/jdarith.c:731:28: note: Array index out of bounds
      if (entropy->ac_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jdarith.c:731:28: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->ac_stats[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      if (entropy->ac_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jdarith.c:729:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
              ^
TotalCrossVM/src/jpeg/jdarith.c:731:28: note: Negative array index
      if (entropy->ac_stats[tbl] == NULL)
                           ^
TotalCrossVM/src/jpeg/jdarith.c:734:7: warning: Either the condition 'tbl>=16' is redundant or the array 'entropy->ac_stats[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jdarith.c:729:26: note: Assuming that condition 'tbl>=16' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
                         ^
TotalCrossVM/src/jpeg/jdarith.c:734:7: note: Array index out of bounds
      MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jdarith.c:734:7: warning: Either the condition 'tbl<0' is redundant or the array 'entropy->ac_stats[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jdarith.c:729:15: note: Assuming that condition 'tbl<0' is not redundant
      if (tbl < 0 || tbl >= NUM_ARITH_TBLS)
              ^
TotalCrossVM/src/jpeg/jdarith.c:734:7: note: Negative array index
      MEMZERO(entropy->ac_stats[tbl], AC_STAT_BINS);
      ^
TotalCrossVM/src/jpeg/jdarith.c:194:25: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info * compptr;
                        ^
TotalCrossVM/src/jpeg/jdarith.c:245:13: style: The scope of the variable 'block' can be reduced. [variableScope]
  JBLOCKROW block;
            ^
TotalCrossVM/src/jpeg/jdarith.c:246:18: style: The scope of the variable 'st' can be reduced. [variableScope]
  unsigned char *st;
                 ^
TotalCrossVM/src/jpeg/jdarith.c:247:13: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int blkn, ci, tbl, sign;
            ^
TotalCrossVM/src/jpeg/jdarith.c:247:17: style: The scope of the variable 'tbl' can be reduced. [variableScope]
  int blkn, ci, tbl, sign;
                ^
TotalCrossVM/src/jpeg/jdarith.c:325:18: style: The scope of the variable 'st' can be reduced. [variableScope]
  unsigned char *st;
                 ^
TotalCrossVM/src/jpeg/jdarith.c:326:12: style: The scope of the variable 'sign' can be reduced. [variableScope]
  int tbl, sign, k;
           ^
TotalCrossVM/src/jpeg/jdarith.c:327:7: style: The scope of the variable 'v' can be reduced. [variableScope]
  int v, m;
      ^
TotalCrossVM/src/jpeg/jdarith.c:327:10: style: The scope of the variable 'm' can be reduced. [variableScope]
  int v, m;
         ^
TotalCrossVM/src/jpeg/jdarith.c:441:18: style: The scope of the variable 'st' can be reduced. [variableScope]
  unsigned char *st;
                 ^
TotalCrossVM/src/jpeg/jdarith.c:515:13: style: The scope of the variable 'block' can be reduced. [variableScope]
  JBLOCKROW block;
            ^
TotalCrossVM/src/jpeg/jdarith.c:516:18: style: The scope of the variable 'st' can be reduced. [variableScope]
  unsigned char *st;
                 ^
TotalCrossVM/src/jpeg/jdarith.c:517:13: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int blkn, ci, tbl, sign, k;
            ^
TotalCrossVM/src/jpeg/jdarith.c:517:17: style: The scope of the variable 'tbl' can be reduced. [variableScope]
  int blkn, ci, tbl, sign, k;
                ^
TotalCrossVM/src/jpeg/jdarith.c:462:13: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
  m1 = (-1) << cinfo->Al; /* -1 in the bit position being coded */
            ^
TotalCrossVM/src/jpeg/jdarith.c:257:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (entropy->ct == -1) return TRUE; /* if error do nothing */
^
TotalCrossVM/src/jpeg/jdarith.c:286:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:311:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:337:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (entropy->ct == -1) return TRUE; /* if error do nothing */
^
TotalCrossVM/src/jpeg/jdarith.c:359:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:376:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:392:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:427:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:453:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (entropy->ct == -1) return TRUE; /* if error do nothing */
^
TotalCrossVM/src/jpeg/jdarith.c:497:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:502:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:528:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (entropy->ct == -1) return TRUE; /* if error do nothing */
^
TotalCrossVM/src/jpeg/jdarith.c:561:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:601:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:618:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       return TRUE;
^
TotalCrossVM/src/jpeg/jdarith.c:634:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdatadst.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdatadst.c:260:8: warning: Either the condition 'outbuffer==NULL' is redundant or there is possible null pointer dereference: outbuffer. [nullPointerRedundantCheck]
  if (*outbuffer == NULL || *outsize == 0) {
       ^
TotalCrossVM/src/jpeg/jdatadst.c:240:17: note: Assuming that condition 'outbuffer==NULL' is not redundant
  if (outbuffer == NULL || outsize == NULL) /* sanity check */
                ^
TotalCrossVM/src/jpeg/jdatadst.c:260:8: note: Null pointer dereference
  if (*outbuffer == NULL || *outsize == 0) {
       ^
TotalCrossVM/src/jpeg/jdatadst.c:143:43: warning: Either the condition 'nextbuffer==NULL' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
  dest->pub.next_output_byte = nextbuffer + dest->bufsize;
                                          ^
TotalCrossVM/src/jpeg/jdatadst.c:133:18: note: Assuming that condition 'nextbuffer==NULL' is not redundant
  if (nextbuffer == NULL)
                 ^
TotalCrossVM/src/jpeg/jdatadst.c:143:43: note: Null pointer addition
  dest->pub.next_output_byte = nextbuffer + dest->bufsize;
                                          ^
TotalCrossVM/src/jpeg/jdatadst.c:119:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdatadst.c:149:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdatasrc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdatasrc.c:104:14: style: Checking if unsigned expression 'nbytes' is less than zero. [unsignedLessThanZero]
  if (nbytes <= 0) {
             ^
TotalCrossVM/src/jpeg/jdatasrc.c:116:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  src->start_of_file = FALSE;
^
TotalCrossVM/src/jpeg/jdatasrc.c:53:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  src->start_of_file = TRUE;
^
TotalCrossVM/src/jpeg/jdatasrc.c:118:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdatasrc.c:139:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdcoefct.c:413:16: style: The scope of the variable 'qtable' can be reduced. [variableScope]
  JQUANT_TBL * qtable;
               ^
TotalCrossVM/src/jpeg/jdcoefct.c:348:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/jdcoefct.c:410:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  boolean smoothing_useful = FALSE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:418:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:432:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:440:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:444:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:510:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      last_row = FALSE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:524:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) access_rows, FALSE);
^
TotalCrossVM/src/jpeg/jdcoefct.c:526:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      first_row = FALSE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:530:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) 0, (JDIMENSION) access_rows, FALSE);
^
TotalCrossVM/src/jpeg/jdcoefct.c:262:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/jdcoefct.c:449:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 smoothing_useful = TRUE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:516:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      last_row = TRUE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:531:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      first_row = TRUE;
^
TotalCrossVM/src/jpeg/jdcoefct.c:710:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ((j_common_ptr) cinfo, JPOOL_IMAGE, TRUE,
^
TotalCrossVM/src/jpeg/jdcolor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdcolor.c:210:21: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW outptr;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:211:21: style: The scope of the variable 'inptr0' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:211:29: style: The scope of the variable 'inptr1' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                            ^
TotalCrossVM/src/jpeg/jdcolor.c:211:37: style: The scope of the variable 'inptr2' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                                    ^
TotalCrossVM/src/jpeg/jdcolor.c:285:21: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW outptr;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:286:21: style: The scope of the variable 'inptr0' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:286:29: style: The scope of the variable 'inptr1' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                            ^
TotalCrossVM/src/jpeg/jdcolor.c:286:37: style: The scope of the variable 'inptr2' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                                    ^
TotalCrossVM/src/jpeg/jdcolor.c:323:21: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW outptr;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:324:21: style: The scope of the variable 'inptr0' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:324:29: style: The scope of the variable 'inptr1' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                            ^
TotalCrossVM/src/jpeg/jdcolor.c:324:37: style: The scope of the variable 'inptr2' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                                    ^
TotalCrossVM/src/jpeg/jdcolor.c:363:21: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW outptr;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:364:21: style: The scope of the variable 'inptr0' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:364:29: style: The scope of the variable 'inptr1' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                            ^
TotalCrossVM/src/jpeg/jdcolor.c:364:37: style: The scope of the variable 'inptr2' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2;
                                    ^
TotalCrossVM/src/jpeg/jdcolor.c:402:21: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW outptr;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:514:21: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW outptr;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:515:21: style: The scope of the variable 'inptr0' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2, inptr3;
                    ^
TotalCrossVM/src/jpeg/jdcolor.c:515:29: style: The scope of the variable 'inptr1' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2, inptr3;
                            ^
TotalCrossVM/src/jpeg/jdcolor.c:515:37: style: The scope of the variable 'inptr2' can be reduced. [variableScope]
  register JSAMPROW inptr0, inptr1, inptr2, inptr3;
                                    ^
TotalCrossVM/src/jpeg/jdcolor.c:628:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 cinfo->comp_info[ci].component_needed = FALSE;
^
TotalCrossVM/src/jpeg/jddctmgr.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdhuff.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdhuff.c:941:15: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    m1 = (-1) << cinfo->Al; /* -1 in the bit position being coded */
              ^
TotalCrossVM/src/jpeg/jdhuff.c:486:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:503:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:661:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:678:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    entropy->insufficient_data = FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:724:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:747:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      HUFF_DECODE(s, br_state, tbl, return FALSE, label1);
^
TotalCrossVM/src/jpeg/jdhuff.c:749:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:794:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:821:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 HUFF_DECODE(s, br_state, tbl, return FALSE, label2);
^
TotalCrossVM/src/jpeg/jdhuff.c:826:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:835:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       CHECK_BIT_BUFFER(br_state, r, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:877:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:893:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    CHECK_BIT_BUFFER(br_state, 1, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:932:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:1061:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:1083:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:1110:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      HUFF_DECODE(s, br_state, htbl, return FALSE, label1);
^
TotalCrossVM/src/jpeg/jdhuff.c:1118:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:1131:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   HUFF_DECODE(s, br_state, htbl, return FALSE, label2);
^
TotalCrossVM/src/jpeg/jdhuff.c:1138:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:1154:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:1162:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 HUFF_DECODE(s, br_state, htbl, return FALSE, label3);
^
TotalCrossVM/src/jpeg/jdhuff.c:1169:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:1210:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:1234:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      HUFF_DECODE(s, br_state, htbl, return FALSE, label1);
^
TotalCrossVM/src/jpeg/jdhuff.c:1242:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:1255:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   HUFF_DECODE(s, br_state, htbl, return FALSE, label2);
^
TotalCrossVM/src/jpeg/jdhuff.c:1262:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:1278:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:1286:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 HUFF_DECODE(s, br_state, htbl, return FALSE, label3);
^
TotalCrossVM/src/jpeg/jdhuff.c:1293:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CHECK_BIT_BUFFER(br_state, s, return FALSE);
^
TotalCrossVM/src/jpeg/jdhuff.c:1400:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 jpeg_make_d_derived_tbl(cinfo, FALSE, tbl,
^
TotalCrossVM/src/jpeg/jdhuff.c:1442:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 jpeg_make_d_derived_tbl(cinfo, FALSE, tbl,
^
TotalCrossVM/src/jpeg/jdhuff.c:1509:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  entropy->insufficient_data = FALSE;
^
TotalCrossVM/src/jpeg/jdhuff.c:547:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ((huff_entropy_ptr) cinfo->entropy)->insufficient_data = TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:561:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:680:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:769:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:856:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:905:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:1054:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:1189:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:1313:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdhuff.c:1395:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   jpeg_make_d_derived_tbl(cinfo, TRUE, tbl,
^
TotalCrossVM/src/jpeg/jdhuff.c:1438:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      jpeg_make_d_derived_tbl(cinfo, TRUE, tbl,
^
TotalCrossVM/src/jpeg/jdinput.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdinput.c:507:5: warning: Either the condition 'qtblno>=4' is redundant or the array 'cinfo->quant_tbl_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
    MEMCOPY(qtbl, cinfo->quant_tbl_ptrs[qtblno], SIZEOF(JQUANT_TBL));
    ^
TotalCrossVM/src/jpeg/jdinput.c:500:30: note: Assuming that condition 'qtblno>=4' is not redundant
    if (qtblno < 0 || qtblno >= NUM_QUANT_TBLS ||
                             ^
TotalCrossVM/src/jpeg/jdinput.c:507:5: note: Array index out of bounds
    MEMCOPY(qtbl, cinfo->quant_tbl_ptrs[qtblno], SIZEOF(JQUANT_TBL));
    ^
TotalCrossVM/src/jpeg/jdinput.c:507:5: warning: Either the condition 'qtblno<0' is redundant or the array 'cinfo->quant_tbl_ptrs[4]' is accessed at index -1, which is out of bounds. [negativeIndex]
    MEMCOPY(qtbl, cinfo->quant_tbl_ptrs[qtblno], SIZEOF(JQUANT_TBL));
    ^
TotalCrossVM/src/jpeg/jdinput.c:500:16: note: Assuming that condition 'qtblno<0' is not redundant
    if (qtblno < 0 || qtblno >= NUM_QUANT_TBLS ||
               ^
TotalCrossVM/src/jpeg/jdinput.c:507:5: note: Negative array index
    MEMCOPY(qtbl, cinfo->quant_tbl_ptrs[qtblno], SIZEOF(JQUANT_TBL));
    ^
TotalCrossVM/src/jpeg/jdinput.c:392:7: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int ci, mcublks, tmp;
      ^
TotalCrossVM/src/jpeg/jdinput.c:392:11: style: The scope of the variable 'mcublks' can be reduced. [variableScope]
  int ci, mcublks, tmp;
          ^
TotalCrossVM/src/jpeg/jdinput.c:563:7: style: The scope of the variable 'val' can be reduced. [variableScope]
  int val;
      ^
TotalCrossVM/src/jpeg/jdinput.c:383:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->inputctl->has_multiple_scans = FALSE;
^
TotalCrossVM/src/jpeg/jdinput.c:625:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  inputctl->pub.has_multiple_scans = FALSE; /* "unknown" would be better */
^
TotalCrossVM/src/jpeg/jdinput.c:626:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  inputctl->pub.eoi_reached = FALSE;
^
TotalCrossVM/src/jpeg/jdinput.c:659:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  inputctl->pub.has_multiple_scans = FALSE; /* "unknown" would be better */
^
TotalCrossVM/src/jpeg/jdinput.c:660:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  inputctl->pub.eoi_reached = FALSE;
^
TotalCrossVM/src/jpeg/jdinput.c:369:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    compptr->component_needed = TRUE;
^
TotalCrossVM/src/jpeg/jdinput.c:381:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->inputctl->has_multiple_scans = TRUE;
^
TotalCrossVM/src/jpeg/jdinput.c:594:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      inputctl->pub.eoi_reached = TRUE;
^
TotalCrossVM/src/jpeg/jdmainct.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdmainct.c:164:11: style: The scope of the variable 'rgroup' can be reduced. [variableScope]
  int ci, rgroup;
          ^
TotalCrossVM/src/jpeg/jdmainct.c:205:14: style: The scope of the variable 'rgroup' can be reduced. [variableScope]
  int ci, i, rgroup;
             ^
TotalCrossVM/src/jpeg/jdmainct.c:245:14: style: The scope of the variable 'rgroup' can be reduced. [variableScope]
  int ci, i, rgroup;
             ^
TotalCrossVM/src/jpeg/jdmainct.c:274:14: style: The scope of the variable 'rgroup' can be reduced. [variableScope]
  int ci, i, rgroup, iMCUheight, rows_left;
             ^
TotalCrossVM/src/jpeg/jdmainct.c:274:22: style: The scope of the variable 'iMCUheight' can be reduced. [variableScope]
  int ci, i, rgroup, iMCUheight, rows_left;
                     ^
TotalCrossVM/src/jpeg/jdmainct.c:274:34: style: The scope of the variable 'rows_left' can be reduced. [variableScope]
  int ci, i, rgroup, iMCUheight, rows_left;
                                 ^
TotalCrossVM/src/jpeg/jdmainct.c:480:11: style: The scope of the variable 'rgroup' can be reduced. [variableScope]
  int ci, rgroup, ngroups;
          ^
TotalCrossVM/src/jpeg/jdmainct.c:324:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    mainp->buffer_full = FALSE; /* Mark buffer empty */
^
TotalCrossVM/src/jpeg/jdmainct.c:374:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    mainp->buffer_full = FALSE;
^
TotalCrossVM/src/jpeg/jdmainct.c:441:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    mainp->buffer_full = FALSE;
^
TotalCrossVM/src/jpeg/jdmainct.c:357:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    mainp->buffer_full = TRUE; /* OK, we have an iMCU row to work with */
^
TotalCrossVM/src/jpeg/jdmainct.c:397:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    mainp->buffer_full = TRUE; /* OK, we have an iMCU row to work with */
^
TotalCrossVM/src/jpeg/jdmarker.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdmarker.c:435:24: warning: Either the condition 'index>=(2*16)' is redundant or the array 'cinfo->arith_ac_K[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
      cinfo->arith_ac_K[index-NUM_ARITH_TBLS] = (UINT8) val;
                       ^
TotalCrossVM/src/jpeg/jdmarker.c:431:28: note: Assuming that condition 'index>=(2*16)' is not redundant
    if (index < 0 || index >= (2*NUM_ARITH_TBLS))
                           ^
TotalCrossVM/src/jpeg/jdmarker.c:435:24: note: Array index out of bounds
      cinfo->arith_ac_K[index-NUM_ARITH_TBLS] = (UINT8) val;
                       ^
TotalCrossVM/src/jpeg/jdmarker.c:437:24: warning: Either the condition 'index<0' is redundant or the array 'cinfo->arith_dc_L[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      cinfo->arith_dc_L[index] = (UINT8) (val & 0x0F);
                       ^
TotalCrossVM/src/jpeg/jdmarker.c:431:15: note: Assuming that condition 'index<0' is not redundant
    if (index < 0 || index >= (2*NUM_ARITH_TBLS))
              ^
TotalCrossVM/src/jpeg/jdmarker.c:437:24: note: Negative array index
      cinfo->arith_dc_L[index] = (UINT8) (val & 0x0F);
                       ^
TotalCrossVM/src/jpeg/jdmarker.c:438:24: warning: Either the condition 'index<0' is redundant or the array 'cinfo->arith_dc_U[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      cinfo->arith_dc_U[index] = (UINT8) (val >> 4);
                       ^
TotalCrossVM/src/jpeg/jdmarker.c:431:15: note: Assuming that condition 'index<0' is not redundant
    if (index < 0 || index >= (2*NUM_ARITH_TBLS))
              ^
TotalCrossVM/src/jpeg/jdmarker.c:438:24: note: Negative array index
      cinfo->arith_dc_U[index] = (UINT8) (val >> 4);
                       ^
TotalCrossVM/src/jpeg/jdmarker.c:439:28: warning: Either the condition 'index<0' is redundant or the array 'cinfo->arith_dc_L[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      if (cinfo->arith_dc_L[index] > cinfo->arith_dc_U[index])
                           ^
TotalCrossVM/src/jpeg/jdmarker.c:431:15: note: Assuming that condition 'index<0' is not redundant
    if (index < 0 || index >= (2*NUM_ARITH_TBLS))
              ^
TotalCrossVM/src/jpeg/jdmarker.c:439:28: note: Negative array index
      if (cinfo->arith_dc_L[index] > cinfo->arith_dc_U[index])
                           ^
TotalCrossVM/src/jpeg/jdmarker.c:439:55: warning: Either the condition 'index<0' is redundant or the array 'cinfo->arith_dc_U[16]' is accessed at index -1, which is out of bounds. [negativeIndex]
      if (cinfo->arith_dc_L[index] > cinfo->arith_dc_U[index])
                                                      ^
TotalCrossVM/src/jpeg/jdmarker.c:431:15: note: Assuming that condition 'index<0' is not redundant
    if (index < 0 || index >= (2*NUM_ARITH_TBLS))
              ^
TotalCrossVM/src/jpeg/jdmarker.c:439:55: note: Negative array index
      if (cinfo->arith_dc_L[index] > cinfo->arith_dc_U[index])
                                                      ^
TotalCrossVM/src/jpeg/jdmarker.c:556:30: warning: Either the condition 'n>=4' is redundant or the array 'cinfo->quant_tbl_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
    if (cinfo->quant_tbl_ptrs[n] == NULL)
                             ^
TotalCrossVM/src/jpeg/jdmarker.c:553:11: note: Assuming that condition 'n>=4' is not redundant
    if (n >= NUM_QUANT_TBLS)
          ^
TotalCrossVM/src/jpeg/jdmarker.c:556:30: note: Array index out of bounds
    if (cinfo->quant_tbl_ptrs[n] == NULL)
                             ^
TotalCrossVM/src/jpeg/jdmarker.c:558:38: warning: Either the condition 'n>=4' is redundant or the array 'cinfo->quant_tbl_ptrs[4]' is accessed at index 4, which is out of bounds. [arrayIndexOutOfBoundsCond]
    quant_ptr = cinfo->quant_tbl_ptrs[n];
                                     ^
TotalCrossVM/src/jpeg/jdmarker.c:553:11: note: Assuming that condition 'n>=4' is not redundant
    if (n >= NUM_QUANT_TBLS)
          ^
TotalCrossVM/src/jpeg/jdmarker.c:558:38: note: Array index out of bounds
    quant_ptr = cinfo->quant_tbl_ptrs[n];
                                     ^
TotalCrossVM/src/jpeg/jdmarker.c:465:17: style: The scope of the variable 'count' can be reduced. [variableScope]
  int i, index, count;
                ^
TotalCrossVM/src/jpeg/jdmarker.c:536:10: style: The scope of the variable 'prec' can be reduced. [variableScope]
  int n, prec;
         ^
TotalCrossVM/src/jpeg/jdmarker.c:804:16: style: The scope of the variable 'version' can be reduced. [variableScope]
  unsigned int version, flags0, flags1, transform;
               ^
TotalCrossVM/src/jpeg/jdmarker.c:804:25: style: The scope of the variable 'flags0' can be reduced. [variableScope]
  unsigned int version, flags0, flags1, transform;
                        ^
TotalCrossVM/src/jpeg/jdmarker.c:804:33: style: The scope of the variable 'flags1' can be reduced. [variableScope]
  unsigned int version, flags0, flags1, transform;
                                ^
TotalCrossVM/src/jpeg/jdmarker.c:804:41: style: The scope of the variable 'transform' can be reduced. [variableScope]
  unsigned int version, flags0, flags1, transform;
                                        ^
TotalCrossVM/src/jpeg/jdmarker.c:272:27: style: Checking if unsigned expression 'cinfo->image_height' is less than zero. [unsignedLessThanZero]
  if (cinfo->image_height <= 0 || cinfo->image_width <= 0 ||
                          ^
TotalCrossVM/src/jpeg/jdmarker.c:272:54: style: Checking if unsigned expression 'cinfo->image_width' is less than zero. [unsignedLessThanZero]
  if (cinfo->image_height <= 0 || cinfo->image_width <= 0 ||
                                                     ^
TotalCrossVM/src/jpeg/jdmarker.c:1346:14: style: Variable 'action' is assigned a value that is never used. [unreadVariable]
  int action = 1;
             ^
TotalCrossVM/src/jpeg/jdmarker.c:222:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->CCIR601_sampling = FALSE; /* Assume non-CCIR sampling??? */
^
TotalCrossVM/src/jpeg/jdmarker.c:224:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->saw_JFIF_marker = FALSE;
^
TotalCrossVM/src/jpeg/jdmarker.c:230:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->saw_Adobe_marker = FALSE;
^
TotalCrossVM/src/jpeg/jdmarker.c:253:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:255:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, cinfo->data_precision, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:256:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, cinfo->image_height, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:257:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, cinfo->image_width, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:258:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, cinfo->num_components, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:285:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:304:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:307:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, compptr->quant_tbl_no, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:333:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:335:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, n, return FALSE); /* Number of components */
^
TotalCrossVM/src/jpeg/jdmarker.c:349:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:379:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:388:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:390:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:392:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:420:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:424:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, index, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:425:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, val, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:469:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:473:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, index, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:480:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      INPUT_BYTE(cinfo, bits[i], return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:502:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      INPUT_BYTE(cinfo, huffval[i], return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:542:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:547:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, n, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:592:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:594:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 INPUT_BYTE(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:629:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:634:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:659:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:664:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:667:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:669:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:671:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, cid, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:673:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, cid, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:675:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, cid, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:677:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:679:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:681:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:683:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:685:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:687:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:689:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:691:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:693:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, tmp, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:836:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:847:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, b[i], return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:888:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:929:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    MAKE_BYTE_AVAIL(cinfo, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:988:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_2BYTES(cinfo, length, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:1017:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:1026:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:1034:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:1069:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, c, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:1070:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  INPUT_BYTE(cinfo, c2, return FALSE);
^
TotalCrossVM/src/jpeg/jdmarker.c:1120:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, TRUE, FALSE, FALSE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1125:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, FALSE, FALSE, FALSE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1130:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, FALSE, TRUE, FALSE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1135:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, FALSE, FALSE, TRUE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1140:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, FALSE, TRUE, TRUE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1270:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/jdmarker.c:1283:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/jdmarker.c:1376:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/jdmarker.c:1400:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  marker->pub.saw_SOI = FALSE;  /* set internal state too */
^
TotalCrossVM/src/jpeg/jdmarker.c:1401:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  marker->pub.saw_SOF = FALSE;
^
TotalCrossVM/src/jpeg/jdmarker.c:233:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->marker->saw_SOI = TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:235:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:314:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->marker->saw_SOF = TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:317:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:406:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:448:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:527:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:617:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:641:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:703:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:736:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->saw_JFIF_marker = TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:818:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->saw_Adobe_marker = TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:869:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:975:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:997:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:1053:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:1077:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:1120:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, TRUE, FALSE, FALSE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1130:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, FALSE, TRUE, FALSE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1135:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, FALSE, FALSE, TRUE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1140:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (! get_sof(cinfo, FALSE, TRUE, TRUE))
^
TotalCrossVM/src/jpeg/jdmarker.c:1289:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:1372:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:1382:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return TRUE;
^
TotalCrossVM/src/jpeg/jdmarker.c:253:3: error: There is an unknown macro here somewhere. Configuration is required. If ; is a macro then please configure it. [unknownMacro]
  INPUT_2BYTES(cinfo, length, return FALSE);
  ^
TotalCrossVM/src/jpeg/jdmaster.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdmaster.c:284:28: style: Checking if unsigned expression 'cinfo->output_height' is less than zero. [unsignedLessThanZero]
  if (cinfo->output_height <= 0 || cinfo->output_width <= 0 ||
                           ^
TotalCrossVM/src/jpeg/jdmaster.c:284:56: style: Checking if unsigned expression 'cinfo->output_width' is less than zero. [unsignedLessThanZero]
  if (cinfo->output_height <= 0 || cinfo->output_width <= 0 ||
                                                       ^
TotalCrossVM/src/jpeg/jdmaster.c:60:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:68:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:76:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:84:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:303:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->enable_1pass_quant = FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:304:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->enable_external_quant = FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:305:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cinfo->enable_2pass_quant = FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:313:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->enable_external_quant = FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:314:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->enable_2pass_quant = FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:375:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    jinit_d_main_controller(cinfo, FALSE /* never need full buffer here */);
^
TotalCrossVM/src/jpeg/jdmaster.c:427:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    master->pub.is_dummy_pass = FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:428:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (*cinfo->cquantize->start_pass) (cinfo, FALSE);
^
TotalCrossVM/src/jpeg/jdmaster.c:511:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    master->pub.is_dummy_pass = FALSE; /* just in case */
^
TotalCrossVM/src/jpeg/jdmaster.c:536:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  master->pub.is_dummy_pass = FALSE;
^
TotalCrossVM/src/jpeg/jdmaster.c:86:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;   /* by golly, it'll work... */
^
TotalCrossVM/src/jpeg/jdmaster.c:312:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->enable_1pass_quant = TRUE;
^
TotalCrossVM/src/jpeg/jdmaster.c:317:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->enable_external_quant = TRUE;
^
TotalCrossVM/src/jpeg/jdmaster.c:319:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->enable_2pass_quant = TRUE;
^
TotalCrossVM/src/jpeg/jdmaster.c:321:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->enable_1pass_quant = TRUE;
^
TotalCrossVM/src/jpeg/jdmaster.c:439:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 master->pub.is_dummy_pass = TRUE;
^
TotalCrossVM/src/jpeg/jdmerge.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdmerge.c:194:12: style: The scope of the variable 'work_ptrs' can be reduced. [variableScope]
  JSAMPROW work_ptrs[2];
           ^
TotalCrossVM/src/jpeg/jdmerge.c:173:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  upsample->spare_full = FALSE;
^
TotalCrossVM/src/jpeg/jdmerge.c:202:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    upsample->spare_full = FALSE;
^
TotalCrossVM/src/jpeg/jdmerge.c:421:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  upsample->pub.need_context_rows = FALSE;
^
TotalCrossVM/src/jpeg/jdmerge.c:219:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      upsample->spare_full = TRUE;
^
TotalCrossVM/src/jpeg/jdpostct.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdpostct.c:165:28: style: The scope of the variable 'num_rows' can be reduced. [variableScope]
  JDIMENSION old_next_row, num_rows;
                           ^
TotalCrossVM/src/jpeg/jdpostct.c:215:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  post->starting_row, post->strip_height, FALSE);
^
TotalCrossVM/src/jpeg/jdpostct.c:274:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
^
TotalCrossVM/src/jpeg/jdpostct.c:89:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (JDIMENSION) 0, post->strip_height, TRUE);
^
TotalCrossVM/src/jpeg/jdpostct.c:171:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  post->starting_row, post->strip_height, TRUE);
^
TotalCrossVM/src/jpeg/jdsample.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdsample.c:97:7: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int ci;
      ^
TotalCrossVM/src/jpeg/jdsample.c:98:25: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info * compptr;
                        ^
TotalCrossVM/src/jpeg/jdsample.c:195:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr, outptr;
                    ^
TotalCrossVM/src/jpeg/jdsample.c:198:12: style: The scope of the variable 'outend' can be reduced. [variableScope]
  JSAMPROW outend;
           ^
TotalCrossVM/src/jpeg/jdsample.c:238:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr, outptr;
                    ^
TotalCrossVM/src/jpeg/jdsample.c:240:12: style: The scope of the variable 'outend' can be reduced. [variableScope]
  JSAMPROW outend;
           ^
TotalCrossVM/src/jpeg/jdsample.c:266:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr, outptr;
                    ^
TotalCrossVM/src/jpeg/jdsample.c:268:12: style: The scope of the variable 'outend' can be reduced. [variableScope]
  JSAMPROW outend;
           ^
TotalCrossVM/src/jpeg/jdsample.c:299:7: style: The scope of the variable 'h_in_group' can be reduced. [variableScope]
  int h_in_group, v_in_group, h_out_group, v_out_group;
      ^
TotalCrossVM/src/jpeg/jdsample.c:299:19: style: The scope of the variable 'v_in_group' can be reduced. [variableScope]
  int h_in_group, v_in_group, h_out_group, v_out_group;
                  ^
TotalCrossVM/src/jpeg/jdsample.c:299:31: style: The scope of the variable 'h_out_group' can be reduced. [variableScope]
  int h_in_group, v_in_group, h_out_group, v_out_group;
                              ^
TotalCrossVM/src/jpeg/jdsample.c:299:44: style: The scope of the variable 'v_out_group' can be reduced. [variableScope]
  int h_in_group, v_in_group, h_out_group, v_out_group;
                                           ^
TotalCrossVM/src/jpeg/jdsample.c:307:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  upsample->pub.need_context_rows = FALSE; /* until we find out differently */
^
TotalCrossVM/src/jpeg/jdtrans.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jdtrans.c:101:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cinfo->buffered_image = TRUE;
^
TotalCrossVM/src/jpeg/jdtrans.c:114:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  jinit_d_coef_controller(cinfo, TRUE);
^
TotalCrossVM/src/jpeg/jerror.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jerror.c:184:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  isstring = FALSE;
^
TotalCrossVM/src/jpeg/jerror.c:188:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (*msgptr == 's') isstring = TRUE;
^
TotalCrossVM/src/jpeg/jfdctflt.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jfdctflt.c:68:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctfst.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jfdctfst.c:123:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jfdctint.c:164:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:341:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:476:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:590:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:701:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:795:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:951:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:1101:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:1266:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:1449:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:1616:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:1815:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:2017:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:2196:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:2401:33: style: The scope of the variable 'tmp4' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
                                ^
TotalCrossVM/src/jpeg/jfdctint.c:2401:39: style: The scope of the variable 'tmp5' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
                                      ^
TotalCrossVM/src/jpeg/jfdctint.c:2401:45: style: The scope of the variable 'tmp6' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
                                            ^
TotalCrossVM/src/jpeg/jfdctint.c:2401:51: style: The scope of the variable 'tmp7' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
                                                  ^
TotalCrossVM/src/jpeg/jfdctint.c:2402:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
                                    ^
TotalCrossVM/src/jpeg/jfdctint.c:2402:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
                                           ^
TotalCrossVM/src/jpeg/jfdctint.c:2402:51: style: The scope of the variable 'tmp16' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
                                                  ^
TotalCrossVM/src/jpeg/jfdctint.c:2402:58: style: The scope of the variable 'tmp17' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
                                                         ^
TotalCrossVM/src/jpeg/jfdctint.c:2403:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:2405:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:2584:33: style: The scope of the variable 'tmp4' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
                                ^
TotalCrossVM/src/jpeg/jfdctint.c:2584:39: style: The scope of the variable 'tmp5' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
                                      ^
TotalCrossVM/src/jpeg/jfdctint.c:2584:45: style: The scope of the variable 'tmp6' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
                                            ^
TotalCrossVM/src/jpeg/jfdctint.c:2585:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                             ^
TotalCrossVM/src/jpeg/jfdctint.c:2585:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                    ^
TotalCrossVM/src/jpeg/jfdctint.c:2585:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                           ^
TotalCrossVM/src/jpeg/jfdctint.c:2585:51: style: The scope of the variable 'tmp16' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                                  ^
TotalCrossVM/src/jpeg/jfdctint.c:2586:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1, z2, z3;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:2586:13: style: The scope of the variable 'z2' can be reduced. [variableScope]
  INT32 z1, z2, z3;
            ^
TotalCrossVM/src/jpeg/jfdctint.c:2586:17: style: The scope of the variable 'z3' can be reduced. [variableScope]
  INT32 z1, z2, z3;
                ^
TotalCrossVM/src/jpeg/jfdctint.c:2588:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:2749:27: style: The scope of the variable 'tmp3' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
                          ^
TotalCrossVM/src/jpeg/jfdctint.c:2749:33: style: The scope of the variable 'tmp4' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
                                ^
TotalCrossVM/src/jpeg/jfdctint.c:2749:39: style: The scope of the variable 'tmp5' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
                                      ^
TotalCrossVM/src/jpeg/jfdctint.c:2750:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                             ^
TotalCrossVM/src/jpeg/jfdctint.c:2750:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                                    ^
TotalCrossVM/src/jpeg/jfdctint.c:2750:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                                           ^
TotalCrossVM/src/jpeg/jfdctint.c:2752:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:2889:27: style: The scope of the variable 'tmp3' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
                          ^
TotalCrossVM/src/jpeg/jfdctint.c:2889:33: style: The scope of the variable 'tmp4' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
                                ^
TotalCrossVM/src/jpeg/jfdctint.c:2890:23: style: The scope of the variable 'tmp12' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
                      ^
TotalCrossVM/src/jpeg/jfdctint.c:2890:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
                             ^
TotalCrossVM/src/jpeg/jfdctint.c:2890:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
                                    ^
TotalCrossVM/src/jpeg/jfdctint.c:2892:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:3022:21: style: The scope of the variable 'tmp2' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3;
                    ^
TotalCrossVM/src/jpeg/jfdctint.c:3022:27: style: The scope of the variable 'tmp3' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3;
                          ^
TotalCrossVM/src/jpeg/jfdctint.c:3023:23: style: The scope of the variable 'tmp12' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13;
                      ^
TotalCrossVM/src/jpeg/jfdctint.c:3023:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13;
                             ^
TotalCrossVM/src/jpeg/jfdctint.c:3024:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:3026:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:3164:9: style: The scope of the variable 'tmp10' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:3164:16: style: The scope of the variable 'tmp11' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12;
               ^
TotalCrossVM/src/jpeg/jfdctint.c:3164:23: style: The scope of the variable 'tmp12' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12;
                      ^
TotalCrossVM/src/jpeg/jfdctint.c:3166:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:3265:9: style: The scope of the variable 'tmp10' can be reduced. [variableScope]
  INT32 tmp10, tmp11;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:3265:16: style: The scope of the variable 'tmp11' can be reduced. [variableScope]
  INT32 tmp10, tmp11;
               ^
TotalCrossVM/src/jpeg/jfdctint.c:3267:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:3383:33: style: The scope of the variable 'tmp4' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
                                ^
TotalCrossVM/src/jpeg/jfdctint.c:3383:39: style: The scope of the variable 'tmp5' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
                                      ^
TotalCrossVM/src/jpeg/jfdctint.c:3383:45: style: The scope of the variable 'tmp6' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
                                            ^
TotalCrossVM/src/jpeg/jfdctint.c:3383:51: style: The scope of the variable 'tmp7' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
                                                  ^
TotalCrossVM/src/jpeg/jfdctint.c:3384:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
                                    ^
TotalCrossVM/src/jpeg/jfdctint.c:3384:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
                                           ^
TotalCrossVM/src/jpeg/jfdctint.c:3384:51: style: The scope of the variable 'tmp16' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
                                                  ^
TotalCrossVM/src/jpeg/jfdctint.c:3384:58: style: The scope of the variable 'tmp17' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
                                                         ^
TotalCrossVM/src/jpeg/jfdctint.c:3385:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:3389:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:3577:33: style: The scope of the variable 'tmp4' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
                                ^
TotalCrossVM/src/jpeg/jfdctint.c:3577:39: style: The scope of the variable 'tmp5' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
                                      ^
TotalCrossVM/src/jpeg/jfdctint.c:3577:45: style: The scope of the variable 'tmp6' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
                                            ^
TotalCrossVM/src/jpeg/jfdctint.c:3578:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                             ^
TotalCrossVM/src/jpeg/jfdctint.c:3578:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                    ^
TotalCrossVM/src/jpeg/jfdctint.c:3578:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                           ^
TotalCrossVM/src/jpeg/jfdctint.c:3578:51: style: The scope of the variable 'tmp16' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                                  ^
TotalCrossVM/src/jpeg/jfdctint.c:3579:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1, z2, z3;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:3579:13: style: The scope of the variable 'z2' can be reduced. [variableScope]
  INT32 z1, z2, z3;
            ^
TotalCrossVM/src/jpeg/jfdctint.c:3579:17: style: The scope of the variable 'z3' can be reduced. [variableScope]
  INT32 z1, z2, z3;
                ^
TotalCrossVM/src/jpeg/jfdctint.c:3583:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:3759:27: style: The scope of the variable 'tmp3' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
                          ^
TotalCrossVM/src/jpeg/jfdctint.c:3759:33: style: The scope of the variable 'tmp4' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
                                ^
TotalCrossVM/src/jpeg/jfdctint.c:3759:39: style: The scope of the variable 'tmp5' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
                                      ^
TotalCrossVM/src/jpeg/jfdctint.c:3760:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                             ^
TotalCrossVM/src/jpeg/jfdctint.c:3760:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                                    ^
TotalCrossVM/src/jpeg/jfdctint.c:3760:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                                           ^
TotalCrossVM/src/jpeg/jfdctint.c:3764:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:3909:27: style: The scope of the variable 'tmp3' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
                          ^
TotalCrossVM/src/jpeg/jfdctint.c:3909:33: style: The scope of the variable 'tmp4' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
                                ^
TotalCrossVM/src/jpeg/jfdctint.c:3910:23: style: The scope of the variable 'tmp12' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
                      ^
TotalCrossVM/src/jpeg/jfdctint.c:3910:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
                             ^
TotalCrossVM/src/jpeg/jfdctint.c:3910:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
                                    ^
TotalCrossVM/src/jpeg/jfdctint.c:3914:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:4056:21: style: The scope of the variable 'tmp2' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3;
                    ^
TotalCrossVM/src/jpeg/jfdctint.c:4056:27: style: The scope of the variable 'tmp3' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3;
                          ^
TotalCrossVM/src/jpeg/jfdctint.c:4057:23: style: The scope of the variable 'tmp12' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13;
                      ^
TotalCrossVM/src/jpeg/jfdctint.c:4057:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13;
                             ^
TotalCrossVM/src/jpeg/jfdctint.c:4058:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:4060:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:4198:9: style: The scope of the variable 'tmp10' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:4198:16: style: The scope of the variable 'tmp11' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12;
               ^
TotalCrossVM/src/jpeg/jfdctint.c:4198:23: style: The scope of the variable 'tmp12' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12;
                      ^
TotalCrossVM/src/jpeg/jfdctint.c:4200:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:4304:9: style: The scope of the variable 'tmp10' can be reduced. [variableScope]
  INT32 tmp10, tmp11;
        ^
TotalCrossVM/src/jpeg/jfdctint.c:4304:16: style: The scope of the variable 'tmp11' can be reduced. [variableScope]
  INT32 tmp10, tmp11;
               ^
TotalCrossVM/src/jpeg/jfdctint.c:4306:12: style: The scope of the variable 'elemptr' can be reduced. [variableScope]
  JSAMPROW elemptr;
           ^
TotalCrossVM/src/jpeg/jfdctint.c:948:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:1098:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*2];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:1263:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*3];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:1446:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*4];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:1613:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*5];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:1812:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*6];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:2014:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*7];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:2193:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[DCTSIZE2];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:3386:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[DCTSIZE2];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:3580:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*6];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:3761:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*4];
          ^
TotalCrossVM/src/jpeg/jfdctint.c:3911:11: style: Variable 'workspace' is not assigned a value. [unassignedVariable]
  DCTELEM workspace[8*2];
          ^
TotalCrossVM/src/jpeg/jidctflt.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jidctflt.c:81:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctfst.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jidctint.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jidctint.c:447:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:598:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:721:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:838:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:944:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:1122:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:1292:25: style: The scope of the variable 'z5' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4, z5;
                        ^
TotalCrossVM/src/jpeg/jidctint.c:1296:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:1493:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:1689:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:1907:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:2137:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:2365:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:2609:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:2867:9: style: The scope of the variable 'tmp20' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
        ^
TotalCrossVM/src/jpeg/jidctint.c:2867:16: style: The scope of the variable 'tmp21' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
               ^
TotalCrossVM/src/jpeg/jidctint.c:2867:23: style: The scope of the variable 'tmp22' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                      ^
TotalCrossVM/src/jpeg/jidctint.c:2867:30: style: The scope of the variable 'tmp23' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:2867:37: style: The scope of the variable 'tmp24' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:2867:44: style: The scope of the variable 'tmp25' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:2867:51: style: The scope of the variable 'tmp26' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                                                  ^
TotalCrossVM/src/jpeg/jidctint.c:2867:58: style: The scope of the variable 'tmp27' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                                                         ^
TotalCrossVM/src/jpeg/jidctint.c:2868:21: style: The scope of the variable 'z4' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4;
                    ^
TotalCrossVM/src/jpeg/jidctint.c:2872:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:3143:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:3143:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:3143:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:3143:51: style: The scope of the variable 'tmp16' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                                  ^
TotalCrossVM/src/jpeg/jidctint.c:3144:37: style: The scope of the variable 'tmp24' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:3144:44: style: The scope of the variable 'tmp25' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:3144:51: style: The scope of the variable 'tmp26' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
                                                  ^
TotalCrossVM/src/jpeg/jidctint.c:3145:21: style: The scope of the variable 'z4' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4;
                    ^
TotalCrossVM/src/jpeg/jidctint.c:3149:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:3342:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:3342:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:3342:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:3343:30: style: The scope of the variable 'tmp23' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:3343:37: style: The scope of the variable 'tmp24' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:3343:44: style: The scope of the variable 'tmp25' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:3344:21: style: The scope of the variable 'z4' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4;
                    ^
TotalCrossVM/src/jpeg/jidctint.c:3348:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:3523:9: style: The scope of the variable 'tmp20' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
        ^
TotalCrossVM/src/jpeg/jidctint.c:3523:16: style: The scope of the variable 'tmp21' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
               ^
TotalCrossVM/src/jpeg/jidctint.c:3523:23: style: The scope of the variable 'tmp22' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
                      ^
TotalCrossVM/src/jpeg/jidctint.c:3523:30: style: The scope of the variable 'tmp23' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:3523:37: style: The scope of the variable 'tmp24' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:3524:21: style: The scope of the variable 'z4' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4;
                    ^
TotalCrossVM/src/jpeg/jidctint.c:3528:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:3687:15: style: The scope of the variable 'tmp1' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3;
              ^
TotalCrossVM/src/jpeg/jidctint.c:3687:27: style: The scope of the variable 'tmp3' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp3;
                          ^
TotalCrossVM/src/jpeg/jidctint.c:3688:16: style: The scope of the variable 'tmp11' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13;
               ^
TotalCrossVM/src/jpeg/jidctint.c:3688:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:3693:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:3847:15: style: The scope of the variable 'tmp1' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
              ^
TotalCrossVM/src/jpeg/jidctint.c:3847:34: style: The scope of the variable 'tmp11' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
                                 ^
TotalCrossVM/src/jpeg/jidctint.c:3848:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1, z2, z3;
        ^
TotalCrossVM/src/jpeg/jidctint.c:3848:13: style: The scope of the variable 'z2' can be reduced. [variableScope]
  INT32 z1, z2, z3;
            ^
TotalCrossVM/src/jpeg/jidctint.c:3848:17: style: The scope of the variable 'z3' can be reduced. [variableScope]
  INT32 z1, z2, z3;
                ^
TotalCrossVM/src/jpeg/jidctint.c:3852:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:3961:15: style: The scope of the variable 'tmp2' can be reduced. [variableScope]
  INT32 tmp0, tmp2, tmp10, tmp12;
              ^
TotalCrossVM/src/jpeg/jidctint.c:3961:28: style: The scope of the variable 'tmp12' can be reduced. [variableScope]
  INT32 tmp0, tmp2, tmp10, tmp12;
                           ^
TotalCrossVM/src/jpeg/jidctint.c:3962:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1, z2, z3;
        ^
TotalCrossVM/src/jpeg/jidctint.c:3962:13: style: The scope of the variable 'z2' can be reduced. [variableScope]
  INT32 z1, z2, z3;
            ^
TotalCrossVM/src/jpeg/jidctint.c:3962:17: style: The scope of the variable 'z3' can be reduced. [variableScope]
  INT32 z1, z2, z3;
                ^
TotalCrossVM/src/jpeg/jidctint.c:3966:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:4095:9: style: The scope of the variable 'tmp20' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
        ^
TotalCrossVM/src/jpeg/jidctint.c:4095:16: style: The scope of the variable 'tmp21' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
               ^
TotalCrossVM/src/jpeg/jidctint.c:4095:23: style: The scope of the variable 'tmp22' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                      ^
TotalCrossVM/src/jpeg/jidctint.c:4095:30: style: The scope of the variable 'tmp23' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:4095:37: style: The scope of the variable 'tmp24' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:4095:44: style: The scope of the variable 'tmp25' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:4095:51: style: The scope of the variable 'tmp26' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                                                  ^
TotalCrossVM/src/jpeg/jidctint.c:4095:58: style: The scope of the variable 'tmp27' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
                                                         ^
TotalCrossVM/src/jpeg/jidctint.c:4096:21: style: The scope of the variable 'z4' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4;
                    ^
TotalCrossVM/src/jpeg/jidctint.c:4100:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:4318:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:4318:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:4318:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:4318:51: style: The scope of the variable 'tmp16' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
                                                  ^
TotalCrossVM/src/jpeg/jidctint.c:4319:37: style: The scope of the variable 'tmp24' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:4319:44: style: The scope of the variable 'tmp25' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:4319:51: style: The scope of the variable 'tmp26' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
                                                  ^
TotalCrossVM/src/jpeg/jidctint.c:4320:21: style: The scope of the variable 'z4' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4;
                    ^
TotalCrossVM/src/jpeg/jidctint.c:4324:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:4505:30: style: The scope of the variable 'tmp13' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:4505:37: style: The scope of the variable 'tmp14' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:4505:44: style: The scope of the variable 'tmp15' can be reduced. [variableScope]
  INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:4506:30: style: The scope of the variable 'tmp23' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:4506:37: style: The scope of the variable 'tmp24' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:4506:44: style: The scope of the variable 'tmp25' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
                                           ^
TotalCrossVM/src/jpeg/jidctint.c:4507:21: style: The scope of the variable 'z4' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4;
                    ^
TotalCrossVM/src/jpeg/jidctint.c:4511:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:4674:9: style: The scope of the variable 'tmp20' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
        ^
TotalCrossVM/src/jpeg/jidctint.c:4674:16: style: The scope of the variable 'tmp21' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
               ^
TotalCrossVM/src/jpeg/jidctint.c:4674:23: style: The scope of the variable 'tmp22' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
                      ^
TotalCrossVM/src/jpeg/jidctint.c:4674:30: style: The scope of the variable 'tmp23' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
                             ^
TotalCrossVM/src/jpeg/jidctint.c:4674:37: style: The scope of the variable 'tmp24' can be reduced. [variableScope]
  INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
                                    ^
TotalCrossVM/src/jpeg/jidctint.c:4675:21: style: The scope of the variable 'z4' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4, z5;
                    ^
TotalCrossVM/src/jpeg/jidctint.c:4675:25: style: The scope of the variable 'z5' can be reduced. [variableScope]
  INT32 z1, z2, z3, z4, z5;
                        ^
TotalCrossVM/src/jpeg/jidctint.c:4679:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:4835:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:5016:15: style: The scope of the variable 'tmp1' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
              ^
TotalCrossVM/src/jpeg/jidctint.c:5016:34: style: The scope of the variable 'tmp11' can be reduced. [variableScope]
  INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
                                 ^
TotalCrossVM/src/jpeg/jidctint.c:5017:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1, z2, z3;
        ^
TotalCrossVM/src/jpeg/jidctint.c:5017:13: style: The scope of the variable 'z2' can be reduced. [variableScope]
  INT32 z1, z2, z3;
            ^
TotalCrossVM/src/jpeg/jidctint.c:5017:17: style: The scope of the variable 'z3' can be reduced. [variableScope]
  INT32 z1, z2, z3;
                ^
TotalCrossVM/src/jpeg/jidctint.c:5021:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctint.c:5124:15: style: The scope of the variable 'tmp2' can be reduced. [variableScope]
  INT32 tmp0, tmp2, tmp10, tmp12;
              ^
TotalCrossVM/src/jpeg/jidctint.c:5124:28: style: The scope of the variable 'tmp12' can be reduced. [variableScope]
  INT32 tmp0, tmp2, tmp10, tmp12;
                           ^
TotalCrossVM/src/jpeg/jidctint.c:5125:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  INT32 z1, z2, z3;
        ^
TotalCrossVM/src/jpeg/jidctint.c:5125:13: style: The scope of the variable 'z2' can be reduced. [variableScope]
  INT32 z1, z2, z3;
            ^
TotalCrossVM/src/jpeg/jidctint.c:5125:17: style: The scope of the variable 'z3' can be reduced. [variableScope]
  INT32 z1, z2, z3;
                ^
TotalCrossVM/src/jpeg/jidctint.c:5129:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;
           ^
TotalCrossVM/src/jpeg/jidctred.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jmemansi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jmemansi.c:144:24: portability: Assigning a pointer to an integer is not portable. [AssignmentAddressToInteger]
  if ((info->temp_file = tmpfile()) == NULL)
                       ^
TotalCrossVM/src/jpeg/jmemdos.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jmemdos.c:97:1: error: syntax error: 64K. typedef [syntaxError]
typedef void far * XMSDRIVER; /* actually a pointer to code */
^
TotalCrossVM/src/jpeg/jmemdos.c:297:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jmemdos.c:422:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;  /* no driver to be had */
^
TotalCrossVM/src/jpeg/jmemdos.c:428:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jmemdos.c:435:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jmemdos.c:561:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jmemdos.c:567:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jmemdos.c:573:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jmemdos.c:580:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/jmemdos.c:304:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;   /* succeeded */
^
TotalCrossVM/src/jpeg/jmemdos.c:443:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;   /* succeeded */
^
TotalCrossVM/src/jpeg/jmemdos.c:588:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;   /* succeeded */
^
TotalCrossVM/src/jpeg/jmemmac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jmemmac.c:245:17: style: Variable 'osErr' is reassigned a value before the old one has been used. [redundantAssignment]
    if ( (osErr = FSpGetFInfo ( &theSpec, &finderInfo ) ) != noErr )
                ^
TotalCrossVM/src/jpeg/jmemmac.c:243:11: note: osErr is assigned
    osErr = FSMakeFSSpec ( vRefNum, dirID, fName, &theSpec );
          ^
TotalCrossVM/src/jpeg/jmemmac.c:245:17: note: osErr is overwritten
    if ( (osErr = FSpGetFInfo ( &theSpec, &finderInfo ) ) != noErr )
                ^
TotalCrossVM/src/jpeg/jmemmac.c:208:17: style: Unused variable: tmpRef [unusedVariable]
  short         tmpRef, vRefNum;
                ^
TotalCrossVM/src/jpeg/jmemmgr.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jmemmgr.c:279:28: warning: Either the condition 'pool_id>=2' is redundant or the array 'mem->small_list[2]' is accessed at index 2, which is out of bounds. [arrayIndexOutOfBoundsCond]
  hdr_ptr = mem->small_list[pool_id];
                           ^
TotalCrossVM/src/jpeg/jmemmgr.c:276:30: note: Assuming that condition 'pool_id>=2' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:279:28: note: Array index out of bounds
  hdr_ptr = mem->small_list[pool_id];
                           ^
TotalCrossVM/src/jpeg/jmemmgr.c:279:28: warning: Either the condition 'pool_id<0' is redundant or the array 'mem->small_list[2]' is accessed at index -1, which is out of bounds. [negativeIndex]
  hdr_ptr = mem->small_list[pool_id];
                           ^
TotalCrossVM/src/jpeg/jmemmgr.c:276:15: note: Assuming that condition 'pool_id<0' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:279:28: note: Negative array index
  hdr_ptr = mem->small_list[pool_id];
                           ^
TotalCrossVM/src/jpeg/jmemmgr.c:370:38: warning: Either the condition 'pool_id>=2' is redundant or the array 'mem->large_list[2]' is accessed at index 2, which is out of bounds. [arrayIndexOutOfBoundsCond]
  hdr_ptr->hdr.next = mem->large_list[pool_id];
                                     ^
TotalCrossVM/src/jpeg/jmemmgr.c:360:30: note: Assuming that condition 'pool_id>=2' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:370:38: note: Array index out of bounds
  hdr_ptr->hdr.next = mem->large_list[pool_id];
                                     ^
TotalCrossVM/src/jpeg/jmemmgr.c:370:38: warning: Either the condition 'pool_id<0' is redundant or the array 'mem->large_list[2]' is accessed at index -1, which is out of bounds. [negativeIndex]
  hdr_ptr->hdr.next = mem->large_list[pool_id];
                                     ^
TotalCrossVM/src/jpeg/jmemmgr.c:360:15: note: Assuming that condition 'pool_id<0' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:370:38: note: Negative array index
  hdr_ptr->hdr.next = mem->large_list[pool_id];
                                     ^
TotalCrossVM/src/jpeg/jmemmgr.c:376:18: warning: Either the condition 'pool_id>=2' is redundant or the array 'mem->large_list[2]' is accessed at index 2, which is out of bounds. [arrayIndexOutOfBoundsCond]
  mem->large_list[pool_id] = hdr_ptr;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:360:30: note: Assuming that condition 'pool_id>=2' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:376:18: note: Array index out of bounds
  mem->large_list[pool_id] = hdr_ptr;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:376:18: warning: Either the condition 'pool_id<0' is redundant or the array 'mem->large_list[2]' is accessed at index -1, which is out of bounds. [negativeIndex]
  mem->large_list[pool_id] = hdr_ptr;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:360:15: note: Assuming that condition 'pool_id<0' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:376:18: note: Negative array index
  mem->large_list[pool_id] = hdr_ptr;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:968:29: warning: Either the condition 'pool_id>=2' is redundant or the array 'mem->large_list[2]' is accessed at index 2, which is out of bounds. [arrayIndexOutOfBoundsCond]
  lhdr_ptr = mem->large_list[pool_id];
                            ^
TotalCrossVM/src/jpeg/jmemmgr.c:938:30: note: Assuming that condition 'pool_id>=2' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:968:29: note: Array index out of bounds
  lhdr_ptr = mem->large_list[pool_id];
                            ^
TotalCrossVM/src/jpeg/jmemmgr.c:968:29: warning: Either the condition 'pool_id<0' is redundant or the array 'mem->large_list[2]' is accessed at index -1, which is out of bounds. [negativeIndex]
  lhdr_ptr = mem->large_list[pool_id];
                            ^
TotalCrossVM/src/jpeg/jmemmgr.c:938:15: note: Assuming that condition 'pool_id<0' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:968:29: note: Negative array index
  lhdr_ptr = mem->large_list[pool_id];
                            ^
TotalCrossVM/src/jpeg/jmemmgr.c:969:18: warning: Either the condition 'pool_id>=2' is redundant or the array 'mem->large_list[2]' is accessed at index 2, which is out of bounds. [arrayIndexOutOfBoundsCond]
  mem->large_list[pool_id] = NULL;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:938:30: note: Assuming that condition 'pool_id>=2' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:969:18: note: Array index out of bounds
  mem->large_list[pool_id] = NULL;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:969:18: warning: Either the condition 'pool_id<0' is redundant or the array 'mem->large_list[2]' is accessed at index -1, which is out of bounds. [negativeIndex]
  mem->large_list[pool_id] = NULL;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:938:15: note: Assuming that condition 'pool_id<0' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:969:18: note: Negative array index
  mem->large_list[pool_id] = NULL;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:982:29: warning: Either the condition 'pool_id>=2' is redundant or the array 'mem->small_list[2]' is accessed at index 2, which is out of bounds. [arrayIndexOutOfBoundsCond]
  shdr_ptr = mem->small_list[pool_id];
                            ^
TotalCrossVM/src/jpeg/jmemmgr.c:938:30: note: Assuming that condition 'pool_id>=2' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:982:29: note: Array index out of bounds
  shdr_ptr = mem->small_list[pool_id];
                            ^
TotalCrossVM/src/jpeg/jmemmgr.c:982:29: warning: Either the condition 'pool_id<0' is redundant or the array 'mem->small_list[2]' is accessed at index -1, which is out of bounds. [negativeIndex]
  shdr_ptr = mem->small_list[pool_id];
                            ^
TotalCrossVM/src/jpeg/jmemmgr.c:938:15: note: Assuming that condition 'pool_id<0' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:982:29: note: Negative array index
  shdr_ptr = mem->small_list[pool_id];
                            ^
TotalCrossVM/src/jpeg/jmemmgr.c:983:18: warning: Either the condition 'pool_id>=2' is redundant or the array 'mem->small_list[2]' is accessed at index 2, which is out of bounds. [arrayIndexOutOfBoundsCond]
  mem->small_list[pool_id] = NULL;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:938:30: note: Assuming that condition 'pool_id>=2' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:983:18: note: Array index out of bounds
  mem->small_list[pool_id] = NULL;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:983:18: warning: Either the condition 'pool_id<0' is redundant or the array 'mem->small_list[2]' is accessed at index -1, which is out of bounds. [negativeIndex]
  mem->small_list[pool_id] = NULL;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:938:15: note: Assuming that condition 'pool_id<0' is not redundant
  if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:983:18: note: Negative array index
  mem->small_list[pool_id] = NULL;
                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:370:3: warning: Either the condition 'hdr_ptr==NULL' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  hdr_ptr->hdr.next = mem->large_list[pool_id];
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:365:15: note: Assuming that condition 'hdr_ptr==NULL' is not redundant
  if (hdr_ptr == NULL)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:370:3: note: Null pointer dereference
  hdr_ptr->hdr.next = mem->large_list[pool_id];
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:374:3: warning: Either the condition 'hdr_ptr==NULL' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  hdr_ptr->hdr.bytes_used = sizeofobject;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:365:15: note: Assuming that condition 'hdr_ptr==NULL' is not redundant
  if (hdr_ptr == NULL)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:374:3: note: Null pointer dereference
  hdr_ptr->hdr.bytes_used = sizeofobject;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:375:3: warning: Either the condition 'hdr_ptr==NULL' is redundant or there is possible null pointer dereference: hdr_ptr. [nullPointerRedundantCheck]
  hdr_ptr->hdr.bytes_left = 0;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:365:15: note: Assuming that condition 'hdr_ptr==NULL' is not redundant
  if (hdr_ptr == NULL)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:375:3: note: Null pointer dereference
  hdr_ptr->hdr.bytes_left = 0;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1068:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.alloc_small = alloc_small;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1068:3: note: Null pointer dereference
  mem->pub.alloc_small = alloc_small;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1069:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.alloc_large = alloc_large;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1069:3: note: Null pointer dereference
  mem->pub.alloc_large = alloc_large;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1070:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.alloc_sarray = alloc_sarray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1070:3: note: Null pointer dereference
  mem->pub.alloc_sarray = alloc_sarray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1071:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.alloc_barray = alloc_barray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1071:3: note: Null pointer dereference
  mem->pub.alloc_barray = alloc_barray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1072:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.request_virt_sarray = request_virt_sarray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1072:3: note: Null pointer dereference
  mem->pub.request_virt_sarray = request_virt_sarray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1073:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.request_virt_barray = request_virt_barray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1073:3: note: Null pointer dereference
  mem->pub.request_virt_barray = request_virt_barray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1074:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.realize_virt_arrays = realize_virt_arrays;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1074:3: note: Null pointer dereference
  mem->pub.realize_virt_arrays = realize_virt_arrays;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1075:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.access_virt_sarray = access_virt_sarray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1075:3: note: Null pointer dereference
  mem->pub.access_virt_sarray = access_virt_sarray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1076:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.access_virt_barray = access_virt_barray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1076:3: note: Null pointer dereference
  mem->pub.access_virt_barray = access_virt_barray;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1077:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.free_pool = free_pool;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1077:3: note: Null pointer dereference
  mem->pub.free_pool = free_pool;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1078:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.self_destruct = self_destruct;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1078:3: note: Null pointer dereference
  mem->pub.self_destruct = self_destruct;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1081:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.max_alloc_chunk = MAX_ALLOC_CHUNK;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1081:3: note: Null pointer dereference
  mem->pub.max_alloc_chunk = MAX_ALLOC_CHUNK;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1084:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->pub.max_memory_to_use = max_to_use;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1084:3: note: Null pointer dereference
  mem->pub.max_memory_to_use = max_to_use;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1090:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->virt_sarray_list = NULL;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1090:3: note: Null pointer dereference
  mem->virt_sarray_list = NULL;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1091:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->virt_barray_list = NULL;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1091:3: note: Null pointer dereference
  mem->virt_barray_list = NULL;
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1093:3: warning: Either the condition 'mem==NULL' is redundant or there is possible null pointer dereference: mem. [nullPointerRedundantCheck]
  mem->total_space_allocated = SIZEOF(my_memory_mgr);
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:1062:11: note: Assuming that condition 'mem==NULL' is not redundant
  if (mem == NULL) {
          ^
TotalCrossVM/src/jpeg/jmemmgr.c:1093:3: note: Null pointer dereference
  mem->total_space_allocated = SIZEOF(my_memory_mgr);
  ^
TotalCrossVM/src/jpeg/jmemmgr.c:378:32: warning: Either the condition 'hdr_ptr==NULL' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
  return (void FAR *) (hdr_ptr + 1); /* point to first data byte in pool */
                               ^
TotalCrossVM/src/jpeg/jmemmgr.c:365:15: note: Assuming that condition 'hdr_ptr==NULL' is not redundant
  if (hdr_ptr == NULL)
              ^
TotalCrossVM/src/jpeg/jmemmgr.c:378:32: note: Null pointer addition
  return (void FAR *) (hdr_ptr + 1); /* point to first data byte in pool */
                               ^
TotalCrossVM/src/jpeg/jmemmgr.c:264:21: style: The scope of the variable 'min_request' can be reduced. [variableScope]
  size_t odd_bytes, min_request, slop;
                    ^
TotalCrossVM/src/jpeg/jmemmgr.c:264:34: style: The scope of the variable 'slop' can be reduced. [variableScope]
  size_t odd_bytes, min_request, slop;
                                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:694:34: style: The scope of the variable 'byte_count' can be reduced. [variableScope]
  long bytesperrow, file_offset, byte_count, rows, thisrow, i;
                                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:694:46: style: The scope of the variable 'rows' can be reduced. [variableScope]
  long bytesperrow, file_offset, byte_count, rows, thisrow, i;
                                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:694:52: style: The scope of the variable 'thisrow' can be reduced. [variableScope]
  long bytesperrow, file_offset, byte_count, rows, thisrow, i;
                                                   ^
TotalCrossVM/src/jpeg/jmemmgr.c:727:34: style: The scope of the variable 'byte_count' can be reduced. [variableScope]
  long bytesperrow, file_offset, byte_count, rows, thisrow, i;
                                 ^
TotalCrossVM/src/jpeg/jmemmgr.c:727:46: style: The scope of the variable 'rows' can be reduced. [variableScope]
  long bytesperrow, file_offset, byte_count, rows, thisrow, i;
                                             ^
TotalCrossVM/src/jpeg/jmemmgr.c:727:52: style: The scope of the variable 'thisrow' can be reduced. [variableScope]
  long bytesperrow, file_offset, byte_count, rows, thisrow, i;
                                                   ^
TotalCrossVM/src/jpeg/jmemmgr.c:765:14: style: The scope of the variable 'undef_row' can be reduced. [variableScope]
  JDIMENSION undef_row;
             ^
TotalCrossVM/src/jpeg/jmemmgr.c:850:14: style: The scope of the variable 'undef_row' can be reduced. [variableScope]
  JDIMENSION undef_row;
             ^
TotalCrossVM/src/jpeg/jmemmgr.c:545:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  result->b_s_open = FALSE; /* no associated backing-store object */
^
TotalCrossVM/src/jpeg/jmemmgr.c:575:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  result->b_s_open = FALSE; /* no associated backing-store object */
^
TotalCrossVM/src/jpeg/jmemmgr.c:660:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      sptr->dirty = FALSE;
^
TotalCrossVM/src/jpeg/jmemmgr.c:684:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      bptr->dirty = FALSE;
^
TotalCrossVM/src/jpeg/jmemmgr.c:780:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      ptr->dirty = FALSE;
^
TotalCrossVM/src/jpeg/jmemmgr.c:804:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    do_sarray_io(cinfo, ptr, FALSE);
^
TotalCrossVM/src/jpeg/jmemmgr.c:865:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      ptr->dirty = FALSE;
^
TotalCrossVM/src/jpeg/jmemmgr.c:889:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    do_barray_io(cinfo, ptr, FALSE);
^
TotalCrossVM/src/jpeg/jmemmgr.c:953:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 sptr->b_s_open = FALSE; /* prevent recursive close if error */
^
TotalCrossVM/src/jpeg/jmemmgr.c:960:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 bptr->b_s_open = FALSE; /* prevent recursive close if error */
^
TotalCrossVM/src/jpeg/jmemmgr.c:653:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 sptr->b_s_open = TRUE;
^
TotalCrossVM/src/jpeg/jmemmgr.c:677:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 bptr->b_s_open = TRUE;
^
TotalCrossVM/src/jpeg/jmemmgr.c:779:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      do_sarray_io(cinfo, ptr, TRUE);
^
TotalCrossVM/src/jpeg/jmemmgr.c:835:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ptr->dirty = TRUE;
^
TotalCrossVM/src/jpeg/jmemmgr.c:864:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      do_barray_io(cinfo, ptr, TRUE);
^
TotalCrossVM/src/jpeg/jmemmgr.c:920:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ptr->dirty = TRUE;
^
TotalCrossVM/src/jpeg/jmemname.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jmemname.c:109:0: information: Skipping configuration 'ENOENT;NO_MKTEMP' since the value of 'ENOENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (errno != ENOENT)
^
TotalCrossVM/src/jpeg/jmemnobs.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jpegtran.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 34 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jpegtran.c:575:52: style: Clarify calculation precedence for '+' and '?'. [clarifyCalculation]
  exit(jsrcerr.num_warnings + jdsterr.num_warnings ?EXIT_WARNING:EXIT_SUCCESS);
                                                   ^
TotalCrossVM/src/jpeg/jpegtran.c:542:14: style: Variable 'file_index' is assigned a value that is never used. [unreadVariable]
  file_index = parse_switches(&dstinfo, argc, argv, 0, TRUE);
             ^
TotalCrossVM/src/jpeg/jpegtran.c:138:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  simple_progressive = FALSE;
^
TotalCrossVM/src/jpeg/jpegtran.c:143:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  transformoption.perfect = FALSE;
^
TotalCrossVM/src/jpeg/jpegtran.c:144:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  transformoption.trim = FALSE;
^
TotalCrossVM/src/jpeg/jpegtran.c:145:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  transformoption.force_grayscale = FALSE;
^
TotalCrossVM/src/jpeg/jpegtran.c:146:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  transformoption.crop = FALSE;
^
TotalCrossVM/src/jpeg/jpegtran.c:204:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      static boolean printed_version = FALSE;
^
TotalCrossVM/src/jpeg/jpegtran.c:433:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  file_index = parse_switches(&dstinfo, argc, argv, 0, FALSE);
^
TotalCrossVM/src/jpeg/jpegtran.c:166:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->arith_code = TRUE;
^
TotalCrossVM/src/jpeg/jpegtran.c:209:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 printed_version = TRUE;
^
TotalCrossVM/src/jpeg/jpegtran.c:227:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      transformoption.force_grayscale = TRUE;
^
TotalCrossVM/src/jpeg/jpegtran.c:248:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cinfo->optimize_coding = TRUE;
^
TotalCrossVM/src/jpeg/jpegtran.c:264:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      transformoption.perfect = TRUE;
^
TotalCrossVM/src/jpeg/jpegtran.c:269:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      simple_progressive = TRUE;
^
TotalCrossVM/src/jpeg/jpegtran.c:339:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      transformoption.trim = TRUE;
^
TotalCrossVM/src/jpeg/jpegtran.c:483:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (void) jpeg_read_header(&srcinfo, TRUE);
^
TotalCrossVM/src/jpeg/jpegtran.c:542:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  file_index = parse_switches(&dstinfo, argc, argv, 0, TRUE);
^
TotalCrossVM/src/jpeg/jquant1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jquant1.c:541:14: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
      dither = cquantize->odither[ci][row_index];
             ^
TotalCrossVM/src/jpeg/jquant1.c:589:13: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    dither0 = cquantize->odither[0][row_index];
            ^
TotalCrossVM/src/jpeg/jquant1.c:590:13: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    dither1 = cquantize->odither[1][row_index];
            ^
TotalCrossVM/src/jpeg/jquant1.c:591:13: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    dither2 = cquantize->odither[2][row_index];
            ^
TotalCrossVM/src/jpeg/jquant1.c:279:14: style: The scope of the variable 'nci' can be reduced. [variableScope]
  int i,j,k, nci, blksize, blkdist, ptr, val;
             ^
TotalCrossVM/src/jpeg/jquant1.c:279:19: style: The scope of the variable 'blksize' can be reduced. [variableScope]
  int i,j,k, nci, blksize, blkdist, ptr, val;
                  ^
TotalCrossVM/src/jpeg/jquant1.c:338:11: style: The scope of the variable 'k' can be reduced. [variableScope]
  int i,j,k, nci, blksize, val, pad;
          ^
TotalCrossVM/src/jpeg/jquant1.c:338:14: style: The scope of the variable 'nci' can be reduced. [variableScope]
  int i,j,k, nci, blksize, val, pad;
             ^
TotalCrossVM/src/jpeg/jquant1.c:338:28: style: The scope of the variable 'val' can be reduced. [variableScope]
  int i,j,k, nci, blksize, val, pad;
                           ^
TotalCrossVM/src/jpeg/jquant1.c:437:13: style: The scope of the variable 'nci' can be reduced. [variableScope]
  int i, j, nci;
            ^
TotalCrossVM/src/jpeg/jquant1.c:467:21: style: The scope of the variable 'ptrin' can be reduced. [variableScope]
  register JSAMPROW ptrin, ptrout;
                    ^
TotalCrossVM/src/jpeg/jquant1.c:467:28: style: The scope of the variable 'ptrout' can be reduced. [variableScope]
  register JSAMPROW ptrin, ptrout;
                           ^
TotalCrossVM/src/jpeg/jquant1.c:494:21: style: The scope of the variable 'ptrin' can be reduced. [variableScope]
  register JSAMPROW ptrin, ptrout;
                    ^
TotalCrossVM/src/jpeg/jquant1.c:494:28: style: The scope of the variable 'ptrout' can be reduced. [variableScope]
  register JSAMPROW ptrin, ptrout;
                           ^
TotalCrossVM/src/jpeg/jquant1.c:525:7: style: The scope of the variable 'row_index' can be reduced. [variableScope]
  int row_index, col_index; /* current indexes into dither matrix */
      ^
TotalCrossVM/src/jpeg/jquant1.c:572:21: style: The scope of the variable 'input_ptr' can be reduced. [variableScope]
  register JSAMPROW input_ptr;
                    ^
TotalCrossVM/src/jpeg/jquant1.c:573:21: style: The scope of the variable 'output_ptr' can be reduced. [variableScope]
  register JSAMPROW output_ptr;
                    ^
TotalCrossVM/src/jpeg/jquant1.c:577:9: style: The scope of the variable 'dither0' can be reduced. [variableScope]
  int * dither0;  /* points to active row of dither matrix */
        ^
TotalCrossVM/src/jpeg/jquant1.c:578:9: style: The scope of the variable 'dither1' can be reduced. [variableScope]
  int * dither1;
        ^
TotalCrossVM/src/jpeg/jquant1.c:579:9: style: The scope of the variable 'dither2' can be reduced. [variableScope]
  int * dither2;
        ^
TotalCrossVM/src/jpeg/jquant1.c:580:7: style: The scope of the variable 'row_index' can be reduced. [variableScope]
  int row_index, col_index; /* current indexes into dither matrix */
      ^
TotalCrossVM/src/jpeg/jquant1.c:580:18: style: The scope of the variable 'col_index' can be reduced. [variableScope]
  int row_index, col_index; /* current indexes into dither matrix */
                 ^
TotalCrossVM/src/jpeg/jquant1.c:227:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    changed = FALSE;
^
TotalCrossVM/src/jpeg/jquant1.c:350:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cquantize->is_padded = FALSE;
^
TotalCrossVM/src/jpeg/jquant1.c:713:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cquantize->on_odd_row = (cquantize->on_odd_row ? FALSE : TRUE);
^
TotalCrossVM/src/jpeg/jquant1.c:778:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cquantize->on_odd_row = FALSE; /* initialize state for F-S dither */
^
TotalCrossVM/src/jpeg/jquant1.c:237:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      changed = TRUE;
^
TotalCrossVM/src/jpeg/jquant1.c:347:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cquantize->is_padded = TRUE;
^
TotalCrossVM/src/jpeg/jquant1.c:713:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cquantize->on_odd_row = (cquantize->on_odd_row ? FALSE : TRUE);
^
TotalCrossVM/src/jpeg/jquant2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/jquant2.c:229:21: style: The scope of the variable 'ptr' can be reduced. [variableScope]
  register JSAMPROW ptr;
                    ^
TotalCrossVM/src/jpeg/jquant2.c:661:10: style: The scope of the variable 'x' can be reduced. [variableScope]
  int i, x, ncolors;
         ^
TotalCrossVM/src/jpeg/jquant2.c:786:10: style: The scope of the variable 'icolor' can be reduced. [variableScope]
  int i, icolor;
         ^
TotalCrossVM/src/jpeg/jquant2.c:788:13: style: The scope of the variable 'cptr' can be reduced. [variableScope]
  JSAMPLE * cptr;  /* pointer into bestcolor[] array */
            ^
TotalCrossVM/src/jpeg/jquant2.c:789:9: style: The scope of the variable 'dist0' can be reduced. [variableScope]
  INT32 dist0, dist1;  /* initial distance values */
        ^
TotalCrossVM/src/jpeg/jquant2.c:791:9: style: The scope of the variable 'xx0' can be reduced. [variableScope]
  INT32 xx0, xx1;  /* distance increments */
        ^
TotalCrossVM/src/jpeg/jquant2.c:793:9: style: The scope of the variable 'inc0' can be reduced. [variableScope]
  INT32 inc0, inc1, inc2; /* initial values for increments */
        ^
TotalCrossVM/src/jpeg/jquant2.c:793:15: style: The scope of the variable 'inc1' can be reduced. [variableScope]
  INT32 inc0, inc1, inc2; /* initial values for increments */
              ^
TotalCrossVM/src/jpeg/jquant2.c:793:21: style: The scope of the variable 'inc2' can be reduced. [variableScope]
  INT32 inc0, inc1, inc2; /* initial values for increments */
                    ^
TotalCrossVM/src/jpeg/jquant2.c:922:21: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  register JSAMPROW inptr, outptr;
                    ^
TotalCrossVM/src/jpeg/jquant2.c:922:28: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  register JSAMPROW inptr, outptr;
                           ^
TotalCrossVM/src/jpeg/jquant2.c:956:23: style: The scope of the variable 'cur0' can be reduced. [variableScope]
  register LOCFSERROR cur0, cur1, cur2; /* current error or pixel value */
                      ^
TotalCrossVM/src/jpeg/jquant2.c:956:29: style: The scope of the variable 'cur1' can be reduced. [variableScope]
  register LOCFSERROR cur0, cur1, cur2; /* current error or pixel value */
                            ^
TotalCrossVM/src/jpeg/jquant2.c:956:35: style: The scope of the variable 'cur2' can be reduced. [variableScope]
  register LOCFSERROR cur0, cur1, cur2; /* current error or pixel value */
                                  ^
TotalCrossVM/src/jpeg/jquant2.c:957:14: style: The scope of the variable 'belowerr0' can be reduced. [variableScope]
  LOCFSERROR belowerr0, belowerr1, belowerr2; /* error for pixel below cur */
             ^
TotalCrossVM/src/jpeg/jquant2.c:957:25: style: The scope of the variable 'belowerr1' can be reduced. [variableScope]
  LOCFSERROR belowerr0, belowerr1, belowerr2; /* error for pixel below cur */
                        ^
TotalCrossVM/src/jpeg/jquant2.c:957:36: style: The scope of the variable 'belowerr2' can be reduced. [variableScope]
  LOCFSERROR belowerr0, belowerr1, belowerr2; /* error for pixel below cur */
                                   ^
TotalCrossVM/src/jpeg/jquant2.c:958:14: style: The scope of the variable 'bpreverr0' can be reduced. [variableScope]
  LOCFSERROR bpreverr0, bpreverr1, bpreverr2; /* error for below/prev col */
             ^
TotalCrossVM/src/jpeg/jquant2.c:958:25: style: The scope of the variable 'bpreverr1' can be reduced. [variableScope]
  LOCFSERROR bpreverr0, bpreverr1, bpreverr2; /* error for below/prev col */
                        ^
TotalCrossVM/src/jpeg/jquant2.c:958:36: style: The scope of the variable 'bpreverr2' can be reduced. [variableScope]
  LOCFSERROR bpreverr0, bpreverr1, bpreverr2; /* error for below/prev col */
                                   ^
TotalCrossVM/src/jpeg/jquant2.c:960:12: style: The scope of the variable 'inptr' can be reduced. [variableScope]
  JSAMPROW inptr;  /* => current input pixel */
           ^
TotalCrossVM/src/jpeg/jquant2.c:961:12: style: The scope of the variable 'outptr' can be reduced. [variableScope]
  JSAMPROW outptr;  /* => current output pixel */
           ^
TotalCrossVM/src/jpeg/jquant2.c:985:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cquantize->on_odd_row = FALSE; /* flip for next time */
^
TotalCrossVM/src/jpeg/jquant2.c:1211:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cquantize->on_odd_row = FALSE;
^
TotalCrossVM/src/jpeg/jquant2.c:1221:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cquantize->needs_zeroed = FALSE;
^
TotalCrossVM/src/jpeg/jquant2.c:991:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      cquantize->on_odd_row = TRUE; /* flip for next time */
^
TotalCrossVM/src/jpeg/jquant2.c:1152:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cquantize->needs_zeroed = TRUE;
^
TotalCrossVM/src/jpeg/jquant2.c:1183:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    cquantize->needs_zeroed = TRUE; /* Always zero histogram */
^
TotalCrossVM/src/jpeg/jquant2.c:1236:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cquantize->needs_zeroed = TRUE;
^
TotalCrossVM/src/jpeg/jquant2.c:1271:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cquantize->needs_zeroed = TRUE; /* histogram is garbage now */
^
TotalCrossVM/src/jpeg/jutils.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdbmp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdbmp.c:126:16: style: The scope of the variable 't' can be reduced. [variableScope]
  register int t;
               ^
TotalCrossVM/src/jpeg/rdbmp.c:134:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     source->source_row, (JDIMENSION) 1, FALSE);
^
TotalCrossVM/src/jpeg/rdbmp.c:163:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     source->source_row, (JDIMENSION) 1, FALSE);
^
TotalCrossVM/src/jpeg/rdbmp.c:194:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     source->source_row, (JDIMENSION) 1, FALSE);
^
TotalCrossVM/src/jpeg/rdbmp.c:430:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
^
TotalCrossVM/src/jpeg/rdcolmap.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdcolmap.c:83:7: style: The scope of the variable 'R' can be reduced. [variableScope]
  int R, G, B;
      ^
TotalCrossVM/src/jpeg/rdcolmap.c:83:10: style: The scope of the variable 'G' can be reduced. [variableScope]
  int R, G, B;
         ^
TotalCrossVM/src/jpeg/rdcolmap.c:83:13: style: The scope of the variable 'B' can be reduced. [variableScope]
  int R, G, B;
            ^
TotalCrossVM/src/jpeg/rdcolmap.c:185:9: style: Checking if unsigned expression 'w' is less than zero. [unsignedLessThanZero]
  if (w <= 0 || h <= 0 || maxval <= 0) /* error check */
        ^
TotalCrossVM/src/jpeg/rdcolmap.c:185:19: style: Checking if unsigned expression 'h' is less than zero. [unsignedLessThanZero]
  if (w <= 0 || h <= 0 || maxval <= 0) /* error check */
                  ^
TotalCrossVM/src/jpeg/rdcolmap.c:185:34: style: Checking if unsigned expression 'maxval' is less than zero. [unsignedLessThanZero]
  if (w <= 0 || h <= 0 || maxval <= 0) /* error check */
                                 ^
TotalCrossVM/src/jpeg/rdgif.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdjpgcom.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdjpgcom.c:342:7: style: The scope of the variable 'marker' can be reduced. [variableScope]
  int marker;
      ^
TotalCrossVM/src/jpeg/rdjpgcom.c:430:20: style: The scope of the variable 'ck' can be reduced. [variableScope]
  register int ca, ck;
                   ^
TotalCrossVM/src/jpeg/rdppm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdppm.c:326:9: style: Checking if unsigned expression 'w' is less than zero. [unsignedLessThanZero]
  if (w <= 0 || h <= 0 || maxval <= 0) /* error check */
        ^
TotalCrossVM/src/jpeg/rdppm.c:326:19: style: Checking if unsigned expression 'h' is less than zero. [unsignedLessThanZero]
  if (w <= 0 || h <= 0 || maxval <= 0) /* error check */
                  ^
TotalCrossVM/src/jpeg/rdppm.c:326:34: style: Checking if unsigned expression 'maxval' is less than zero. [unsignedLessThanZero]
  if (w <= 0 || h <= 0 || maxval <= 0) /* error check */
                                 ^
TotalCrossVM/src/jpeg/rdrle.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdswitch.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdswitch.c:52:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:58:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:93:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:101:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:108:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:120:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:139:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:145:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:186:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:195:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:204:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:236:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:244:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:282:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:284:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:314:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:316:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:320:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:348:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:350:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:354:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/rdswitch.c:70:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/rdswitch.c:124:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/rdswitch.c:155:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/rdswitch.c:261:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/rdswitch.c:295:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/rdswitch.c:330:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/rdswitch.c:366:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/rdtarga.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/rdtarga.c:194:16: style: The scope of the variable 't' can be reduced. [variableScope]
  register int t;
               ^
TotalCrossVM/src/jpeg/rdtarga.c:215:16: style: The scope of the variable 't' can be reduced. [variableScope]
  register int t;
               ^
TotalCrossVM/src/jpeg/transupp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/transupp.c:85:25: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION dst_blk_y, x_crop_blocks, y_crop_blocks;
                        ^
TotalCrossVM/src/jpeg/transupp.c:85:40: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION dst_blk_y, x_crop_blocks, y_crop_blocks;
                                       ^
TotalCrossVM/src/jpeg/transupp.c:88:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:127:34: style: The scope of the variable 'comp_width' can be reduced. [variableScope]
  JDIMENSION MCU_cols, MCU_rows, comp_width, comp_height;
                                 ^
TotalCrossVM/src/jpeg/transupp.c:127:46: style: The scope of the variable 'comp_height' can be reduced. [variableScope]
  JDIMENSION MCU_cols, MCU_rows, comp_width, comp_height;
                                             ^
TotalCrossVM/src/jpeg/transupp.c:128:25: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION dst_blk_y, x_crop_blocks, y_crop_blocks;
                        ^
TotalCrossVM/src/jpeg/transupp.c:128:40: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION dst_blk_y, x_crop_blocks, y_crop_blocks;
                                       ^
TotalCrossVM/src/jpeg/transupp.c:131:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:201:14: style: The scope of the variable 'comp_width' can be reduced. [variableScope]
  JDIMENSION comp_width, comp_height;
             ^
TotalCrossVM/src/jpeg/transupp.c:201:26: style: The scope of the variable 'comp_height' can be reduced. [variableScope]
  JDIMENSION comp_width, comp_height;
                         ^
TotalCrossVM/src/jpeg/transupp.c:202:21: style: The scope of the variable 'x_wipe_blocks' can be reduced. [variableScope]
  JDIMENSION blk_y, x_wipe_blocks, y_wipe_blocks;
                    ^
TotalCrossVM/src/jpeg/transupp.c:202:36: style: The scope of the variable 'y_wipe_blocks' can be reduced. [variableScope]
  JDIMENSION blk_y, x_wipe_blocks, y_wipe_blocks;
                                   ^
TotalCrossVM/src/jpeg/transupp.c:205:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:234:24: style: The scope of the variable 'comp_width' can be reduced. [variableScope]
  JDIMENSION MCU_cols, comp_width, blk_x, blk_y, x_crop_blocks;
                       ^
TotalCrossVM/src/jpeg/transupp.c:234:50: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION MCU_cols, comp_width, blk_x, blk_y, x_crop_blocks;
                                                 ^
TotalCrossVM/src/jpeg/transupp.c:239:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:300:24: style: The scope of the variable 'comp_width' can be reduced. [variableScope]
  JDIMENSION MCU_cols, comp_width, dst_blk_x, dst_blk_y;
                       ^
TotalCrossVM/src/jpeg/transupp.c:301:14: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
             ^
TotalCrossVM/src/jpeg/transupp.c:301:29: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
                            ^
TotalCrossVM/src/jpeg/transupp.c:306:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:362:24: style: The scope of the variable 'comp_height' can be reduced. [variableScope]
  JDIMENSION MCU_rows, comp_height, dst_blk_x, dst_blk_y;
                       ^
TotalCrossVM/src/jpeg/transupp.c:363:14: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
             ^
TotalCrossVM/src/jpeg/transupp.c:363:29: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
                            ^
TotalCrossVM/src/jpeg/transupp.c:368:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:442:36: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION dst_blk_x, dst_blk_y, x_crop_blocks, y_crop_blocks;
                                   ^
TotalCrossVM/src/jpeg/transupp.c:442:51: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION dst_blk_x, dst_blk_y, x_crop_blocks, y_crop_blocks;
                                                  ^
TotalCrossVM/src/jpeg/transupp.c:446:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:494:24: style: The scope of the variable 'comp_width' can be reduced. [variableScope]
  JDIMENSION MCU_cols, comp_width, dst_blk_x, dst_blk_y;
                       ^
TotalCrossVM/src/jpeg/transupp.c:495:14: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
             ^
TotalCrossVM/src/jpeg/transupp.c:495:29: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
                            ^
TotalCrossVM/src/jpeg/transupp.c:499:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:575:24: style: The scope of the variable 'comp_height' can be reduced. [variableScope]
  JDIMENSION MCU_rows, comp_height, dst_blk_x, dst_blk_y;
                       ^
TotalCrossVM/src/jpeg/transupp.c:576:14: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
             ^
TotalCrossVM/src/jpeg/transupp.c:576:29: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
                            ^
TotalCrossVM/src/jpeg/transupp.c:580:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:646:34: style: The scope of the variable 'comp_width' can be reduced. [variableScope]
  JDIMENSION MCU_cols, MCU_rows, comp_width, comp_height, dst_blk_x, dst_blk_y;
                                 ^
TotalCrossVM/src/jpeg/transupp.c:646:46: style: The scope of the variable 'comp_height' can be reduced. [variableScope]
  JDIMENSION MCU_cols, MCU_rows, comp_width, comp_height, dst_blk_x, dst_blk_y;
                                             ^
TotalCrossVM/src/jpeg/transupp.c:647:14: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
             ^
TotalCrossVM/src/jpeg/transupp.c:647:29: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
                            ^
TotalCrossVM/src/jpeg/transupp.c:652:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:758:34: style: The scope of the variable 'comp_width' can be reduced. [variableScope]
  JDIMENSION MCU_cols, MCU_rows, comp_width, comp_height, dst_blk_x, dst_blk_y;
                                 ^
TotalCrossVM/src/jpeg/transupp.c:758:46: style: The scope of the variable 'comp_height' can be reduced. [variableScope]
  JDIMENSION MCU_cols, MCU_rows, comp_width, comp_height, dst_blk_x, dst_blk_y;
                                             ^
TotalCrossVM/src/jpeg/transupp.c:759:14: style: The scope of the variable 'x_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
             ^
TotalCrossVM/src/jpeg/transupp.c:759:29: style: The scope of the variable 'y_crop_blocks' can be reduced. [variableScope]
  JDIMENSION x_crop_blocks, y_crop_blocks;
                            ^
TotalCrossVM/src/jpeg/transupp.c:763:24: style: The scope of the variable 'compptr' can be reduced. [variableScope]
  jpeg_component_info *compptr;
                       ^
TotalCrossVM/src/jpeg/transupp.c:994:14: style: The scope of the variable 'xoffset' can be reduced. [variableScope]
  JDIMENSION xoffset, yoffset;
             ^
TotalCrossVM/src/jpeg/transupp.c:994:23: style: The scope of the variable 'yoffset' can be reduced. [variableScope]
  JDIMENSION xoffset, yoffset;
                      ^
TotalCrossVM/src/jpeg/transupp.c:995:14: style: The scope of the variable 'width_in_iMCUs' can be reduced. [variableScope]
  JDIMENSION width_in_iMCUs, height_in_iMCUs;
             ^
TotalCrossVM/src/jpeg/transupp.c:995:30: style: The scope of the variable 'height_in_iMCUs' can be reduced. [variableScope]
  JDIMENSION width_in_iMCUs, height_in_iMCUs;
                             ^
TotalCrossVM/src/jpeg/transupp.c:996:14: style: The scope of the variable 'width_in_blocks' can be reduced. [variableScope]
  JDIMENSION width_in_blocks, height_in_blocks;
             ^
TotalCrossVM/src/jpeg/transupp.c:996:31: style: The scope of the variable 'height_in_blocks' can be reduced. [variableScope]
  JDIMENSION width_in_blocks, height_in_blocks;
                              ^
TotalCrossVM/src/jpeg/transupp.c:997:7: style: The scope of the variable 'ci' can be reduced. [variableScope]
  int ci, h_samp_factor, v_samp_factor;
      ^
TotalCrossVM/src/jpeg/transupp.c:997:11: style: The scope of the variable 'h_samp_factor' can be reduced. [variableScope]
  int ci, h_samp_factor, v_samp_factor;
          ^
TotalCrossVM/src/jpeg/transupp.c:997:26: style: The scope of the variable 'v_samp_factor' can be reduced. [variableScope]
  int ci, h_samp_factor, v_samp_factor;
                         ^
TotalCrossVM/src/jpeg/transupp.c:1699:7: style: The scope of the variable 'm' can be reduced. [variableScope]
  int m;
      ^
TotalCrossVM/src/jpeg/transupp.c:1093:23: style: Checking if unsigned expression 'info->crop_width' is less than zero. [unsignedLessThanZero]
     info->crop_width <= 0 ||
                      ^
TotalCrossVM/src/jpeg/transupp.c:1112:24: style: Checking if unsigned expression 'info->crop_height' is less than zero. [unsignedLessThanZero]
     info->crop_height <= 0 ||
                       ^
TotalCrossVM/src/jpeg/transupp.c:105:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:161:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:166:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:328:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:396:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:402:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:468:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      (JDIMENSION) compptr->h_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:527:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        (JDIMENSION) compptr->h_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:533:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        (JDIMENSION) compptr->h_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:605:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      (JDIMENSION) compptr->h_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:676:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:682:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (JDIMENSION) compptr->v_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:790:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        (JDIMENSION) compptr->h_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:795:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        (JDIMENSION) compptr->h_samp_factor, FALSE);
^
TotalCrossVM/src/jpeg/transupp.c:874:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;  /* oops, no digits */
^
TotalCrossVM/src/jpeg/transupp.c:896:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  info->crop = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:905:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:916:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:928:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:935:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      return FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:939:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    return FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1022:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1029:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1165:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  need_workspace = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1166:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  transpose_it = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1258:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ((j_common_ptr) srcinfo, JPOOL_IMAGE, FALSE,
^
TotalCrossVM/src/jpeg/transupp.c:1330:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    is_motorola = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1549:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    dstinfo->write_JFIF_header = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1667:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      result = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1672:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      result = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1677:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      result = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:1679:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      result = FALSE;
^
TotalCrossVM/src/jpeg/transupp.c:101:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:148:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:216:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:257:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:324:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:389:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:461:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:517:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:598:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:669:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:780:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  (JDIMENSION) compptr->v_samp_factor, TRUE);
^
TotalCrossVM/src/jpeg/transupp.c:876:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:940:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  info->crop = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:941:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1172:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      need_workspace = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1179:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      need_workspace = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1186:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    need_workspace = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1191:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    need_workspace = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1192:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    transpose_it = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1200:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    need_workspace = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1201:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    transpose_it = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1207:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    need_workspace = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1208:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    transpose_it = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1216:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    need_workspace = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1222:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    need_workspace = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1223:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    transpose_it = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1265:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1332:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    is_motorola = TRUE;
^
TotalCrossVM/src/jpeg/transupp.c:1661:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  boolean result = TRUE; /* initialize TRUE */
^
TotalCrossVM/src/jpeg/wrbmp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/wrbmp.c:349:21: style: The scope of the variable 'data_ptr' can be reduced. [variableScope]
  register JSAMPROW data_ptr;
                    ^
TotalCrossVM/src/jpeg/wrbmp.c:368:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      ((j_common_ptr) cinfo, dest->whole_image, row-1, (JDIMENSION) 1, FALSE);
^
TotalCrossVM/src/jpeg/wrbmp.c:426:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'FALSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
^
TotalCrossVM/src/jpeg/wrbmp.c:84:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     dest->cur_output_row, (JDIMENSION) 1, TRUE);
^
TotalCrossVM/src/jpeg/wrbmp.c:119:0: information: Skipping configuration 'FALSE;QGLOBAL_H;TRUE' since the value of 'TRUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     dest->cur_output_row, (JDIMENSION) 1, TRUE);
^
TotalCrossVM/src/jpeg/wrgif.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/wrjpgcom.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/wrjpgcom.c:292:7: style: The scope of the variable 'marker' can be reduced. [variableScope]
  int marker;
      ^
TotalCrossVM/src/jpeg/wrjpgcom.c:390:20: style: The scope of the variable 'ck' can be reduced. [variableScope]
  register int ca, ck;
                   ^
TotalCrossVM/src/jpeg/wrppm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/wrppm.c:134:16: style: The scope of the variable 'pixval' can be reduced. [variableScope]
  register int pixval;
               ^
TotalCrossVM/src/jpeg/wrrle.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/jpeg/wrtarga.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/launchers/linux/Launcher.c:39:0: information: Skipping configuration 'CURRENT_DEBUG_PATH' since the value of 'CURRENT_DEBUG_PATH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
               CURRENT_DEBUG_PATH
^
TotalCrossVM/src/launchers/wp8/Launcher.cpp:13:43: error: Syntax Error: AST broken, binary operator '>' doesn't have two operands. [internalAstError]
int main(Platform::Array<Platform::String^>^ argsArray)
                                          ^
TotalCrossVM/src/launchers/wp8/MainViewFactory.h:5:6: information: The code 'class MainViewFactory sealed :' is not handled. You can use -I or --include to add handling of this code. [class_X_Y]
 ref class MainViewFactory sealed : Windows::ApplicationModel::Core::IFrameworkViewSource
     ^
TotalCrossVM/src/launchers/wp8/MainViewFactory.cpp:48:16: warning: Redundant assignment of 'this->cmdLine' to itself. [selfAssignment]
 this->cmdLine = cmdLine;
               ^
TotalCrossVM/src/litebase/Index.c:1262:15: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
         if (!(isNull = isBitSet(origNulls, colIndex))
              ^
TotalCrossVM/src/litebase/Index.c:546:27: style: Condition 'comp>=0' is always true [knownConditionTrueFalse]
            else if (comp >= 0) // left >= curr.keys[pos] ?
                          ^
TotalCrossVM/src/litebase/Index.c:541:96: note: Assuming that condition '(comp=keyCompareTo(context,left,&currKeys[++pos],numberColumns,plainDB))<=0' is not redundant
            if ((comp = keyCompareTo(context, left, &currKeys[++pos], numberColumns, plainDB)) <= 0)
                                                                                               ^
TotalCrossVM/src/litebase/Index.c:546:27: note: Condition 'comp>=0' is always true
            else if (comp >= 0) // left >= curr.keys[pos] ?
                          ^
TotalCrossVM/src/litebase/Index.c:242:12: style: The scope of the variable 'keyFound' can be reduced. [variableScope]
      Key* keyFound;
           ^
TotalCrossVM/src/litebase/Index.c:388:12: style: The scope of the variable 'keyFound' can be reduced. [variableScope]
      Key* keyFound;
           ^
TotalCrossVM/src/litebase/Index.c:476:9: style: The scope of the variable 'loaded' can be reduced. [variableScope]
  Node* loaded;
        ^
TotalCrossVM/src/litebase/Index.c:591:9: style: The scope of the variable 'med' can be reduced. [variableScope]
   Key* med;
        ^
TotalCrossVM/src/litebase/Index.c:771:9: style: The scope of the variable 'splitting' can be reduced. [variableScope]
   bool splitting = false;
        ^
TotalCrossVM/src/litebase/Index.c:788:12: style: The scope of the variable 'keyFound' can be reduced. [variableScope]
      Key* keyFound;
           ^
TotalCrossVM/src/litebase/Index.c:1253:12: style: The scope of the variable 'isNull' can be reduced. [variableScope]
      bool isNull;
           ^
TotalCrossVM/src/litebase/Index.c:941:14: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
         idx = 0,
             ^
TotalCrossVM/src/litebase/Index.c:1001:14: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
         idx = 0,
             ^
TotalCrossVM/src/litebase/Index.c:1094:15: style: Variable 'node' is assigned a value that is never used. [unreadVariable]
         node = 0,
              ^
TotalCrossVM/src/litebase/Index.c:1167:15: style: Variable 'node' is assigned a value that is never used. [unreadVariable]
         node = 0,
              ^
TotalCrossVM/src/litebase/Index.c:26:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createComposedIndex")
 ^
TotalCrossVM/src/litebase/Index.c:50:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createIndex")
 ^
TotalCrossVM/src/litebase/Index.c:231:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexRemoveValue")
 ^
TotalCrossVM/src/litebase/Index.c:377:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexGetValue")
 ^
TotalCrossVM/src/litebase/Index.c:453:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexClimbGreaterOrEqual")
 ^
TotalCrossVM/src/litebase/Index.c:517:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexGetGreaterOrEqual")
 ^
TotalCrossVM/src/litebase/Index.c:590:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexSplitNode")
 ^
TotalCrossVM/src/litebase/Index.c:643:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexRemove")
 ^
TotalCrossVM/src/litebase/Index.c:662:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexClose")
 ^
TotalCrossVM/src/litebase/Index.c:681:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexDeleteAllRows")
 ^
TotalCrossVM/src/litebase/Index.c:730:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE(delayed ? "indexSetWriteDelayed on" : "indexSetWriteDelayed off")
 ^
TotalCrossVM/src/litebase/Index.c:767:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexAddKey")
 ^
TotalCrossVM/src/litebase/Index.c:862:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexRename")
 ^
TotalCrossVM/src/litebase/Index.c:886:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("getLoadedNode")
   ^
TotalCrossVM/src/litebase/Index.c:935:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("findMinValue")
   ^
TotalCrossVM/src/litebase/Index.c:995:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("findMaxValue")
   ^
TotalCrossVM/src/litebase/Index.c:1052:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("loadStringForMaxMin")
   ^
TotalCrossVM/src/litebase/Index.c:1090:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("sortRecordsAsc")
   ^
TotalCrossVM/src/litebase/Index.c:1163:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("sortRecordsDesc")
   ^
TotalCrossVM/src/litebase/Index.c:1237:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("writeKey")
   ^
TotalCrossVM/src/litebase/Key.c:83:14: style: The scope of the variable 'keyAux' can be reduced. [variableScope]
   SQLValue* keyAux;
             ^
TotalCrossVM/src/litebase/Key.c:23:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keySet")
 ^
TotalCrossVM/src/litebase/Key.c:40:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keySetFromKey")
 ^
TotalCrossVM/src/litebase/Key.c:79:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keyLoad")
 ^
TotalCrossVM/src/litebase/Key.c:127:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keySave")
 ^
TotalCrossVM/src/litebase/Key.c:168:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("keyCompareTo")
 ^
TotalCrossVM/src/litebase/Litebase.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/litebase/Litebase.c:765:9: style: Variable 'locked' is reassigned a value before the old one has been used. [redundantAssignment]
 locked = false;
        ^
TotalCrossVM/src/litebase/Litebase.c:760:9: note: locked is assigned
 locked = true;
        ^
TotalCrossVM/src/litebase/Litebase.c:765:9: note: locked is overwritten
 locked = false;
        ^
TotalCrossVM/src/litebase/Litebase.c:19:1: style:inconclusive: Function 'TC_TCObjectsAdd' argument 3 names different: declaration 'h' definition 'heap'. [funcArgNamesDifferent]
TC_ImplementList(TCObject);
^
TotalCrossVM/src/litebase/LitebaseTypes.h:40:1: note: Function 'TC_TCObjectsAdd' argument 3 names different: declaration 'h' definition 'heap'.
TC_DeclareList(TCObject);
^
TotalCrossVM/src/litebase/Litebase.c:19:1: note: Function 'TC_TCObjectsAdd' argument 3 names different: declaration 'h' definition 'heap'.
TC_ImplementList(TCObject);
^
TotalCrossVM/src/litebase/Litebase.c:389:78: style:inconclusive: Function 'litebaseExecute' argument 4 names different: declaration 'len' definition 'sqlLen'. [funcArgNamesDifferent]
void litebaseExecute(Context context, TCObject driver, JCharP sqlStr, uint32 sqlLen)
                                                                             ^
TotalCrossVM/src/litebase/Litebase.h:125:78: note: Function 'litebaseExecute' argument 4 names different: declaration 'len' definition 'sqlLen'.
void litebaseExecute(Context context, TCObject driver, JCharP sqlStr, uint32 len);
                                                                             ^
TotalCrossVM/src/litebase/Litebase.c:389:78: note: Function 'litebaseExecute' argument 4 names different: declaration 'len' definition 'sqlLen'.
void litebaseExecute(Context context, TCObject driver, JCharP sqlStr, uint32 sqlLen)
                                                                             ^
TotalCrossVM/src/litebase/Litebase.c:397:11: style: Local variable 'names' shadows outer variable [shadowVariable]
   CharP* names;
          ^
TotalCrossVM/src/litebase/LitebaseGlobals.h:30:14: note: Shadowed declaration
extern CharP names[10];                 // An array with the names of the SQL data functions.
             ^
TotalCrossVM/src/litebase/Litebase.c:397:11: note: Shadow variable
   CharP* names;
          ^
TotalCrossVM/src/litebase/Litebase.c:1854:1: style: Label 'finish' is not used. [unusedLabel]
finish : ;
^
TotalCrossVM/src/litebase/Litebase.c:2352:1: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
finish: ;
^
TotalCrossVM/src/litebase/Litebase.c:2533:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/Litebase.c:2612:1: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
finish: ;
^
TotalCrossVM/src/litebase/Litebase.c:2637:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/Litebase.c:3127:1: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
finish: ;
^
TotalCrossVM/src/litebase/Litebase.c:96:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("LibClose")
 ^
TotalCrossVM/src/litebase/Litebase.c:345:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("freeLitebase")
 ^
TotalCrossVM/src/litebase/Litebase.c:1547:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("testRIClosed")
   ^
TotalCrossVM/src/litebase/Litebase.c:1575:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("checkApppath")
 ^
TotalCrossVM/src/litebase/Litebase.c:1647:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("bindFunctionDataType")
   ^
TotalCrossVM/src/litebase/Litebase.c:1671:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("dataTypeFunctionsName")
 ^
TotalCrossVM/src/litebase/MarkBits.c:239:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/MarkBits.c:22:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("markBitsReset")
 ^
TotalCrossVM/src/litebase/MarkBits.c:39:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("onKey")
 ^
TotalCrossVM/src/litebase/MarkBits.c:129:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("onValue")
 ^
TotalCrossVM/src/litebase/MemoryFile.c:118:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/MemoryFile.c:142:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/MemoryFile.c:212:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/MemoryFile.c:20:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfSetPos")
 ^
TotalCrossVM/src/litebase/MemoryFile.c:35:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfGrowTo")
 ^
TotalCrossVM/src/litebase/MemoryFile.c:56:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfReadBytes")
 ^
TotalCrossVM/src/litebase/MemoryFile.c:74:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfWriteBytes")
 ^
TotalCrossVM/src/litebase/MemoryFile.c:90:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("mfClose")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:794:15: style: Variable 'locked' is reassigned a value before the old one has been used. [redundantAssignment]
       locked = false;
              ^
TotalCrossVM/src/litebase/NativeMethods.c:790:15: note: locked is assigned
       locked = true;
              ^
TotalCrossVM/src/litebase/NativeMethods.c:794:15: note: locked is overwritten
       locked = false;
              ^
TotalCrossVM/src/litebase/NativeMethods.c:1786:21: style: Variable 'nameStr' is reassigned a value before the old one has been used. [redundantAssignment]
       || !(nameStr = TC_createStringObjectFromTCHARP(context, name, -1)))
                    ^
TotalCrossVM/src/litebase/NativeMethods.c:1784:11: note: nameStr is assigned
  nameStr = null;
          ^
TotalCrossVM/src/litebase/NativeMethods.c:1786:21: note: nameStr is overwritten
       || !(nameStr = TC_createStringObjectFromTCHARP(context, name, -1)))
                    ^
TotalCrossVM/src/litebase/NativeMethods.c:4908:21: style: Variable 'locked' is reassigned a value before the old one has been used. [redundantAssignment]
             locked = false;
                    ^
TotalCrossVM/src/litebase/NativeMethods.c:4901:23: note: locked is assigned
               locked = true;
                      ^
TotalCrossVM/src/litebase/NativeMethods.c:4908:21: note: locked is overwritten
             locked = false;
                    ^
TotalCrossVM/src/litebase/NativeMethods.c:1232:12: style: The scope of the variable 'tableNameCharP' can be reduced. [variableScope]
      char tableNameCharP[DBNAME_SIZE],
           ^
TotalCrossVM/src/litebase/NativeMethods.c:1233:12: style: The scope of the variable 'bufName' can be reduced. [variableScope]
           bufName[DBNAME_SIZE];
           ^
TotalCrossVM/src/litebase/NativeMethods.c:1959:13: style: The scope of the variable 'resultSet' can be reduced. [variableScope]
 ResultSet* resultSet;
            ^
TotalCrossVM/src/litebase/NativeMethods.c:3922:29: style: The scope of the variable 'field' can be reduced. [variableScope]
         SQLResultSetField* field;
                            ^
TotalCrossVM/src/litebase/NativeMethods.c:4421:29: style: The scope of the variable 'field' can be reduced. [variableScope]
         SQLResultSetField* field;
                            ^
TotalCrossVM/src/litebase/NativeMethods.c:4539:29: style: The scope of the variable 'field' can be reduced. [variableScope]
         SQLResultSetField* field;
                            ^
TotalCrossVM/src/litebase/NativeMethods.c:4783:29: style: The scope of the variable 'field' can be reduced. [variableScope]
         SQLResultSetField* field;
                            ^
TotalCrossVM/src/litebase/NativeMethods.c:249:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, SHORT_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:249:4: note: Shadow variable
   getByIndex(p, SHORT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:266:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, INT_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:266:4: note: Shadow variable
   getByIndex(p, INT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:283:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, LONG_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:283:4: note: Shadow variable
   getByIndex(p, LONG_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:300:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, FLOAT_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:300:4: note: Shadow variable
   getByIndex(p, FLOAT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:317:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, DOUBLE_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:317:4: note: Shadow variable
   getByIndex(p, DOUBLE_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:334:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, CHARS_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:334:4: note: Shadow variable
   getByIndex(p, CHARS_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:351:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, BLOB_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:351:4: note: Shadow variable
   getByIndex(p, BLOB_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:368:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, DATE_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:368:4: note: Shadow variable
   getByIndex(p, DATE_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:386:4: style: Local variable 'getByIndex' shadows outer function [shadowFunction]
   getByIndex(p, DATETIME_TYPE);
   ^
TotalCrossVM/src/litebase/Litebase.h:215:6: note: Shadowed declaration
void getByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:386:4: note: Shadow variable
   getByIndex(p, DATETIME_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:435:4: style: Local variable 'TC_setObjectLock' shadows outer variable [shadowVariable]
   TC_setObjectLock(p->retO = create(p->currentContext, TC_getApplicationId(), null), UNLOCKED);
   ^
TotalCrossVM/src/litebase/LitebaseGlobals.h:119:26: note: Shadowed declaration
extern setObjectLockFunc TC_setObjectLock;
                         ^
TotalCrossVM/src/litebase/NativeMethods.c:435:4: note: Shadow variable
   TC_setObjectLock(p->retO = create(p->currentContext, TC_getApplicationId(), null), UNLOCKED);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:2010:22: style: Local variable 'length' shadows outer variable [shadowVariable]
               int32 length = String_charsLen(exceptionMsg);
                     ^
TotalCrossVM/src/litebase/NativeMethods.c:1956:6: note: Shadowed declaration
     length = ARRAYOBJ_LEN(sql),
     ^
TotalCrossVM/src/litebase/NativeMethods.c:2010:22: note: Shadow variable
               int32 length = String_charsLen(exceptionMsg);
                     ^
TotalCrossVM/src/litebase/NativeMethods.c:2417:18: style: Local variable 'buffer' shadows outer variable [shadowVariable]
            char buffer[1024];
                 ^
TotalCrossVM/src/litebase/NativeMethods.c:2366:16: note: Shadowed declaration
         TCHAR buffer[MAX_PATHNAME];
               ^
TotalCrossVM/src/litebase/NativeMethods.c:2417:18: note: Shadow variable
            char buffer[1024];
                 ^
TotalCrossVM/src/litebase/NativeMethods.c:2709:4: style: Local variable 'lLC_isOpen_s' shadows outer function [shadowFunction]
   lLC_isOpen_s(p);
   ^
TotalCrossVM/src/litebase/NativeMethods.h:467:13: note: Shadowed declaration
LB_API void lLC_isOpen_s(NMParams p);
            ^
TotalCrossVM/src/litebase/NativeMethods.c:2709:4: note: Shadow variable
   lLC_isOpen_s(p);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:2891:4: style: Local variable 'encDecTables' shadows outer function [shadowFunction]
   encDecTables(p, true);
   ^
TotalCrossVM/src/litebase/Litebase.h:271:6: note: Shadowed declaration
void encDecTables(NMParams params, bool toEncrypt);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:2891:4: note: Shadow variable
   encDecTables(p, true);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:2907:4: style: Local variable 'encDecTables' shadows outer function [shadowFunction]
   encDecTables(p, false);
   ^
TotalCrossVM/src/litebase/Litebase.h:271:6: note: Shadowed declaration
void encDecTables(NMParams params, bool toEncrypt);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:2907:4: note: Shadow variable
   encDecTables(p, false);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3134:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, SHORT_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3134:4: note: Shadow variable
   rsGetByIndex(p, SHORT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3152:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, SHORT_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3152:4: note: Shadow variable
   rsGetByName(p, SHORT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3169:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, INT_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3169:4: note: Shadow variable
   rsGetByIndex(p, INT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3186:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, INT_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3186:4: note: Shadow variable
   rsGetByName(p, INT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3203:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, LONG_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3203:4: note: Shadow variable
   rsGetByIndex(p, LONG_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3220:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, LONG_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3220:4: note: Shadow variable
   rsGetByName(p, LONG_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3237:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, FLOAT_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3237:4: note: Shadow variable
   rsGetByIndex(p, FLOAT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3254:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, FLOAT_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3254:4: note: Shadow variable
   rsGetByName(p, FLOAT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3271:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, DOUBLE_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3271:4: note: Shadow variable
   rsGetByIndex(p, DOUBLE_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3288:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, DOUBLE_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3288:4: note: Shadow variable
   rsGetByName(p, DOUBLE_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3305:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, CHARS_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3305:4: note: Shadow variable
   rsGetByIndex(p, CHARS_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3322:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, CHARS_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3322:4: note: Shadow variable
   rsGetByName(p, CHARS_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3339:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, UNDEFINED_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3339:4: note: Shadow variable
   rsGetByIndex(p, UNDEFINED_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3357:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, -1);
   ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3357:4: note: Shadow variable
   rsGetByName(p, -1);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3374:4: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
   rsGetByIndex(p, BLOB_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3374:4: note: Shadow variable
   rsGetByIndex(p, BLOB_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3391:4: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
   rsGetByName(p, BLOB_TYPE);
   ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3391:4: note: Shadow variable
   rsGetByName(p, BLOB_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3411:4: style: Local variable 'getStrings' shadows outer function [shadowFunction]
   getStrings(p, p->i32[0]); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
   ^
TotalCrossVM/src/litebase/ResultSet.h:190:6: note: Shadowed declaration
void getStrings(NMParams p, int32 count); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3411:4: note: Shadow variable
   getStrings(p, p->i32[0]); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3430:4: style: Local variable 'getStrings' shadows outer function [shadowFunction]
   getStrings(p, -1); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
   ^
TotalCrossVM/src/litebase/ResultSet.h:190:6: note: Shadowed declaration
void getStrings(NMParams p, int32 count); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3430:4: note: Shadow variable
   getStrings(p, -1); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3447:2: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
 rsGetByIndex(p, DATE_TYPE);
 ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3447:2: note: Shadow variable
 rsGetByIndex(p, DATE_TYPE);
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3465:2: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
 rsGetByName(p, DATE_TYPE);
 ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3465:2: note: Shadow variable
 rsGetByName(p, DATE_TYPE);
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3484:2: style: Local variable 'rsGetByIndex' shadows outer function [shadowFunction]
 rsGetByIndex(p, DATETIME_TYPE);
 ^
TotalCrossVM/src/litebase/ResultSet.h:205:6: note: Shadowed declaration
void rsGetByIndex(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3484:2: note: Shadow variable
 rsGetByIndex(p, DATETIME_TYPE);
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3504:2: style: Local variable 'rsGetByName' shadows outer function [shadowFunction]
 rsGetByName(p, DATETIME_TYPE);
 ^
TotalCrossVM/src/litebase/ResultSet.h:221:6: note: Shadowed declaration
void rsGetByName(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:3504:2: note: Shadow variable
 rsGetByName(p, DATETIME_TYPE);
 ^
TotalCrossVM/src/litebase/NativeMethods.c:4366:4: style: Local variable 'lRSMD_getColumnTableName_i' shadows outer function [shadowFunction]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
TotalCrossVM/src/litebase/NativeMethods.h:943:13: note: Shadowed declaration
LB_API void lRSMD_getColumnTableName_i(NMParams p);
            ^
TotalCrossVM/src/litebase/NativeMethods.c:4366:4: note: Shadow variable
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
TotalCrossVM/src/litebase/NativeMethods.c:4484:4: style: Local variable 'lRSMD_getColumnTableName_i' shadows outer function [shadowFunction]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
TotalCrossVM/src/litebase/NativeMethods.h:943:13: note: Shadowed declaration
LB_API void lRSMD_getColumnTableName_i(NMParams p);
            ^
TotalCrossVM/src/litebase/NativeMethods.c:4484:4: note: Shadow variable
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
TotalCrossVM/src/litebase/NativeMethods.c:4737:4: style: Local variable 'lRSMD_getColumnTableName_i' shadows outer function [shadowFunction]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
TotalCrossVM/src/litebase/NativeMethods.h:943:13: note: Shadowed declaration
LB_API void lRSMD_getColumnTableName_i(NMParams p);
            ^
TotalCrossVM/src/litebase/NativeMethods.c:4737:4: note: Shadow variable
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
   ^
TotalCrossVM/src/litebase/NativeMethods.c:5034:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, SHORT_TYPE);
   ^
TotalCrossVM/src/litebase/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:5034:4: note: Shadow variable
   psSetNumericParamValue(p, SHORT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:5051:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, INT_TYPE);
   ^
TotalCrossVM/src/litebase/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:5051:4: note: Shadow variable
   psSetNumericParamValue(p, INT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:5068:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, LONG_TYPE);
   ^
TotalCrossVM/src/litebase/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:5068:4: note: Shadow variable
   psSetNumericParamValue(p, LONG_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:5085:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, FLOAT_TYPE);
   ^
TotalCrossVM/src/litebase/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:5085:4: note: Shadow variable
   psSetNumericParamValue(p, FLOAT_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:5102:4: style: Local variable 'psSetNumericParamValue' shadows outer function [shadowFunction]
   psSetNumericParamValue(p, DOUBLE_TYPE);
   ^
TotalCrossVM/src/litebase/PreparedStatement.h:31:6: note: Shadowed declaration
bool psSetNumericParamValue(NMParams p, int32 type);
     ^
TotalCrossVM/src/litebase/NativeMethods.c:5102:4: note: Shadow variable
   psSetNumericParamValue(p, DOUBLE_TYPE);
   ^
TotalCrossVM/src/litebase/NativeMethods.c:249:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, SHORT_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:266:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, INT_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:283:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, LONG_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:300:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, FLOAT_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:317:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, DOUBLE_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:334:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, CHARS_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:351:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, BLOB_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:368:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, DATE_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:386:14: style: Variable 'getByIndex' is assigned a value that is never used. [unreadVariable]
   getByIndex(p, DATETIME_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:435:20: style: Variable 'TC_setObjectLock' is assigned a value that is never used. [unreadVariable]
   TC_setObjectLock(p->retO = create(p->currentContext, TC_getApplicationId(), null), UNLOCKED);
                   ^
TotalCrossVM/src/litebase/NativeMethods.c:1711:9: style: Variable 'LOCKVAR' is assigned a value that is never used. [unreadVariable]
 LOCKVAR(log);
        ^
TotalCrossVM/src/litebase/NativeMethods.c:1728:9: style: Variable 'LOCKVAR' is assigned a value that is never used. [unreadVariable]
 LOCKVAR(log);
        ^
TotalCrossVM/src/litebase/NativeMethods.c:1954:8: style: Unused variable: i [unusedVariable]
 int32 i,
       ^
TotalCrossVM/src/litebase/NativeMethods.c:2891:16: style: Variable 'encDecTables' is assigned a value that is never used. [unreadVariable]
   encDecTables(p, true);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:2907:16: style: Variable 'encDecTables' is assigned a value that is never used. [unreadVariable]
   encDecTables(p, false);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3134:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, SHORT_TYPE);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3152:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, SHORT_TYPE);
              ^
TotalCrossVM/src/litebase/NativeMethods.c:3169:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, INT_TYPE);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3186:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, INT_TYPE);
              ^
TotalCrossVM/src/litebase/NativeMethods.c:3203:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, LONG_TYPE);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3220:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, LONG_TYPE);
              ^
TotalCrossVM/src/litebase/NativeMethods.c:3237:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, FLOAT_TYPE);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3254:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, FLOAT_TYPE);
              ^
TotalCrossVM/src/litebase/NativeMethods.c:3271:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, DOUBLE_TYPE);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3288:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, DOUBLE_TYPE);
              ^
TotalCrossVM/src/litebase/NativeMethods.c:3305:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, CHARS_TYPE);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3322:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, CHARS_TYPE);
              ^
TotalCrossVM/src/litebase/NativeMethods.c:3339:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, UNDEFINED_TYPE);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3357:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, -1);
              ^
TotalCrossVM/src/litebase/NativeMethods.c:3374:16: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
   rsGetByIndex(p, BLOB_TYPE);
               ^
TotalCrossVM/src/litebase/NativeMethods.c:3391:15: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
   rsGetByName(p, BLOB_TYPE);
              ^
TotalCrossVM/src/litebase/NativeMethods.c:3411:14: style: Variable 'getStrings' is assigned a value that is never used. [unreadVariable]
   getStrings(p, p->i32[0]); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
             ^
TotalCrossVM/src/litebase/NativeMethods.c:3430:14: style: Variable 'getStrings' is assigned a value that is never used. [unreadVariable]
   getStrings(p, -1); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
             ^
TotalCrossVM/src/litebase/NativeMethods.c:3447:14: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
 rsGetByIndex(p, DATE_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:3465:13: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
 rsGetByName(p, DATE_TYPE);
            ^
TotalCrossVM/src/litebase/NativeMethods.c:3484:14: style: Variable 'rsGetByIndex' is assigned a value that is never used. [unreadVariable]
 rsGetByIndex(p, DATETIME_TYPE);
             ^
TotalCrossVM/src/litebase/NativeMethods.c:3504:13: style: Variable 'rsGetByName' is assigned a value that is never used. [unreadVariable]
 rsGetByName(p, DATETIME_TYPE);
            ^
TotalCrossVM/src/litebase/NativeMethods.c:4366:30: style: Variable 'lRSMD_getColumnTableName_i' is assigned a value that is never used. [unreadVariable]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
                             ^
TotalCrossVM/src/litebase/NativeMethods.c:4484:30: style: Variable 'lRSMD_getColumnTableName_i' is assigned a value that is never used. [unreadVariable]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
                             ^
TotalCrossVM/src/litebase/NativeMethods.c:4737:30: style: Variable 'lRSMD_getColumnTableName_i' is assigned a value that is never used. [unreadVariable]
   lRSMD_getColumnTableName_i(p); // It already tests if the result set is valid.
                             ^
TotalCrossVM/src/litebase/NativeMethods.c:5034:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, SHORT_TYPE);
                         ^
TotalCrossVM/src/litebase/NativeMethods.c:5051:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, INT_TYPE);
                         ^
TotalCrossVM/src/litebase/NativeMethods.c:5068:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, LONG_TYPE);
                         ^
TotalCrossVM/src/litebase/NativeMethods.c:5085:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, FLOAT_TYPE);
                         ^
TotalCrossVM/src/litebase/NativeMethods.c:5102:26: style: Variable 'psSetNumericParamValue' is assigned a value that is never used. [unreadVariable]
   psSetNumericParamValue(p, DOUBLE_TYPE);
                         ^
TotalCrossVM/src/litebase/NativeMethods.c:23:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_next")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:117:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_setSynced")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:159:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_setNotSynced")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:201:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_close")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:230:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_reset")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:247:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getShort_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:264:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getInt_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:281:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getLong_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:298:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getFloat_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:315:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getDouble_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:332:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getString_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:349:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getBlob_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:366:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getDate_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:384:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRI_getDateTime_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:404:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRI_isNull_i")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:433:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateGetInstance")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:454:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateGetInstance_s")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:501:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateGetInstance_ss")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:533:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_getSourcePath")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:1224:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_exists_s")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:1709:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateGetLogger")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:1726:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateSetLogger_l")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:1945:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lLC_privateProcessLogs_Ssb")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:2562:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lLC_getSlot")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:2580:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lLC_isOpen_s")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:2889:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lLC_encryptTables_ssi")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:2905:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lLC_decryptTables_ssi")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:2922:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getResultSetMetaData")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:2950:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_close")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:2976:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_beforeFirst")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:2997:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_afterLast")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3022:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_first")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3055:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_last")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3088:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_next")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3110:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_prev")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3132:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getShort_i");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3150:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getShort_s");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3167:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getInt_i");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3184:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getInt_s");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3201:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getLong_i");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3218:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getLong_s");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3235:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getFloat_i");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3252:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getFloat_s");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3269:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getDouble_i");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3286:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getDouble_s");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3303:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getChars_i");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3320:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getChars_s");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3337:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getString_i");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3355:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getString_s");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3372:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getBlob_i");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3389:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_getBlob_s");
   ^
TotalCrossVM/src/litebase/NativeMethods.c:3409:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getStrings_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3428:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getStrings")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3445:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getDate_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3463:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getDate_s")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3482:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getDateTime_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3502:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getDateTime_s")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3771:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_setDecimalPlaces_ii")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3819:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_getRowCount")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3847:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_isNull_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3871:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRS_isNull_s")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:3901:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRS_rowToString")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:4010:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnCount")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:4123:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnLabel_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:4164:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnType_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:4253:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnTableName_i")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:4297:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lRSMD_getColumnTableName_s")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:4360:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_hasDefaultValue_i")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:4408:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_hasDefaultValue_s")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:4477:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_isNotNull_i")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:4526:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_isNotNull_s")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:4730:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_getDefaultValue_i")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:4770:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lRSMD_getDefaultValue_s")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:5032:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setShort_is")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:5049:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setInt_ii")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:5066:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setLong_il")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:5083:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setFloat_id")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:5100:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setDouble_id")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:5119:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setString_is")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:5289:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("lPS_setDateTime_id")
 ^
TotalCrossVM/src/litebase/NativeMethods.c:5521:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lPS_close")
   ^
TotalCrossVM/src/litebase/NativeMethods.c:5545:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("lPS_isValid")
   ^
TotalCrossVM/src/litebase/Node.c:31:9: style: The scope of the variable 'key' can be reduced. [variableScope]
   Key* key;
        ^
TotalCrossVM/src/litebase/Node.c:23:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createNode")
 ^
TotalCrossVM/src/litebase/Node.c:58:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeLoad")
 ^
TotalCrossVM/src/litebase/Node.c:98:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeSaveDirtyKey")
 ^
TotalCrossVM/src/litebase/Node.c:123:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeSave")
 ^
TotalCrossVM/src/litebase/Node.c:200:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeSet")
 ^
TotalCrossVM/src/litebase/Node.c:218:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeFindIn")
 ^
TotalCrossVM/src/litebase/Node.c:255:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nodeInsert")
 ^
TotalCrossVM/src/litebase/Node.c:287:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE(delayed ? "nodeSetWriteDelayed on" : "nodeSetWriteDelayed off")
   ^
TotalCrossVM/src/litebase/NormalFile.c:38:12: style: Local variable 'buffer' shadows outer variable [shadowVariable]
      char buffer[1024];
           ^
TotalCrossVM/src/litebase/NormalFile.c:29:10: note: Shadowed declaration
   TCHAR buffer[MAX_PATHNAME];
         ^
TotalCrossVM/src/litebase/NormalFile.c:38:12: note: Shadow variable
      char buffer[1024];
           ^
TotalCrossVM/src/litebase/NormalFile.c:28:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfCreateFile")
 ^
TotalCrossVM/src/litebase/NormalFile.c:94:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfReadBytes")
 ^
TotalCrossVM/src/litebase/NormalFile.c:128:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfWriteBytes")
 ^
TotalCrossVM/src/litebase/NormalFile.c:227:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfSetPos")
 ^
TotalCrossVM/src/litebase/NormalFile.c:244:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("nfRename")
   ^
TotalCrossVM/src/litebase/NormalFile.c:291:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfClose")
 ^
TotalCrossVM/src/litebase/NormalFile.c:339:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("nfRemove")
 ^
TotalCrossVM/src/litebase/NormalFile.c:375:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("refreshCache")
 ^
TotalCrossVM/src/litebase/NormalFile.c:466:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("fileError")
   ^
TotalCrossVM/src/litebase/PlainDB.c:306:45: style:inconclusive: Boolean expression '!plainDB->wasNotSavedCorrectly' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
    *pointer++ = plainDB->isAscii? IS_ASCII | !plainDB->wasNotSavedCorrectly : !plainDB->wasNotSavedCorrectly;
                                            ^
TotalCrossVM/src/litebase/PlainDB.c:306:45: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
    *pointer++ = plainDB->isAscii? IS_ASCII | !plainDB->wasNotSavedCorrectly : !plainDB->wasNotSavedCorrectly;
                                            ^
TotalCrossVM/src/litebase/PlainDB.c:32:9: style: The scope of the variable 'buffer' can be reduced. [variableScope]
   char buffer[DBNAME_SIZE];
        ^
TotalCrossVM/src/litebase/PlainDB.c:31:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("createPlainDB")
   ^
TotalCrossVM/src/litebase/PlainDB.c:80:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainSetRowSize")
 ^
TotalCrossVM/src/litebase/PlainDB.c:98:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainAdd")
 ^
TotalCrossVM/src/litebase/PlainDB.c:118:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainWrite")
 ^
TotalCrossVM/src/litebase/PlainDB.c:137:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainRead")
 ^
TotalCrossVM/src/litebase/PlainDB.c:151:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainRewrite")
 ^
TotalCrossVM/src/litebase/PlainDB.c:166:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainRename")
 ^
TotalCrossVM/src/litebase/PlainDB.c:204:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainWriteMetaData")
 ^
TotalCrossVM/src/litebase/PlainDB.c:245:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainReadMetaData")
 ^
TotalCrossVM/src/litebase/PlainDB.c:286:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainClose")
 ^
TotalCrossVM/src/litebase/PlainDB.c:331:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainRemove")
 ^
TotalCrossVM/src/litebase/PlainDB.c:352:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainSetPos")
 ^
TotalCrossVM/src/litebase/PlainDB.c:381:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("plainShrinkToSize")
 ^
TotalCrossVM/src/litebase/PlainDB.c:749:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("recordNotDeleted")
 ^
TotalCrossVM/src/litebase/PlainDB.c:767:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("loadString")
   ^
TotalCrossVM/src/litebase/PreparedStatement.c:195:29: style: Variable 'string' is assigned a value that is never used. [unreadVariable]
               if (!(string = paramsAsStrs[index] = TC_CharP2JCharP(ptr, length)))
                            ^
TotalCrossVM/src/litebase/PreparedStatement.c:269:39: style: Variable 'paramAsStr[stringLength+2]' is assigned a value that is never used. [unreadVariable]
         paramAsStr[stringLength + 2] = 0;
                                      ^
TotalCrossVM/src/litebase/PreparedStatement.c:289:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("toStringBuffer")
   ^
TotalCrossVM/src/litebase/PreparedStatement.c:331:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resetWhereClause")
 ^
TotalCrossVM/src/litebase/PreparedStatement.c:353:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resetColumnListClause")
 ^
TotalCrossVM/src/litebase/PreparedStatement.c:380:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rearrangeNullsInTable")
 ^
TotalCrossVM/src/litebase/PreparedStatement.c:399:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("testPSClosed")
   ^
TotalCrossVM/src/litebase/ResultSet.c:958:102: warning: Comparison of a boolean expression with an integer other than 0 or 1. [compareBoolExpressionWithInt]
                        if ((ret = sqlBooleanClauseSatisfied(context, whereClause, resultSet, heap)) == -1)
                                                                                                     ^
TotalCrossVM/src/litebase/ResultSet.c:979:99: warning: Comparison of a boolean expression with an integer other than 0 or 1. [compareBoolExpressionWithInt]
                     if ((ret = sqlBooleanClauseSatisfied(context, whereClause, resultSet, heap)) == -1)
                                                                                                  ^
TotalCrossVM/src/litebase/ResultSet.c:998:93: warning: Comparison of a boolean expression with an integer other than 0 or 1. [compareBoolExpressionWithInt]
               if ((ret = sqlBooleanClauseSatisfied(context, whereClause, resultSet, heap)) == -1)
                                                                                            ^
TotalCrossVM/src/litebase/ResultSet.c:166:9: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   if (!(isDeleted = (value & ROW_ATTR_MASK) == ROW_ATTR_DELETED))
        ^
TotalCrossVM/src/litebase/ResultSet.c:182:5: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
 if ((ret = resultSet->pos < rowCountLess1 && plainRead(context, plainDB, ++resultSet->pos)))
    ^
TotalCrossVM/src/litebase/ResultSet.c:232:9: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   if (!(isDeleted = (value & ROW_ATTR_MASK) == ROW_ATTR_DELETED))
        ^
TotalCrossVM/src/litebase/ResultSet.c:248:7: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   if ((ret = resultSet->pos > 0 && plainRead(context, plainDB, --resultSet->pos)))
      ^
TotalCrossVM/src/litebase/ResultSet.c:574:20: style: The scope of the variable 'strings' can be reduced. [variableScope]
         TCObject* strings;
                   ^
TotalCrossVM/src/litebase/ResultSet.c:561:26: style:inconclusive: Function 'getStrings' argument 1 names different: declaration 'p' definition 'params'. [funcArgNamesDifferent]
void getStrings(NMParams params, int32 count) // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
                         ^
TotalCrossVM/src/litebase/ResultSet.h:190:26: note: Function 'getStrings' argument 1 names different: declaration 'p' definition 'params'.
void getStrings(NMParams p, int32 count); // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
                         ^
TotalCrossVM/src/litebase/ResultSet.c:561:26: note: Function 'getStrings' argument 1 names different: declaration 'p' definition 'params'.
void getStrings(NMParams params, int32 count) // juliana@201_2: corrected a bug that would let garbage in the number of records parameter.
                         ^
TotalCrossVM/src/litebase/ResultSet.c:29:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("freeResultSet")
 ^
TotalCrossVM/src/litebase/ResultSet.c:57:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createResultSet")
 ^
TotalCrossVM/src/litebase/ResultSet.c:77:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createSimpleResultSet")
 ^
TotalCrossVM/src/litebase/ResultSet.c:107:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("createResultSetForSelect")
 ^
TotalCrossVM/src/litebase/ResultSet.c:128:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resultSetNext")
 ^
TotalCrossVM/src/litebase/ResultSet.c:196:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resultSetPrev")
 ^
TotalCrossVM/src/litebase/ResultSet.c:263:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("rsGetShort")
   ^
TotalCrossVM/src/litebase/ResultSet.c:279:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetInt")
 ^
TotalCrossVM/src/litebase/ResultSet.c:300:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetLong")
 ^
TotalCrossVM/src/litebase/ResultSet.c:316:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetFloat")
 ^
TotalCrossVM/src/litebase/ResultSet.c:332:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetDouble")
 ^
TotalCrossVM/src/litebase/ResultSet.c:352:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetChars")
 ^
TotalCrossVM/src/litebase/ResultSet.c:405:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetInt")
 ^
TotalCrossVM/src/litebase/ResultSet.c:426:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetBlob")
 ^
TotalCrossVM/src/litebase/ResultSet.c:563:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getStrings")
 ^
TotalCrossVM/src/litebase/ResultSet.c:702:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetByIndex")
 ^
TotalCrossVM/src/litebase/ResultSet.c:727:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rsGetByName")
 ^
TotalCrossVM/src/litebase/ResultSet.c:890:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("verifyRSState")
 ^
TotalCrossVM/src/litebase/ResultSet.c:917:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getNextRecord")
 ^
TotalCrossVM/src/litebase/ResultSet.c:1019:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("formatDate")
 ^
TotalCrossVM/src/litebase/ResultSet.c:1064:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("formatTime")
 ^
TotalCrossVM/src/litebase/ResultSet.c:1113:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("zeroPad")
 ^
TotalCrossVM/src/litebase/ResultSet.c:1130:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("identHashCode")
 ^
TotalCrossVM/src/litebase/ResultSet.c:1322:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("loadPlainDBAndPosition")
   ^
TotalCrossVM/src/litebase/ResultSet.c:1347:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("testRSClosed")
   ^
TotalCrossVM/src/litebase/SQLValue.c:348:1: style: Label 'finish' is not used. [unusedLabel]
finish : ;
^
TotalCrossVM/src/litebase/SQLValue.c:532:1: style: Label 'finish' is not used. [unusedLabel]
finish : ;
^
TotalCrossVM/src/litebase/SQLValue.c:21:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("newSQLValues")
 ^
TotalCrossVM/src/litebase/TCVMLib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/litebase/TCVMLib.c:181:1: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
finish: ;
^
TotalCrossVM/src/litebase/Table.c:2612:13: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
            values[i] = &oldValues[i];
            ^
TotalCrossVM/src/litebase/Table.c:730:38: style:inconclusive: Boolean expression '!table->isModified' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
 *ptr++ = plainDB->isAscii? IS_ASCII | !table->isModified : !table->isModified; // juliana@226_4: table is not saved correctly yet if modified.
                                     ^
TotalCrossVM/src/litebase/Table.c:730:38: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 *ptr++ = plainDB->isAscii? IS_ASCII | !table->isModified : !table->isModified; // juliana@226_4: table is not saved correctly yet if modified.
                                     ^
TotalCrossVM/src/litebase/Table.c:1260:8: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   if ((result = types[0] == DATETIME_TYPE) || result == LONG_TYPE || result == DOUBLE_TYPE)
       ^
TotalCrossVM/src/litebase/Table.c:41:14: style: The scope of the variable 'columns' can be reduced. [variableScope]
      uint8* columns;
             ^
TotalCrossVM/src/litebase/Table.c:126:11: style: The scope of the variable 'idxColumns' can be reduced. [variableScope]
   uint8* idxColumns;
          ^
TotalCrossVM/src/litebase/Table.c:1290:15: style: The scope of the variable 'mid' can be reduced. [variableScope]
   SQLValue** mid;
              ^
TotalCrossVM/src/litebase/Table.c:2200:9: style: The scope of the variable 'changePos' can be reduced. [variableScope]
   bool changePos,
        ^
TotalCrossVM/src/litebase/Table.c:2203:9: style: The scope of the variable 'hasIndex' can be reduced. [variableScope]
        hasIndex,
        ^
TotalCrossVM/src/litebase/Table.c:2204:9: style: The scope of the variable 'isNullVOld' can be reduced. [variableScope]
        isNullVOld,
        ^
TotalCrossVM/src/litebase/Table.c:2205:9: style: The scope of the variable 'isNull' can be reduced. [variableScope]
        isNull;
        ^
TotalCrossVM/src/litebase/Table.c:2218:11: style: The scope of the variable 'idx' can be reduced. [variableScope]
   Index* idx;
          ^
TotalCrossVM/src/litebase/Table.c:2385:12: style: The scope of the variable 'remove' can be reduced. [variableScope]
      bool remove, // juliana@230_43
           ^
TotalCrossVM/src/litebase/Table.c:2386:12: style: The scope of the variable 'change' can be reduced. [variableScope]
           change; // juliana@252_2: corrected a bug of possible composed index corruption when updating or deleting data.
           ^
TotalCrossVM/src/litebase/Table.c:3083:9: style: The scope of the variable 'name' can be reduced. [variableScope]
   char name[DBNAME_SIZE];
        ^
TotalCrossVM/src/litebase/Table.c:496:21: style: Local variable 'buffer' shadows outer variable [shadowVariable]
               char buffer[1024];
                    ^
TotalCrossVM/src/litebase/Table.c:321:10: note: Shadowed declaration
   uint8 buffer[512]; // A buffer for small metadata.
         ^
TotalCrossVM/src/litebase/Table.c:496:21: note: Shadow variable
               char buffer[1024];
                    ^
TotalCrossVM/src/litebase/Table.c:643:21: style: Local variable 'buffer' shadows outer variable [shadowVariable]
               char buffer[1024];
                    ^
TotalCrossVM/src/litebase/Table.c:321:10: note: Shadowed declaration
   uint8 buffer[512]; // A buffer for small metadata.
         ^
TotalCrossVM/src/litebase/Table.c:643:21: note: Shadow variable
               char buffer[1024];
                    ^
TotalCrossVM/src/litebase/Table.c:27:14: style: Variable 'idx' is assigned a value that is never used. [unreadVariable]
   int32 idx = -1,
             ^
TotalCrossVM/src/litebase/Table.c:3284:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/Table.c:26:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("verifyIfIndexAlreadyExists")
 ^
TotalCrossVM/src/litebase/Table.c:91:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("driverDropIndex") // Column does not have an index.
   ^
TotalCrossVM/src/litebase/Table.c:123:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("driverDropComposedIndex")
 ^
TotalCrossVM/src/litebase/Table.c:189:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("deleteAllIndexes")
 ^
TotalCrossVM/src/litebase/Table.c:234:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("computeColumnOffsets")
 ^
TotalCrossVM/src/litebase/Table.c:862:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("tableSetMetaData")
 ^
TotalCrossVM/src/litebase/Table.c:913:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getTSMDSize")
 ^
TotalCrossVM/src/litebase/Table.c:942:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getStringsTotalSize")
 ^
TotalCrossVM/src/litebase/Table.c:999:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("computeComposedIndicesTotalSize")
   ^
TotalCrossVM/src/litebase/Table.c:1024:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("reorder")
 ^
TotalCrossVM/src/litebase/Table.c:1251:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("compareSortRecords")
 ^
TotalCrossVM/src/litebase/Table.c:1289:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("sortRecords")
 ^
TotalCrossVM/src/litebase/Table.c:1357:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("radixSort")
 ^
TotalCrossVM/src/litebase/Table.c:1690:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("renameTable")
   ^
TotalCrossVM/src/litebase/Table.c:1758:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("renameColumnTable")
   ^
TotalCrossVM/src/litebase/Table.c:2017:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexCreateIndex")
 ^
TotalCrossVM/src/litebase/Table.c:2057:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("indexCreateComposedIndex")
 ^
TotalCrossVM/src/litebase/Table.c:2112:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("readRecord")
 ^
TotalCrossVM/src/litebase/Table.c:2530:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("writeRSRecord")
 ^
TotalCrossVM/src/litebase/Table.c:2567:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("checkPrimaryKey")
 ^
TotalCrossVM/src/litebase/Table.c:2646:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("verifyNullValues")
 ^
TotalCrossVM/src/litebase/Table.c:2788:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("computeCRC32")
   ^
TotalCrossVM/src/litebase/Table.c:2801:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("make_crc_table")
   ^
TotalCrossVM/src/litebase/Table.c:2830:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("resetAuxRowId")
 ^
TotalCrossVM/src/litebase/Table.c:2853:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("rowUpdated")
 ^
TotalCrossVM/src/litebase/Table.c:2868:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("freeTableHT")
   ^
TotalCrossVM/src/litebase/Table.c:2883:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("freeTable")
 ^
TotalCrossVM/src/litebase/Table.c:2966:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("getTableColValue")
   ^
TotalCrossVM/src/litebase/Table.c:2986:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("tableExistsByName")
   ^
TotalCrossVM/src/litebase/Table.c:3025:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getDiskTableName")
 ^
TotalCrossVM/src/litebase/Table.c:3055:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getTableFromName")
 ^
TotalCrossVM/src/litebase/Table.c:3144:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("readString")
   ^
TotalCrossVM/src/litebase/Table.c:3163:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("readStringArray")
 ^
TotalCrossVM/src/litebase/Table.c:3182:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("writeString")
 ^
TotalCrossVM/src/litebase/Table.c:3200:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("writeStringArray")
 ^
TotalCrossVM/src/litebase/Table.c:3219:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("writeString16")
 ^
TotalCrossVM/src/litebase/Table.c:3234:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("setModified")
   ^
TotalCrossVM/src/litebase/Table.c:3255:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("randBetween")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:312:9: style: The scope of the variable 'c' can be reduced. [variableScope]
   char c;
        ^
TotalCrossVM/src/litebase/UtilsLB.c:366:9: style: The scope of the variable 'c' can be reduced. [variableScope]
   char c;
        ^
TotalCrossVM/src/litebase/UtilsLB.c:596:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
TotalCrossVM/src/litebase/UtilsLB.c:25:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("str16CompareTo")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:71:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("str16StartsWith")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:101:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("str16IndexOf")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:189:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getDaysInMonth")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:205:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("verifyDate")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:229:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("strLeftTrim")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:243:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("strTrim")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:264:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("tstrTrim")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:286:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("str16LeftTrim")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:303:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("testAndPrepareDate")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:354:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("testAndPrepareTime")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:414:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("testAndPrepareDateAndTime")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:457:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("newIntVector")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:474:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("IntVectorAdd")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:497:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("shortVector2Array")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:513:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("shortVector2Array")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:528:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("newIntBits")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:592:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("compareRecords")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:624:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("setBit")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:640:2: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 TRACE("getFullFileName")
 ^
TotalCrossVM/src/litebase/UtilsLB.c:663:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("getTimeLong")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:678:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("JCharPStartsWithCharP")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:702:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("JCharPEqualsCharP")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:728:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("getCurrentPath")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:746:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("date2JCharP")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:767:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("dateTime2JCharP")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:785:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("str2short")
   ^
TotalCrossVM/src/litebase/UtilsLB.c:805:4: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
   TRACE("str2float")
   ^
TotalCrossVM/src/litebase/parser/LitebaseLex.c:454:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/parser/LitebaseMessage.c:613:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/parser/LitebaseMessage.c:902:1: style: Label 'finish' is not used. [unusedLabel]
finish : ;
^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:1353:9: style: The scope of the variable 'direction' can be reduced. [variableScope]
   bool direction;
        ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:102:73: style:inconclusive: Function 'setOperandType' argument 2 names different: declaration 'parse' definition 'parser'. [funcArgNamesDifferent]
SQLBooleanClauseTree* setOperandType(int32 operandType, LitebaseParser* parser)
                                                                        ^
TotalCrossVM/src/litebase/parser/LitebaseParser.h:55:73: note: Function 'setOperandType' argument 2 names different: declaration 'parse' definition 'parser'.
SQLBooleanClauseTree* setOperandType(int32 operandType, LitebaseParser* parse);
                                                                        ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:102:73: note: Function 'setOperandType' argument 2 names different: declaration 'parse' definition 'parser'.
SQLBooleanClauseTree* setOperandType(int32 operandType, LitebaseParser* parser)
                                                                        ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:124:23: style: Local variable 'field' shadows outer function [shadowFunction]
   SQLResultSetField* field = parser->auxField;
                      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:124:23: note: Shadow variable
   SQLResultSetField* field = parser->auxField;
                      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:259:42: style: Local variable 'field' shadows outer function [shadowFunction]
                     SQLFieldDefinition* field = parser->fieldList[0];
                                         ^
TotalCrossVM/src/litebase/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:259:42: note: Shadow variable
                     SQLFieldDefinition* field = parser->fieldList[0];
                                         ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:859:26: style: Local variable 'field' shadows outer function [shadowFunction]
      SQLResultSetField* field = parser->auxField;
                         ^
TotalCrossVM/src/litebase/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:859:26: note: Shadow variable
      SQLResultSetField* field = parser->auxField;
                         ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:897:26: style: Local variable 'field' shadows outer function [shadowFunction]
      SQLResultSetField* field;
                         ^
TotalCrossVM/src/litebase/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:897:26: note: Shadow variable
      SQLResultSetField* field;
                         ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:1088:23: style: Local variable 'field' shadows outer function [shadowFunction]
   SQLResultSetField* field;
                      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:1088:23: note: Shadow variable
   SQLResultSetField* field;
                      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:1209:23: style: Local variable 'field' shadows outer function [shadowFunction]
   SQLResultSetField* field = parser->auxField = initSQLResultSetField(parser->heap);
                      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.h:213:7: note: Shadowed declaration
int32 field(int32 token, LitebaseParser* parser);
      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:1209:23: note: Shadow variable
   SQLResultSetField* field = parser->auxField = initSQLResultSetField(parser->heap);
                      ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:707:18: style: Variable 'token' is assigned a value that is never used. [unreadVariable]
      if ((token = expression(yylex(parser), parser)) != TK_CLOSE)
                 ^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:1426:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/parser/LitebaseParser.c:1444:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/litebase/parser/SQLBooleanClause.c:506:26: style: The scope of the variable 'tree' can be reduced. [variableScope]
   SQLBooleanClauseTree* tree;
                         ^
TotalCrossVM/src/litebase/parser/SQLBooleanClause.c:514:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
TotalCrossVM/src/litebase/parser/SQLBooleanClause.c:637:26: style: The scope of the variable 'field' can be reduced. [variableScope]
      SQLResultSetField* field;
                         ^
TotalCrossVM/src/litebase/parser/SQLBooleanClause.c:673:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
TotalCrossVM/src/litebase/parser/SQLBooleanClause.c:779:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
TotalCrossVM/src/litebase/parser/SQLBooleanClauseTree.c:862:24: warning: Comparison of a boolean expression with an integer. [compareBoolExpressionWithInt]
         return result < 0;
                       ^
TotalCrossVM/src/litebase/parser/SQLBooleanClauseTree.c:864:24: warning: Comparison of a boolean expression with an integer. [compareBoolExpressionWithInt]
         return result >= 0;
                       ^
TotalCrossVM/src/litebase/parser/SQLBooleanClauseTree.c:866:24: warning: Comparison of a boolean expression with an integer. [compareBoolExpressionWithInt]
         return result <= 0;
                       ^
TotalCrossVM/src/litebase/parser/SQLColumnListClause.c:166:22: style: The scope of the variable 'compIndex' can be reduced. [variableScope]
      ComposedIndex* compIndex;
                     ^
TotalCrossVM/src/litebase/parser/SQLDeleteStatement.c:376:4: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
   heapDestroy(heap);
   ^
TotalCrossVM/src/litebase/parser/SQLInsertStatement.c:110:14: style: The scope of the variable 'record' can be reduced. [variableScope]
   SQLValue* record;
             ^
TotalCrossVM/src/litebase/parser/SQLInsertStatement.c:162:12: style: The scope of the variable 'record' can be reduced. [variableScope]
 SQLValue* record;
           ^
TotalCrossVM/src/litebase/parser/SQLInsertStatement.c:158:111: style:inconclusive: Function 'setStrBlobParamValueIns' argument 5 names different: declaration 'len' definition 'length'. [funcArgNamesDifferent]
bool setStrBlobParamValueIns(Context context, SQLInsertStatement* insertStmt, int32 index, VoidP value, int32 length, bool isStr)
                                                                                                              ^
TotalCrossVM/src/litebase/parser/SQLInsertStatement.h:51:111: note: Function 'setStrBlobParamValueIns' argument 5 names different: declaration 'len' definition 'length'.
bool setStrBlobParamValueIns(Context context, SQLInsertStatement* insertStmt, int32 index, VoidP value, int32 len, bool isStr);
                                                                                                              ^
TotalCrossVM/src/litebase/parser/SQLInsertStatement.c:158:111: note: Function 'setStrBlobParamValueIns' argument 5 names different: declaration 'len' definition 'length'.
bool setStrBlobParamValueIns(Context context, SQLInsertStatement* insertStmt, int32 index, VoidP value, int32 length, bool isStr)
                                                                                                              ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:1303:43: style:inconclusive: Boolean expression 'hasComposedIndex' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
      hasComposedIndex = hasComposedIndex | (table->numberComposedIndexes > 0);
                                          ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:1510:18: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
            if (!(isMatch = (op = relationalOps[i]) == OP_PAT_MATCH_NOT_LIKE || op == OP_PAT_MATCH_LIKE)
                 ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:2391:59: style: Condition 'verifyWhereCondition' is always true [knownConditionTrueFalse]
                     if (resultSet->auxRowsBitmap.size && verifyWhereCondition && whereClause)
                                                          ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:2376:27: note: Assuming that condition 'verifyWhereCondition' is not redundant
   if (rowsBitmap.size && verifyWhereCondition)
                          ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:2391:59: note: Condition 'verifyWhereCondition' is always true
                     if (resultSet->auxRowsBitmap.size && verifyWhereCondition && whereClause)
                                                          ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:2551:16: style: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
               return -1;
               ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:26:23: style: The scope of the variable 'listClause' can be reduced. [variableScope]
 SQLColumnListClause* listClause;
                      ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:349:9: style: The scope of the variable 'table' can be reduced. [variableScope]
 Table *table;
        ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:381:11: style: The scope of the variable 'tableAux1' can be reduced. [variableScope]
   Table* tableAux1;
          ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:456:9: style: The scope of the variable 'table' can be reduced. [variableScope]
 Table* table;
        ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:504:21: style: The scope of the variable 'field1' can be reduced. [variableScope]
 SQLResultSetField* field1;
                    ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:676:17: style: The scope of the variable 'table' can be reduced. [variableScope]
         Table* table;
                ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:1331:20: style: The scope of the variable 'appliedComposedIndexes' can be reduced. [variableScope]
   ComposedIndex** appliedComposedIndexes;
                   ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:1398:5: style: The scope of the variable 'isCI' can be reduced. [variableScope]
    isCI, // has composed index?
    ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:1399:7: style: The scope of the variable 'isMatch' can be reduced. [variableScope]
      isMatch;
      ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:1647:14: style: The scope of the variable 'value' can be reduced. [variableScope]
   SQLValue* value;
             ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:1800:10: style: The scope of the variable 'columnTypes' can be reduced. [variableScope]
   int8* columnTypes;
         ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:2034:23: style: The scope of the variable 'field' can be reduced. [variableScope]
   SQLResultSetField* field;
                      ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:884:17: style: Local variable 'allRowsBitmap' shadows outer variable [shadowVariable]
         uint8* allRowsBitmap = tempTable1->allRowsBitmap;
                ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:646:11: note: Shadowed declaration
   uint8* allRowsBitmap;
          ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:884:17: note: Shadow variable
         uint8* allRowsBitmap = tempTable1->allRowsBitmap;
                ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:353:19: style: Variable 'table' is assigned a value that is never used. [unreadVariable]
      if (!(table = tableList[i]->table = getTable(context, driver, tableList[i]->tableName)))
                  ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:1907:40: style: Variable 'auxTable' is assigned a value that is never used. [unreadVariable]
               currentTable = auxTable = null;
                                       ^
TotalCrossVM/src/litebase/parser/SQLSelectStatement.c:2262:12: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
       ret = NO_RECORD,
           ^
TotalCrossVM/src/litebase/parser/SQLUpdateStatement.c:181:12: style: The scope of the variable 'record' can be reduced. [variableScope]
 SQLValue* record;
           ^
TotalCrossVM/src/litebase/parser/SQLUpdateStatement.c:240:12: style: The scope of the variable 'record' can be reduced. [variableScope]
 SQLValue* record;
           ^
TotalCrossVM/src/litebase/parser/SQLUpdateStatement.c:23:94: style:inconclusive: Function 'initSQLUpdateStatement' argument 3 names different: declaration 'parse' definition 'parser'. [funcArgNamesDifferent]
SQLUpdateStatement* initSQLUpdateStatement(Context context, TCObject driver, LitebaseParser* parser, bool isPrepared)
                                                                                             ^
TotalCrossVM/src/litebase/parser/SQLUpdateStatement.h:26:94: note: Function 'initSQLUpdateStatement' argument 3 names different: declaration 'parse' definition 'parser'.
SQLUpdateStatement* initSQLUpdateStatement(Context context, TCObject driver, LitebaseParser* parse, bool isPrepared);
                                                                                             ^
TotalCrossVM/src/litebase/parser/SQLUpdateStatement.c:23:94: note: Function 'initSQLUpdateStatement' argument 3 names different: declaration 'parse' definition 'parser'.
SQLUpdateStatement* initSQLUpdateStatement(Context context, TCObject driver, LitebaseParser* parser, bool isPrepared)
                                                                                             ^
TotalCrossVM/src/minizip/ioapi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/minizip/ioapi.c:80:47: style: Variable 'p_filefunc64_32->zfile_func64.zerror_file' is reassigned a value before the old one has been used. [redundantAssignment]
    p_filefunc64_32->zfile_func64.zerror_file = p_filefunc32->zerror_file;
                                              ^
TotalCrossVM/src/minizip/ioapi.c:74:47: note: p_filefunc64_32->zfile_func64.zerror_file is assigned
    p_filefunc64_32->zfile_func64.zerror_file = p_filefunc32->zerror_file;
                                              ^
TotalCrossVM/src/minizip/ioapi.c:80:47: note: p_filefunc64_32->zfile_func64.zerror_file is overwritten
    p_filefunc64_32->zfile_func64.zerror_file = p_filefunc32->zerror_file;
                                              ^
TotalCrossVM/src/minizip/ioapi.h:135:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef voidpf   (ZCALLBACK *open_file_func)      OF((voidpf opaque, const char* filename, int mode));
^
TotalCrossVM/src/minizip/ioapi.h:136:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef uLong    (ZCALLBACK *read_file_func)      OF((voidpf opaque, voidpf stream, void* buf, uLong size));
^
TotalCrossVM/src/minizip/ioapi.h:137:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef uLong    (ZCALLBACK *write_file_func)     OF((voidpf opaque, voidpf stream, const void* buf, uLong size));
^
TotalCrossVM/src/minizip/ioapi.h:138:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef int      (ZCALLBACK *close_file_func)     OF((voidpf opaque, voidpf stream));
^
TotalCrossVM/src/minizip/ioapi.h:139:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef int      (ZCALLBACK *testerror_file_func) OF((voidpf opaque, voidpf stream));
^
TotalCrossVM/src/minizip/ioapi.h:141:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef long     (ZCALLBACK *tell_file_func)      OF((voidpf opaque, voidpf stream));
^
TotalCrossVM/src/minizip/ioapi.h:142:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef long     (ZCALLBACK *seek_file_func)      OF((voidpf opaque, voidpf stream, uLong offset, int origin));
^
TotalCrossVM/src/minizip/ioapi.h:158:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef ZPOS64_T (ZCALLBACK *tell64_file_func)    OF((voidpf opaque, voidpf stream));
^
TotalCrossVM/src/minizip/ioapi.h:159:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef long     (ZCALLBACK *seek64_file_func)    OF((voidpf opaque, voidpf stream, ZPOS64_T offset, int origin));
^
TotalCrossVM/src/minizip/ioapi.h:160:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef voidpf   (ZCALLBACK *open64_file_func)    OF((voidpf opaque, const void* filename, int mode));
^
TotalCrossVM/src/minizip/ioapi.c:88:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static voidpf  ZCALLBACK fopen_file_func OF((voidpf opaque, const char* filename, int mode));
^
TotalCrossVM/src/minizip/ioapi.c:89:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uLong   ZCALLBACK fread_file_func OF((voidpf opaque, voidpf stream, void* buf, uLong size));
^
TotalCrossVM/src/minizip/ioapi.c:90:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uLong   ZCALLBACK fwrite_file_func OF((voidpf opaque, voidpf stream, const void* buf,uLong size));
^
TotalCrossVM/src/minizip/ioapi.c:91:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static ZPOS64_T ZCALLBACK ftell64_file_func OF((voidpf opaque, voidpf stream));
^
TotalCrossVM/src/minizip/ioapi.c:92:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static long    ZCALLBACK fseek64_file_func OF((voidpf opaque, voidpf stream, ZPOS64_T offset, int origin));
^
TotalCrossVM/src/minizip/ioapi.c:93:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static int     ZCALLBACK fclose_file_func OF((voidpf opaque, voidpf stream));
^
TotalCrossVM/src/minizip/ioapi.c:94:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static int     ZCALLBACK ferror_file_func OF((voidpf opaque, voidpf stream));
^
TotalCrossVM/src/minizip/ioapi.c:242:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static voidpf ZCALLBACK fopen_file_func (voidpf opaque, const char* filename, int mode)
^
TotalCrossVM/src/minizip/ioapi.c:260:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static voidpf ZCALLBACK fopen64_file_func (voidpf opaque, const void* filename, int mode)
^
TotalCrossVM/src/minizip/ioapi.c:279:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uLong ZCALLBACK fread_file_func (voidpf opaque, voidpf stream, void* buf, uLong size)
^
TotalCrossVM/src/minizip/ioapi.c:286:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uLong ZCALLBACK fwrite_file_func (voidpf opaque, voidpf stream, const void* buf, uLong size)
^
TotalCrossVM/src/minizip/ioapi.c:293:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static long ZCALLBACK ftell_file_func (voidpf opaque, voidpf stream)
^
TotalCrossVM/src/minizip/ioapi.c:301:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static ZPOS64_T ZCALLBACK ftell64_file_func (voidpf opaque, voidpf stream)
^
TotalCrossVM/src/minizip/ioapi.c:308:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static long ZCALLBACK fseek_file_func (voidpf  opaque, voidpf stream, uLong offset, int origin)
^
TotalCrossVM/src/minizip/ioapi.c:331:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static long ZCALLBACK fseek64_file_func (voidpf  opaque, voidpf stream, ZPOS64_T offset, int origin)
^
TotalCrossVM/src/minizip/ioapi.c:357:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static int ZCALLBACK fclose_file_func (voidpf opaque, voidpf stream)
^
TotalCrossVM/src/minizip/ioapi.c:364:0: information: Skipping configuration 'CALLBACK;USEWINDOWS_CALLBACK;WIN32;WINDOWS;_WIN32;_WINDOWS' since the value of 'CALLBACK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static int ZCALLBACK ferror_file_func (voidpf opaque, voidpf stream)
^
TotalCrossVM/src/minizip/ioapi.h:158:1: error: syntax error [syntaxError]
typedef ZPOS64_T (ZCALLBACK *tell64_file_func)    OF((voidpf opaque, voidpf stream));
^
TotalCrossVM/src/minizip/unzip.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/minizip/unzip.c:617:25: style: Condition 'unz_copyright[0]!=' '' is always false [knownConditionTrueFalse]
    if (unz_copyright[0]!=' ')
                        ^
TotalCrossVM/src/minizip/unzip.c:1055:63: style: Local variable 'uL' shadows outer variable [shadowVariable]
                                                        uLong uL;
                                                              ^
TotalCrossVM/src/minizip/unzip.c:910:11: note: Shadowed declaration
    uLong uL;
          ^
TotalCrossVM/src/minizip/unzip.c:1055:63: note: Shadow variable
                                                        uLong uL;
                                                              ^
TotalCrossVM/src/minizip/unzip.c:1552:12: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
        err=UNZ_BADZIPFILE;
           ^
TotalCrossVM/src/minizip/zip.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/minizip/zip.c:1225:26: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
        if(zi->ci.method == Z_DEFLATED)
                         ^
TotalCrossVM/src/minizip/zip.c:1222:41: note: outer condition: zi->ci.method==Z_DEFLATED
    if ((err==ZIP_OK) && (zi->ci.method == Z_DEFLATED) && (!zi->ci.raw))
                                        ^
TotalCrossVM/src/minizip/zip.c:1225:26: note: identical inner condition: zi->ci.method==Z_DEFLATED
        if(zi->ci.method == Z_DEFLATED)
                         ^
TotalCrossVM/src/minizip/zip.c:1051:11: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (short)DataSize,2);
          ^
TotalCrossVM/src/minizip/zip.c:1050:11: note: err is assigned
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (short)HeaderID,2);
          ^
TotalCrossVM/src/minizip/zip.c:1051:11: note: err is overwritten
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (short)DataSize,2);
          ^
TotalCrossVM/src/minizip/zip.c:1053:11: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (ZPOS64_T)UncompressedSize,8);
          ^
TotalCrossVM/src/minizip/zip.c:1051:11: note: err is assigned
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (short)DataSize,2);
          ^
TotalCrossVM/src/minizip/zip.c:1053:11: note: err is overwritten
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (ZPOS64_T)UncompressedSize,8);
          ^
TotalCrossVM/src/minizip/zip.c:1054:11: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (ZPOS64_T)CompressedSize,8);
          ^
TotalCrossVM/src/minizip/zip.c:1053:11: note: err is assigned
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (ZPOS64_T)UncompressedSize,8);
          ^
TotalCrossVM/src/minizip/zip.c:1054:11: note: err is overwritten
      err = zip64local_putValue(&zi->z_filefunc, zi->filestream, (ZPOS64_T)CompressedSize,8);
          ^
TotalCrossVM/src/minizip/zip.c:1556:36: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
                                err=deflate(&zi->ci.stream,  Z_FINISH);
                                   ^
TotalCrossVM/src/minizip/zip.c:1551:53: note: err is assigned
                                                err = ZIP_ERRNO;
                                                    ^
TotalCrossVM/src/minizip/zip.c:1556:36: note: err is overwritten
                                err=deflate(&zi->ci.stream,  Z_FINISH);
                                   ^
TotalCrossVM/src/minizip/zip.c:1970:9: style: The scope of the variable 'header' can be reduced. [variableScope]
  short header;
        ^
TotalCrossVM/src/minizip/zip.c:1971:9: style: The scope of the variable 'dataSize' can be reduced. [variableScope]
  short dataSize;
        ^
TotalCrossVM/src/minizip/zip.c:1083:6: warning: Unused variable value 'crcForCrypting' [constStatement]
    (crcForCrypting);
     ^
TotalCrossVM/src/minizip/zip.c:1696:11: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
        p += 8;
          ^
TotalCrossVM/src/minizip/zip.c:1575:12: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
        err=BZ2_bzCompress(&zi->ci.bstream,  BZ_FINISH);
           ^
TotalCrossVM/src/minizip/zip.c:1570:17: note: err is assigned
            err = ZIP_ERRNO;
                ^
TotalCrossVM/src/minizip/zip.c:1575:12: note: err is overwritten
        err=BZ2_bzCompress(&zi->ci.bstream,  BZ_FINISH);
           ^
TotalCrossVM/src/nm/db/NativeDB.c:576:12: style: The scope of the variable 'str' can be reduced. [variableScope]
    JChar *str;
           ^
TotalCrossVM/src/nm/db/NativeDB.c:596:11: style: The scope of the variable 'bytes' can be reduced. [variableScope]
    int8 *bytes;
          ^
TotalCrossVM/src/nm/db/NativeDB.c:650:11: style: The scope of the variable 'zTableName' can be reduced. [variableScope]
    char *zTableName, *zColumnName;
          ^
TotalCrossVM/src/nm/db/NativeDB.c:650:24: style: The scope of the variable 'zColumnName' can be reduced. [variableScope]
    char *zTableName, *zColumnName;
                       ^
TotalCrossVM/src/nm/db/NativeDB.c:657:11: style: The scope of the variable 'ab' can be reduced. [variableScope]
    int8* ab;
          ^
TotalCrossVM/src/nm/db/NativeDB.c:736:19: style: The scope of the variable 'pBackup' can be reduced. [variableScope]
  sqlite3_backup *pBackup;    /* Backup handle used to copy data */
                  ^
TotalCrossVM/src/nm/db/NativeDB.c:784:19: style: The scope of the variable 'pBackup' can be reduced. [variableScope]
  sqlite3_backup *pBackup;    /* Backup handle used to copy data */
                  ^
TotalCrossVM/src/nm/io/File.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/nm/io/File.c:156:17: style: The scope of the variable 'fref' can be reduced. [variableScope]
   NATIVE_FILE* fref;
                ^
TotalCrossVM/src/nm/io/File.c:312:17: style: The scope of the variable 'fref' can be reduced. [variableScope]
   NATIVE_FILE* fref;
                ^
TotalCrossVM/src/nm/io/posix/File_c.h:349:1: style: Label 'error' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
error:
^
TotalCrossVM/src/nm/io/File.c:528:35: error: Uninitialized variable: *fref [uninitvar]
            if ((err = fileRename(*fref, slot, szCurrPath, szNewPath, mode != DONT_OPEN)) != NO_ERROR)
                                  ^
TotalCrossVM/src/nm/io/File.c:116:21: style: Variable 'fileRef' is assigned a value that is never used. [unreadVariable]
   TCObject fileRef = null;
                    ^
TotalCrossVM/src/nm/io/File.c:117:25: style: Variable 'natFile' is assigned a value that is never used. [unreadVariable]
   NATIVE_FILE* natFile = null;
                        ^
TotalCrossVM/src/nm/io/File.c:487:16: style: Variable 'frefDummy' is not assigned a value. [unassignedVariable]
   NATIVE_FILE frefDummy;
               ^
TotalCrossVM/src/nm/io/File_test.h:111:21: style: Variable 'p.currentContext' is reassigned a value before the old one has been used. [redundantAssignment]
   p.currentContext = tempDirParams.currentContext = currentContext;
                    ^
TotalCrossVM/src/nm/io/File_test.h:108:21: note: p.currentContext is assigned
   p.currentContext = currentContext;
                    ^
TotalCrossVM/src/nm/io/File_test.h:111:21: note: p.currentContext is overwritten
   p.currentContext = tempDirParams.currentContext = currentContext;
                    ^
TotalCrossVM/src/nm/io/File_test.h:747:13: warning: Redundant assignment of 'p.obj[0]' to itself. [selfAssignment]
   p.obj[0] = p.obj[0];
            ^
TotalCrossVM/src/nm/io/File_test.h:756:13: warning: Redundant assignment of 'p.obj[0]' to itself. [selfAssignment]
   p.obj[0] = p.obj[0];
            ^
TotalCrossVM/src/nm/io/File_test.h:826:15: warning: Redundant assignment of 'wbP.obj[0]' to itself. [selfAssignment]
   wbP.obj[0] = wbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:870:15: warning: Redundant assignment of 'wbP.obj[0]' to itself. [selfAssignment]
   wbP.obj[0] = wbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:880:15: warning: Redundant assignment of 'wbP.obj[0]' to itself. [selfAssignment]
   wbP.obj[0] = wbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:891:15: warning: Redundant assignment of 'wbP.obj[0]' to itself. [selfAssignment]
   wbP.obj[0] = wbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:900:15: warning: Redundant assignment of 'wbP.obj[0]' to itself. [selfAssignment]
   wbP.obj[0] = wbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:911:15: warning: Redundant assignment of 'wbP.obj[0]' to itself. [selfAssignment]
   wbP.obj[0] = wbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:922:15: warning: Redundant assignment of 'wbP.obj[0]' to itself. [selfAssignment]
   wbP.obj[0] = wbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:937:15: warning: Redundant assignment of 'wbP.obj[0]' to itself. [selfAssignment]
   wbP.obj[0] = wbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:969:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:979:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:990:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1000:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1011:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1022:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1033:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1044:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1054:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1062:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1073:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:1079:15: warning: Redundant assignment of 'rbP.obj[0]' to itself. [selfAssignment]
   rbP.obj[0] = rbP.obj[0];
              ^
TotalCrossVM/src/nm/io/File_test.h:96:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:244:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:358:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:392:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:447:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:537:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:597:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:659:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:711:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:788:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:1097:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:1136:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:1211:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:1249:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/io/File_test.h:1167:7: style: Variable 't1' is assigned a value that is never used. [unreadVariable]
   t1 = p.retO;
      ^
TotalCrossVM/src/nm/io/PDBFile.c:210:26: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
            if (!dbId && (err = DmCreateDatabase(szName, creatorId, typeId, false) != errNone))
                         ^
TotalCrossVM/src/nm/io/PDBFile.c:493:15: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
      else if ((err = DmRemoveRecord(dbP, (uint16) hvRecordPos) != errNone))
              ^
TotalCrossVM/src/nm/io/PDBFile.c:287:15: style: The scope of the variable 'tbuf' can be reduced. [variableScope]
         char tbuf[256];
              ^
TotalCrossVM/src/nm/io/PDBFile.c:311:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:363:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:408:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:443:14: style: The scope of the variable 'array' can be reduced. [variableScope]
   TCObject* array;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:481:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:505:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:522:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:609:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:667:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:696:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:778:14: style: The scope of the variable 'dbP' can be reduced. [variableScope]
   DmOpenRef dbP;
             ^
TotalCrossVM/src/nm/io/PDBFile.c:427:17: style: Variable 'dbP' is assigned a value that is never used. [unreadVariable]
            dbP = DmOpenDatabase(dbId, dmModeReadWrite); // try to re-open database
                ^
TotalCrossVM/src/nm/io/PDBFile.c:595:8: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   err = MemHandleUnlock(handle);
       ^
TotalCrossVM/src/nm/io/PDBFile.c:617:12: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   Err err = errNone;
           ^
TotalCrossVM/src/nm/io/PDBFile.c:698:12: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   Err err = errNone;
           ^
TotalCrossVM/src/nm/io/PDBFile.c:807:48: style: Variable 'toSearchLen' is assigned a value that is never used. [unreadVariable]
      if (length <= 0 || length > (toSearchLen = ARRAYOBJ_LEN(toSearch)))
                                               ^
TotalCrossVM/src/nm/io/PDBFile_test.h:987:13: warning: Redundant assignment of 'p.obj[0]' to itself. [selfAssignment]
   p.obj[0] = p.obj[0];
            ^
TotalCrossVM/src/nm/io/PDBFile_test.h:163:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:237:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:281:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:326:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:378:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:432:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:473:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:544:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:613:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:673:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:729:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:821:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:915:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:1003:4: style: Label 'finish' is not used. [unusedLabel]
   finish:;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:1061:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:1101:4: style: Label 'finish' is not used. [unusedLabel]
   finish:;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:1179:4: style: Label 'finish' is not used. [unusedLabel]
   finish:;
   ^
TotalCrossVM/src/nm/io/PDBFile_test.h:1155:37: warning:inconclusive: Found suspicious operator '&' [constStatement]
   tiPDBF_readWriteBytes_Biib(&p); (&p);
                                    ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:111:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:142:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:211:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:266:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:93:29: style: Redundant initialization for 'inquiryNativeFields'. The initialized value is overwritten before it is read. [redundantInitialization]
   if ((inquiryNativeFields = createByteArray(p->currentContext, sizeof(TDeviceSearch))) == null)
                            ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:89:33: note: inquiryNativeFields is initialized
   TCObject inquiryNativeFields = DiscoveryAgent_inquiryNativeFields(discoveryAgent);
                                ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:93:29: note: inquiryNativeFields is overwritten
   if ((inquiryNativeFields = createByteArray(p->currentContext, sizeof(TDeviceSearch))) == null)
                            ^
TotalCrossVM/src/nm/io/device/bluetooth/win/DiscoveryAgent_c.h:119:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = WSALookupServiceBegin(&querySet, LUP_CONTAINERS, hLookupP)) != NO_ERROR)
            ^
TotalCrossVM/src/nm/io/device/bluetooth/win/DiscoveryAgent_c.h:126:21: style: Variable 'inquiryThread' is assigned a value that is never used. [unreadVariable]
 if ((inquiryThread = CreateThread(null, 0, ThreadStartInquiry, deviceSearchP, 0, null)) == null)
                    ^
TotalCrossVM/src/nm/io/device/bluetooth/win/DiscoveryAgent_c.h:345:28: style: Variable 'attrArray' is assigned a value that is never used. [unreadVariable]
   TCObjectArray attrArray = (TCObjectArray) ARRAYOBJ_START(attrSet);
                           ^
TotalCrossVM/src/nm/io/device/bluetooth/win/DiscoveryAgent_c.h:346:23: style: Variable 'attrArrayLen' is assigned a value that is never used. [unreadVariable]
   int32 attrArrayLen = ARRAYOBJ_LEN(attrSet);
                      ^
TotalCrossVM/src/nm/io/device/bluetooth/win/DiscoveryAgent_c.h:420:21: style: Variable 'hLookupP' is assigned a value that is never used. [unreadVariable]
   HANDLE* hLookupP = &((NATIVE_FIELDS) serviceSearchP->nativeFields)->hLookup;
                    ^
TotalCrossVM/src/nm/io/device/bluetooth/win/DiscoveryAgent_c.h:454:35: style: Variable 'result' is assigned a value that is never used. [unreadVariable]
                           result = executeMethod(serviceSearchP->currentContext, readSDP, serviceRecord, remoteDevice, byteArray, attrSet).asInt32;
                                  ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:165:20: style: Variable 'attrSetP' is assigned a value that is never used. [unreadVariable]
   int32* attrSetP = (int32*) ARRAYOBJ_START(attrSet);
                   ^
TotalCrossVM/src/nm/io/device/bluetooth/DiscoveryAgent.c:166:21: style: Variable 'attrSetLen' is assigned a value that is never used. [unreadVariable]
   int32 attrSetLen = ARRAYOBJ_LEN(attrSet);
                    ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortClient.c:50:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortClient.c:71:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortClient.c:96:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortClient.c:118:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortClient.c:105:19: style: The scope of the variable 'nativeHandle' can be reduced. [variableScope]
   NATIVE_HANDLE* nativeHandle;
                  ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortClient.c:25:25: style: Variable 'paramsArray' is assigned a value that is never used. [unreadVariable]
   TCObject paramsArray = p->obj[2];
                        ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortClient.c:88:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = btsppClientWrite(nativeHandle, byteArrayP, offset, count, &bytesWritten)) != NO_ERROR)
            ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortServer.c:43:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortServer.c:78:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortServer.c:100:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortServer.c:53:19: style: The scope of the variable 'clientHandle' can be reduced. [variableScope]
   NATIVE_HANDLE* clientHandle;
                  ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortServer.c:87:19: style: The scope of the variable 'nativeHandle' can be reduced. [variableScope]
   NATIVE_HANDLE* nativeHandle;
                  ^
TotalCrossVM/src/nm/io/device/bluetooth/SerialPortServer.c:25:25: style: Variable 'paramsArray' is assigned a value that is never used. [unreadVariable]
   TCObject paramsArray = p->obj[2];
                        ^
TotalCrossVM/src/nm/io/device/bluetooth/win/SerialPortServer_c.h:43:4: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
   pSetBlob->pSdpVersion = &ulSdpVersion;
   ^
TotalCrossVM/src/nm/io/device/gpiod/Gpiod.c:16:11: style: struct member '_NATIVE_HANDLE::handle' is never used. [unusedStructMember]
    void* handle;
          ^
TotalCrossVM/src/nm/io/device/gpiod/Gpiod.c:25:24: style: Variable 'handleObj' is assigned a value that is never used. [unreadVariable]
    TCObject handleObj = null;
                       ^
TotalCrossVM/src/nm/io/device/gpiod/Gpiod.c:26:33: style: Variable 'nativeHandle' is assigned a value that is never used. [unreadVariable]
    NATIVE_HANDLE* nativeHandle = null;
                                ^
TotalCrossVM/src/nm/io/device/gpiod/Gpiod.c:52:24: style: Variable 'handleObj' is assigned a value that is never used. [unreadVariable]
    TCObject handleObj = null;
                       ^
TotalCrossVM/src/nm/io/device/gpiod/Gpiod.c:53:33: style: Variable 'nativeHandle' is assigned a value that is never used. [unreadVariable]
    NATIVE_HANDLE* nativeHandle = null;
                                ^
TotalCrossVM/src/nm/io/device/gpiod/Gpiod.c:54:31: style: Variable 'chipHandle' is assigned a value that is never used. [unreadVariable]
    NATIVE_HANDLE* chipHandle = null;
                              ^
TotalCrossVM/src/nm/io/device/gpiod/posix/gpiodLib.c:34:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i;
            ^
TotalCrossVM/src/nm/io/device/gps/GPS.c:50:16: style: Variable 'flags' is assigned a value that is never used. [unreadVariable]
   int32 flags = 0;
               ^
TotalCrossVM/src/nm/io/device/gps/android/GPS_c.h:60:28: style: Unused variable: gpsPrecision [unusedVariable]
   int32 yy,mm,dd,HH,MM,SS,gpsPrecision;
                           ^
TotalCrossVM/src/nm/io/device/scanner/zxing.c:32:16: style: Local variable 'result' shadows outer variable [shadowVariable]
       jstring result = (*env)->CallStaticObjectMethod(env, applicationClass, jzxing, jmode);
               ^
TotalCrossVM/src/nm/io/device/scanner/zxing.c:29:9: note: Shadowed declaration
   jint result = (*env)->CallStaticIntMethod(env, applicationClass, method);
        ^
TotalCrossVM/src/nm/io/device/scanner/zxing.c:32:16: note: Shadow variable
       jstring result = (*env)->CallStaticObjectMethod(env, applicationClass, jzxing, jmode);
               ^
TotalCrossVM/src/nm/io/device_PortConnector.c:49:16: style: The scope of the variable 'portConnectorHandle' can be reduced. [variableScope]
   PortHandle* portConnectorHandle;
               ^
TotalCrossVM/src/nm/io/device_PortConnector.c:51:11: style: The scope of the variable 'receiveBuffer' can be reduced. [variableScope]
   VoidP* receiveBuffer;
          ^
TotalCrossVM/src/nm/io/device_PortConnector.c:100:16: style: The scope of the variable 'portConnectorHandle' can be reduced. [variableScope]
   PortHandle* portConnectorHandle;
               ^
TotalCrossVM/src/nm/io/device_PortConnector.c:152:16: style: The scope of the variable 'portConnectorHandle' can be reduced. [variableScope]
   PortHandle* portConnectorHandle;
               ^
TotalCrossVM/src/nm/io/device_PortConnector_test.h:133:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish: ;
   ^
TotalCrossVM/src/nm/io/device_PortConnector_test.h:138:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/device_PortConnector_test.h:143:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/device_PortConnector_test.h:148:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/device_PortConnector_test.h:153:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/device_PortConnector_test.h:158:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/device_PortConnector_test.h:163:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/io/win/device_PortConnector_c.h:52:15: style: Variable 'isIR' is assigned a value that is never used. [unreadVariable]
         isIR = 1;
              ^
TotalCrossVM/src/nm/io/win/device_PortConnector_c.h:59:15: style: Variable 'isIR' is assigned a value that is never used. [unreadVariable]
         isIR = 1;
              ^
TotalCrossVM/src/nm/io/win/device_PortConnector_c.h:76:22: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
            if ((err = queryRegistry(HKEY_LOCAL_MACHINE, buf, TEXT("FriendlyName"), (CharP) buf2, sizeof(buf2))) == NO_ERROR)
                     ^
TotalCrossVM/src/nm/io/win/device_PortConnector_c.h:80:54: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
               if (xstrstr(buf8,"bluetooth") && (err = queryRegistry(HKEY_LOCAL_MACHINE, buf, TEXT("Index"), (CharP) &i32, 4)) == NO_ERROR)
                                                     ^
TotalCrossVM/src/nm/io/win/device_PortConnector_c.h:43:10: style: Variable 'i32' is not assigned a value. [unassignedVariable]
   int32 i32,i;
         ^
TotalCrossVM/src/nm/lang/Class.c:225:18: style: Local variable 'found' shadows outer variable [shadowVariable]
            bool found = true;
                 ^
TotalCrossVM/src/nm/lang/Class.c:209:9: note: Shadowed declaration
   bool found=false;
        ^
TotalCrossVM/src/nm/lang/Class.c:225:18: note: Shadow variable
            bool found = true;
                 ^
TotalCrossVM/src/nm/lang/Class.c:79:19: style: Variable 'ptrObj' is assigned a value that is never used. [unreadVariable]
   TCObject ptrObj=null;
                  ^
TotalCrossVM/src/nm/lang/Class.c:110:19: style: Variable 'ptrObj' is assigned a value that is never used. [unreadVariable]
   TCObject ptrObj=null;
                  ^
TotalCrossVM/src/nm/lang/Class_test.h:31:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/Class_test.h:51:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/Class_test.h:85:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/Object_test.h:29:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/lang/Object_test.h:56:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/lang/Process.c:99:9: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
    err = cpproc_kill(pid, SIGKILL);
        ^
TotalCrossVM/src/nm/lang/Reflection.c:38:12: style: Variable 'name' is reassigned a value before the old one has been used. [redundantAssignment]
      name = namebuf;
           ^
TotalCrossVM/src/nm/lang/Reflection.c:31:15: note: name is assigned
         name = target->name; // just to return
              ^
TotalCrossVM/src/nm/lang/Reflection.c:38:12: note: name is overwritten
      name = namebuf;
           ^
TotalCrossVM/src/nm/lang/Reflection.c:191:26: style: Local variable 'field' shadows outer function [shadowFunction]
               TCObject* field = isStatic ? &(fieldsClass->objStaticValues[index]) : &FIELD_OBJ(o, objparamClass, index);
                         ^
TotalCrossVM/src/nm/lang/Reflection.c:153:13: note: Shadowed declaration
static void field(NMParams p, Type srcType, bool isGet, void* value)
            ^
TotalCrossVM/src/nm/lang/Reflection.c:191:26: note: Shadow variable
               TCObject* field = isStatic ? &(fieldsClass->objStaticValues[index]) : &FIELD_OBJ(o, objparamClass, index);
                         ^
TotalCrossVM/src/nm/lang/Reflection.c:201:23: style: Local variable 'field' shadows outer function [shadowFunction]
               int64* field = isStatic ? (int64*)&(fieldsClass->v64StaticValues[index]) : (int64*)&FIELD_I64(o, objparamClass, index);
                      ^
TotalCrossVM/src/nm/lang/Reflection.c:153:13: note: Shadowed declaration
static void field(NMParams p, Type srcType, bool isGet, void* value)
            ^
TotalCrossVM/src/nm/lang/Reflection.c:201:23: note: Shadow variable
               int64* field = isStatic ? (int64*)&(fieldsClass->v64StaticValues[index]) : (int64*)&FIELD_I64(o, objparamClass, index);
                      ^
TotalCrossVM/src/nm/lang/Reflection.c:212:24: style: Local variable 'field' shadows outer function [shadowFunction]
               double* field = isStatic ? &(fieldsClass->v64StaticValues[index]) : &FIELD_DBL(o, objparamClass, index);
                       ^
TotalCrossVM/src/nm/lang/Reflection.c:153:13: note: Shadowed declaration
static void field(NMParams p, Type srcType, bool isGet, void* value)
            ^
TotalCrossVM/src/nm/lang/Reflection.c:212:24: note: Shadow variable
               double* field = isStatic ? &(fieldsClass->v64StaticValues[index]) : &FIELD_DBL(o, objparamClass, index);
                       ^
TotalCrossVM/src/nm/lang/Reflection.c:222:23: style: Local variable 'field' shadows outer function [shadowFunction]
               int32* field = isStatic ? &(fieldsClass->i32StaticValues[index]) : &FIELD_I32(o, index);
                      ^
TotalCrossVM/src/nm/lang/Reflection.c:153:13: note: Shadowed declaration
static void field(NMParams p, Type srcType, bool isGet, void* value)
            ^
TotalCrossVM/src/nm/lang/Reflection.c:222:23: note: Shadow variable
               int32* field = isStatic ? &(fieldsClass->i32StaticValues[index]) : &FIELD_I32(o, index);
                      ^
TotalCrossVM/src/nm/lang/Reflection.c:13:13: style: Variable 'len' is assigned a value that is never used. [unreadVariable]
   int32 len=0;
            ^
TotalCrossVM/src/nm/lang/Reflection.c:284:15: style: Variable 'name' is assigned a value that is never used. [unreadVariable]
         name = getTargetArrayClass(componentType, namebuf, p->currentContext);
              ^
TotalCrossVM/src/nm/lang/Reflection.c:622:17: style: Variable 'aargs' is assigned a value that is never used. [unreadVariable]
   TValue* aargs=null;
                ^
TotalCrossVM/src/nm/lang/String.c:279:15: style: Variable 'startIndex' is assigned a value that is never used. [unreadVariable]
   startIndex = p->i32[1];
              ^
TotalCrossVM/src/nm/lang/String_test.h:175:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = 231/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:171:6: note: i is assigned
   i = (int32)'E';
     ^
TotalCrossVM/src/nm/lang/String_test.h:175:6: note: i is overwritten
   i = 231/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:179:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = (int32)'z';
     ^
TotalCrossVM/src/nm/lang/String_test.h:175:6: note: i is assigned
   i = 231/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:179:6: note: i is overwritten
   i = (int32)'z';
     ^
TotalCrossVM/src/nm/lang/String_test.h:183:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = (int32)'.';
     ^
TotalCrossVM/src/nm/lang/String_test.h:179:6: note: i is assigned
   i = (int32)'z';
     ^
TotalCrossVM/src/nm/lang/String_test.h:183:6: note: i is overwritten
   i = (int32)'.';
     ^
TotalCrossVM/src/nm/lang/String_test.h:187:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = 227/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:183:6: note: i is assigned
   i = (int32)'.';
     ^
TotalCrossVM/src/nm/lang/String_test.h:187:6: note: i is overwritten
   i = 227/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:191:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = (int32)',';
     ^
TotalCrossVM/src/nm/lang/String_test.h:187:6: note: i is assigned
   i = 227/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:191:6: note: i is overwritten
   i = (int32)',';
     ^
TotalCrossVM/src/nm/lang/String_test.h:195:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = (int32)' ';
     ^
TotalCrossVM/src/nm/lang/String_test.h:191:6: note: i is assigned
   i = (int32)',';
     ^
TotalCrossVM/src/nm/lang/String_test.h:195:6: note: i is overwritten
   i = (int32)' ';
     ^
TotalCrossVM/src/nm/lang/String_test.h:365:6: style: Variable 's' is reassigned a value before the old one has been used. [redundantAssignment]
   s = 0;
     ^
TotalCrossVM/src/nm/lang/String_test.h:357:6: note: s is assigned
   s = -1;
     ^
TotalCrossVM/src/nm/lang/String_test.h:365:6: note: s is overwritten
   s = 0;
     ^
TotalCrossVM/src/nm/lang/String_test.h:373:6: style: Variable 's' is reassigned a value before the old one has been used. [redundantAssignment]
   s = 44;
     ^
TotalCrossVM/src/nm/lang/String_test.h:369:6: note: s is assigned
   s = 43;
     ^
TotalCrossVM/src/nm/lang/String_test.h:373:6: note: s is overwritten
   s = 44;
     ^
TotalCrossVM/src/nm/lang/String_test.h:377:6: style: Variable 's' is reassigned a value before the old one has been used. [redundantAssignment]
   s = 45;
     ^
TotalCrossVM/src/nm/lang/String_test.h:373:6: note: s is assigned
   s = 44;
     ^
TotalCrossVM/src/nm/lang/String_test.h:377:6: note: s is overwritten
   s = 45;
     ^
TotalCrossVM/src/nm/lang/String_test.h:465:9: style: Variable 'from' is reassigned a value before the old one has been used. [redundantAssignment]
   from = -1;
        ^
TotalCrossVM/src/nm/lang/String_test.h:461:9: note: from is assigned
   from = 1;
        ^
TotalCrossVM/src/nm/lang/String_test.h:465:9: note: from is overwritten
   from = -1;
        ^
TotalCrossVM/src/nm/lang/String_test.h:472:9: style: Variable 'from' is reassigned a value before the old one has been used. [redundantAssignment]
   from = 0;
        ^
TotalCrossVM/src/nm/lang/String_test.h:465:9: note: from is assigned
   from = -1;
        ^
TotalCrossVM/src/nm/lang/String_test.h:472:9: note: from is overwritten
   from = 0;
        ^
TotalCrossVM/src/nm/lang/String_test.h:631:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = 231/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:627:6: note: i is assigned
   i = (int32)'E';
     ^
TotalCrossVM/src/nm/lang/String_test.h:631:6: note: i is overwritten
   i = 231/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:635:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = (int32)'z';
     ^
TotalCrossVM/src/nm/lang/String_test.h:631:6: note: i is assigned
   i = 231/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:635:6: note: i is overwritten
   i = (int32)'z';
     ^
TotalCrossVM/src/nm/lang/String_test.h:639:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = (int32)'.';
     ^
TotalCrossVM/src/nm/lang/String_test.h:635:6: note: i is assigned
   i = (int32)'z';
     ^
TotalCrossVM/src/nm/lang/String_test.h:639:6: note: i is overwritten
   i = (int32)'.';
     ^
TotalCrossVM/src/nm/lang/String_test.h:643:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = 227/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:639:6: note: i is assigned
   i = (int32)'.';
     ^
TotalCrossVM/src/nm/lang/String_test.h:643:6: note: i is overwritten
   i = 227/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:647:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = (int32)',';
     ^
TotalCrossVM/src/nm/lang/String_test.h:643:6: note: i is assigned
   i = 227/*'�'*/;
     ^
TotalCrossVM/src/nm/lang/String_test.h:647:6: note: i is overwritten
   i = (int32)',';
     ^
TotalCrossVM/src/nm/lang/String_test.h:651:6: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
   i = (int32)' ';
     ^
TotalCrossVM/src/nm/lang/String_test.h:647:6: note: i is assigned
   i = (int32)',';
     ^
TotalCrossVM/src/nm/lang/String_test.h:651:6: note: i is overwritten
   i = (int32)' ';
     ^
TotalCrossVM/src/nm/lang/String_test.h:25:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/lang/String_test.h:45:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/lang/String_test.h:101:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:123:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:153:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:199:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:237:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:269:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:296:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:333:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:381:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:437:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:476:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:509:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:535:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:571:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:609:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:655:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:724:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/String_test.h:169:6: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
   j = String_charsStart(obj);
     ^
TotalCrossVM/src/nm/lang/String_test.h:215:6: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
   j = String_charsStart(obj);
     ^
TotalCrossVM/src/nm/lang/String_test.h:233:32: style: Variable 'is[1]' is assigned a value that is never used. [unreadVariable]
   is[0] = 231/*'�'*/; is[1] = 23;
                               ^
TotalCrossVM/src/nm/lang/String_test.h:327:30: style: Variable 'i[2]' is assigned a value that is never used. [unreadVariable]
   i[0] = 0; i[1] = 44; i[2] = 16;
                             ^
TotalCrossVM/src/nm/lang/String_test.h:564:10: style: Variable 'is[1]' is assigned a value that is never used. [unreadVariable]
   is[1] = 'a'; // new
         ^
TotalCrossVM/src/nm/lang/String_test.h:587:6: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
   j = String_charsStart(obj);
     ^
TotalCrossVM/src/nm/lang/String_test.h:605:23: style: Variable 'is[1]' is assigned a value that is never used. [unreadVariable]
   is[0] = 227; is[1] = 50;
                      ^
TotalCrossVM/src/nm/lang/String_test.h:625:6: style: Variable 'j' is assigned a value that is never used. [unreadVariable]
   j = String_charsStart(obj);
     ^
TotalCrossVM/src/nm/lang/StringBuffer.c:89:11: style: Variable 'count' is assigned a value that is never used. [unreadVariable]
    count = 0;
          ^
TotalCrossVM/src/nm/lang/StringBuffer.c:234:19: style: Variable 'buf[pos]' is assigned a value that is never used. [unreadVariable]
         buf[pos] = c;
                  ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:27:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:63:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:109:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:157:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:206:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:236:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:272:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:291:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:334:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/StringBuffer_test.h:201:21: style: Variable 'is[1]' is assigned a value that is never used. [unreadVariable]
   is[0] = 0; is[1] = 1;
                    ^
TotalCrossVM/src/nm/lang/Thread_test.h:11:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/Thread_test.h:16:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/Throwable_test.h:11:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/lang/Throwable.c:19:13: style: Local variable 'throwableTrace' shadows outer variable [shadowVariable]
      CharP throwableTrace = String2CharP(traceObj);
            ^
TotalCrossVM/src/nm/lang/Throwable.c:12:7: note: Shadowed declaration
CharP throwableTrace;
      ^
TotalCrossVM/src/nm/lang/Throwable.c:19:13: note: Shadow variable
      CharP throwableTrace = String2CharP(traceObj);
            ^
TotalCrossVM/src/nm/lang/Throwable.c:19:28: style: Variable 'throwableTrace' is assigned a value that is never used. [unreadVariable]
      CharP throwableTrace = String2CharP(traceObj);
                           ^
TotalCrossVM/src/nm/lang/posix/cpproc.c:57:37: style:inconclusive: Function 'cpproc_forkAndExec' argument 5 names different: declaration 'pid' definition 'out_pid'. [funcArgNamesDifferent]
   int *fds, int pipe_count, pid_t *out_pid, const char *wd)
                                    ^
TotalCrossVM/src/nm/lang/posix/cpproc.h:44:40: note: Function 'cpproc_forkAndExec' argument 5 names different: declaration 'pid' definition 'out_pid'.
      int *fds, int pipe_count, pid_t *pid, const char *wd);
                                       ^
TotalCrossVM/src/nm/lang/posix/cpproc.c:57:37: note: Function 'cpproc_forkAndExec' argument 5 names different: declaration 'pid' definition 'out_pid'.
   int *fds, int pipe_count, pid_t *out_pid, const char *wd)
                                    ^
TotalCrossVM/src/nm/lang/posix/cpproc.c:89:9: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
      i = chdir(wd);
        ^
TotalCrossVM/src/nm/map/GoogleMaps.c:48:19: style: Variable 'addrF' is assigned a value that is never used. [unreadVariable]
   TCObject addrF = p->obj[1];
                  ^
TotalCrossVM/src/nm/net/ConnectionManager.c:216:70: style: Condition 'szHostAddress[0]==0' is always true [knownConditionTrueFalse]
   if (CmGetLocalHost(szHostAddress) != NO_ERROR || szHostAddress[0] == 0) {
                                                                     ^
TotalCrossVM/src/nm/net/ConnectionManager.c:214:23: note: Assignment 'szHostAddress[0]=0', assigned value is 0
   szHostAddress[0] = 0;
                      ^
TotalCrossVM/src/nm/net/ConnectionManager.c:216:70: note: Condition 'szHostAddress[0]==0' is always true
   if (CmGetLocalHost(szHostAddress) != NO_ERROR || szHostAddress[0] == 0) {
                                                                     ^
TotalCrossVM/src/nm/net/ConnectionManager.c:158:21: style: Variable 'szHostName' is assigned a value that is never used. [unreadVariable]
   CharP szHostName = null;
                    ^
TotalCrossVM/src/nm/net/ConnectionManager.c:186:24: style: Variable 'szHostAddress' is assigned a value that is never used. [unreadVariable]
   CharP szHostAddress = null;
                       ^
TotalCrossVM/src/nm/net/win/ConnectionManager_c.h:313:26: warning: String literal compared with variable 'hostAddress'. Did you intend to use strcmp() instead? [literalWithCharPtrCompare]
         if (hostAddress != "")
                         ^
TotalCrossVM/src/nm/net/win/ConnectionManager_c.h:374:22: warning: String literal compared with variable 'address'. Did you intend to use strcmp() instead? [literalWithCharPtrCompare]
         if (address != "")
                     ^
TotalCrossVM/src/nm/net/ConnectionManager.c:222:9: style: The scope of the variable 'addr' can be reduced. [variableScope]
   char addr[50];
        ^
TotalCrossVM/src/nm/net/ConnectionManager.c:101:14: style: The scope of the variable 'connRef' can be reduced. [variableScope]
   TCObject* connRef;
             ^
TotalCrossVM/src/nm/net/ConnectionManager.c:102:23: style: The scope of the variable 'connHandle' can be reduced. [variableScope]
   NATIVE_CONNECTION* connHandle;
                      ^
TotalCrossVM/src/nm/net/ConnectionManager.c:141:23: style: The scope of the variable 'connHandle' can be reduced. [variableScope]
   NATIVE_CONNECTION* connHandle;
                      ^
TotalCrossVM/src/nm/net/win/ConnectionManager_c.h:80:14: error: Uninitialized variable: apn [uninitvar]
      if (!(*apn == *username == *password == *domain == 0))
             ^
TotalCrossVM/src/nm/net/win/ConnectionManager_c.h:80:22: error: Uninitialized variable: username [uninitvar]
      if (!(*apn == *username == *password == *domain == 0))
                     ^
TotalCrossVM/src/nm/net/win/ConnectionManager_c.h:80:35: error: Uninitialized variable: password [uninitvar]
      if (!(*apn == *username == *password == *domain == 0))
                                  ^
TotalCrossVM/src/nm/net/win/ConnectionManager_c.h:80:48: error: Uninitialized variable: domain [uninitvar]
      if (!(*apn == *username == *password == *domain == 0))
                                               ^
TotalCrossVM/src/nm/net/win/ConnectionManager_c.h:460:10: style: Variable 'adapterStateValue' is not assigned a value. [unassignedVariable]
   DWORD adapterStateValue;
         ^
TotalCrossVM/src/nm/net/win/ConnectionManager_c.h:560:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = RasEnumConnections(ras, &dSize, &dNumber)) != 0)
            ^
TotalCrossVM/src/nm/net/ConnectionManager.c:269:18: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
         Err err = CmGetLocalHost(szHostAddress);
                 ^
TotalCrossVM/src/nm/net/posix/ServerSocket_c.h:113:21: style: The scope of the variable 'ppip' can be reduced. [variableScope]
   struct in_addr **ppip;
                    ^
TotalCrossVM/src/nm/net/ServerSocket.c:42:19: style: The scope of the variable 'serverSocketHandle' can be reduced. [variableScope]
   SERVER_SOCKET* serverSocketHandle;
                  ^
TotalCrossVM/src/nm/net/ServerSocket.c:69:19: style: The scope of the variable 'serverSocketHandle' can be reduced. [variableScope]
   SERVER_SOCKET* serverSocketHandle;
                  ^
TotalCrossVM/src/nm/net/ServerSocket.c:71:12: style: The scope of the variable 'socketHandle' can be reduced. [variableScope]
   SOCKET* socketHandle;
           ^
TotalCrossVM/src/nm/net/posix/ServerSocket_c.h:112:26: style: Variable 'pHost' is assigned a value that is never used. [unreadVariable]
   struct hostent *pHost = null;
                         ^
TotalCrossVM/src/nm/net/ServerSocket_test.h:44:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ServerSocket_test.h:49:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ServerSocket_test.h:54:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ServerSocket_test.h:59:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/win/ServerSocket_c.h:10:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef SOCKET SERVER_SOCKET;
^
TotalCrossVM/src/nm/net/win/ServerSocket_c.h:74:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err serverSocketAccept(SERVER_SOCKET serverSocketHandle, SOCKET* socketHandle, int32 timeoutMillis)
^
TotalCrossVM/src/nm/net/ServerSocket.c:71:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET* socketHandle;
^
TotalCrossVM/src/nm/net/ServerSocket.c:77:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (newSocket != null && (socketRef = createByteArray(p->currentContext, sizeof(SOCKET))) != null)
^
TotalCrossVM/src/nm/net/ServerSocket.c:81:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      socketHandle = (SOCKET*) ARRAYOBJ_START(socketRef);
^
TotalCrossVM/src/nm/net/win/ServerSocket_c.h:10:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef SOCKET SERVER_SOCKET;
^
TotalCrossVM/src/nm/net/win/ServerSocket_c.h:74:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err serverSocketAccept(SERVER_SOCKET serverSocketHandle, SOCKET* socketHandle, int32 timeoutMillis)
^
TotalCrossVM/src/nm/net/ServerSocket.c:71:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET* socketHandle;
^
TotalCrossVM/src/nm/net/ServerSocket.c:77:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (newSocket != null && (socketRef = createByteArray(p->currentContext, sizeof(SOCKET))) != null)
^
TotalCrossVM/src/nm/net/ServerSocket.c:81:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      socketHandle = (SOCKET*) ARRAYOBJ_START(socketRef);
^
TotalCrossVM/src/nm/net/win/ServerSocket_c.h:106:21: style: The scope of the variable 'ppip' can be reduced. [variableScope]
   struct in_addr **ppip;
                    ^
TotalCrossVM/src/nm/net/win/ServerSocket_c.h:122:14: warning: String literal compared with variable 'strIp'. Did you intend to use strcmp() instead? [literalWithCharPtrCompare]
    if (strIp!="") {
             ^
TotalCrossVM/src/nm/net/win/ServerSocket_c.h:105:19: style: Variable 'pHost' is assigned a value that is never used. [unreadVariable]
   HOSTENT *pHost = null;
                  ^
TotalCrossVM/src/nm/net/Socket.c:28:12: style: The scope of the variable 'socketHandle' can be reduced. [variableScope]
   SOCKET* socketHandle;
           ^
TotalCrossVM/src/nm/net/Socket_test.h:71:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish: ;
   ^
TotalCrossVM/src/nm/net/win/Socket_c.h:10:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err socketClose(SOCKET* socketHandle);
^
TotalCrossVM/src/nm/net/win/Socket_c.h:39:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err socketCreate(SOCKET* socketHandle, CharP hostname, int32 port, int32 timeout, bool noLinger, bool *isUnknownHost, bool *timedOut)
^
TotalCrossVM/src/nm/net/win/Socket_c.h:41:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET hostSocket = INVALID_SOCKET; // Socket bound to the server
^
TotalCrossVM/src/nm/net/win/Socket_c.h:123:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err socketClose(SOCKET* socketHandle)
^
TotalCrossVM/src/nm/net/win/Socket_c.h:165:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err socketReadWriteBytes(SOCKET socketHandle, int32 timeoutMillis, CharP buf, int32 start, int32 count, int32* retCount, bool isRead)
^
TotalCrossVM/src/nm/net/Socket.c:28:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET* socketHandle;
^
TotalCrossVM/src/nm/net/Socket.c:51:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if ((socketRef = createByteArray(p->currentContext, sizeof(SOCKET))) != null)
^
TotalCrossVM/src/nm/net/Socket.c:55:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      socketHandle = (SOCKET*) ARRAYOBJ_START(socketRef);
^
TotalCrossVM/src/nm/net/Socket.c:74:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET* socketHandle = (SOCKET*) ARRAYOBJ_START(socketRef);
^
TotalCrossVM/src/nm/net/Socket.c:86:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET* socketHandle;
^
TotalCrossVM/src/nm/net/Socket.c:100:0: information: Skipping configuration 'SOCKET;WIN32' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   socketHandle = (SOCKET*) ARRAYOBJ_START(socketRef);
^
TotalCrossVM/src/nm/net/win/Socket_c.h:10:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err socketClose(SOCKET* socketHandle);
^
TotalCrossVM/src/nm/net/win/Socket_c.h:39:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err socketCreate(SOCKET* socketHandle, CharP hostname, int32 port, int32 timeout, bool noLinger, bool *isUnknownHost, bool *timedOut)
^
TotalCrossVM/src/nm/net/win/Socket_c.h:41:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET hostSocket = INVALID_SOCKET; // Socket bound to the server
^
TotalCrossVM/src/nm/net/win/Socket_c.h:123:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err socketClose(SOCKET* socketHandle)
^
TotalCrossVM/src/nm/net/win/Socket_c.h:165:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Err socketReadWriteBytes(SOCKET socketHandle, int32 timeoutMillis, CharP buf, int32 start, int32 count, int32* retCount, bool isRead)
^
TotalCrossVM/src/nm/net/Socket.c:28:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET* socketHandle;
^
TotalCrossVM/src/nm/net/Socket.c:51:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if ((socketRef = createByteArray(p->currentContext, sizeof(SOCKET))) != null)
^
TotalCrossVM/src/nm/net/Socket.c:55:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      socketHandle = (SOCKET*) ARRAYOBJ_START(socketRef);
^
TotalCrossVM/src/nm/net/Socket.c:74:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET* socketHandle = (SOCKET*) ARRAYOBJ_START(socketRef);
^
TotalCrossVM/src/nm/net/Socket.c:86:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SOCKET* socketHandle;
^
TotalCrossVM/src/nm/net/Socket.c:100:0: information: Skipping configuration 'SOCKET;WIN32;_WIN64' since the value of 'SOCKET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   socketHandle = (SOCKET*) ARRAYOBJ_START(socketRef);
^
TotalCrossVM/src/nm/net/ssl_SSL.c:66:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:78:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:90:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:113:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:134:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:166:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:180:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:192:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:204:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:217:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:235:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:257:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:335:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:362:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:407:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:452:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:461:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:470:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL.c:487:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:11:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:16:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:21:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:26:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:31:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:36:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:41:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:46:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:51:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:56:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:61:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:66:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:71:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:76:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:81:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:86:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:91:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:96:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/net/ssl_SSL_test.h:101:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/notification/notification.c:19:36: style: Variable 'notificationManagerObj' is assigned a value that is never used. [unreadVariable]
   TCObject notificationManagerObj = p->obj[0];
                                   ^
TotalCrossVM/src/nm/notification/notification.c:21:22: style: Variable 'titleObj' is assigned a value that is never used. [unreadVariable]
   TCObject titleObj = Notification_title(notificationObj);
                     ^
TotalCrossVM/src/nm/notification/notification.c:22:21: style: Variable 'textObj' is assigned a value that is never used. [unreadVariable]
   TCObject textObj = Notification_text(notificationObj);
                    ^
TotalCrossVM/src/nm/phone/win/CellInfo_c.h:126:79: style:inconclusive: Function 'RilCallback' argument 4 names different: declaration 'cbdata' definition 'cbData'. [funcArgNamesDifferent]
CALLBACK RilCallback(DWORD dwCode, HRESULT hrCmdID, const void* lpData, DWORD cbData, DWORD dwParam)
                                                                              ^
TotalCrossVM/src/nm/phone/win/CellInfo_c.h:31:78: note: Function 'RilCallback' argument 4 names different: declaration 'cbdata' definition 'cbData'.
CALLBACK RilCallback(DWORD dwCode, HRESULT hrCmdID, const void*lpData, DWORD cbdata, DWORD dwParam);
                                                                             ^
TotalCrossVM/src/nm/phone/win/CellInfo_c.h:126:79: note: Function 'RilCallback' argument 4 names different: declaration 'cbdata' definition 'cbData'.
CALLBACK RilCallback(DWORD dwCode, HRESULT hrCmdID, const void* lpData, DWORD cbData, DWORD dwParam)
                                                                              ^
TotalCrossVM/src/nm/phone/win/CellInfo_c.h:130:26: style: Variable 'aux' is assigned a value that is never used. [unreadVariable]
   RILSIGNALQUALITY* aux = (RILSIGNALQUALITY*) lpData;
                         ^
TotalCrossVM/src/nm/phone/win/Dial_c.h:39:11: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
      ret = lineDeallocateCall(hCall); // Deallocate call handle.
          ^
TotalCrossVM/src/nm/phone/win/Dial_c.h:36:11: note: ret is assigned
      ret = DropCallRequestID = lineDrop(hCall, NULL, 0);
          ^
TotalCrossVM/src/nm/phone/win/Dial_c.h:39:11: note: ret is overwritten
      ret = lineDeallocateCall(hCall); // Deallocate call handle.
          ^
TotalCrossVM/src/nm/phone/win/Dial_c.h:49:7: warning: Redundant assignment of 'ret' to itself. [selfAssignment]
   ret=ret;
      ^
TotalCrossVM/src/nm/phone/win/Dial_c.h:282:13: style: Local variable 'dwReturn' shadows outer variable [shadowVariable]
      DWORD dwReturn;
            ^
TotalCrossVM/src/nm/phone/win/Dial_c.h:256:20: note: Shadowed declaration
   DWORD dwLineID, dwReturn, dwTimeCount = GetTickCount();
                   ^
TotalCrossVM/src/nm/phone/win/Dial_c.h:282:13: note: Shadow variable
      DWORD dwReturn;
            ^
TotalCrossVM/src/nm/phone/win/Dial_c.h:49:7: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
   ret=ret;
      ^
TotalCrossVM/src/nm/phone/SMS.c:50:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:13:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:18:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:23:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:28:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:33:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:38:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:43:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:48:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:53:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:58:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:63:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:68:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:73:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:78:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:83:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:88:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:93:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook.c:98:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = 0;
     ^
TotalCrossVM/src/nm/pim/POutlook_test.h:11:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:16:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:21:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:26:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:31:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:36:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:41:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:46:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:51:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:56:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:61:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:66:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:71:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:76:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:81:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:86:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:91:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/pim/POutlook_test.h:96:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/qrcode/qrcode.c:545:48: style:inconclusive: Boolean expression 'color' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
            bitsRow = ((bitsRow << 1) & 0x7FF) | color;
                                               ^
TotalCrossVM/src/nm/qrcode/qrcode.c:546:48: style:inconclusive: Boolean expression 'bb_getBit(modules,y,x)' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
            bitsCol = ((bitsCol << 1) & 0x7FF) | bb_getBit(modules, y, x);
                                               ^
TotalCrossVM/src/nm/qrcode/qrcode.c:856:11: style: Checking if unsigned expression 'x' is less than zero. [unsignedLessThanZero]
    if (x < 0 || x >= qrcode->size || y < 0 || y >= qrcode->size) {
          ^
TotalCrossVM/src/nm/qrcode/qrcode.c:856:41: style: Checking if unsigned expression 'y' is less than zero. [unsignedLessThanZero]
    if (x < 0 || x >= qrcode->size || y < 0 || y >= qrcode->size) {
                                        ^
TotalCrossVM/src/nm/qrcode/qrcode.c:415:17: style: Local variable 'size' shadows outer variable [shadowVariable]
        uint8_t size = version * 4 + 17;
                ^
TotalCrossVM/src/nm/qrcode/qrcode.c:383:13: note: Shadowed declaration
    uint8_t size = modules->bitOffsetOrWidth;
            ^
TotalCrossVM/src/nm/qrcode/qrcode.c:415:17: note: Shadow variable
        uint8_t size = version * 4 + 17;
                ^
TotalCrossVM/src/nm/qrcode/qrcode.c:354:17: style: Variable 'size' is assigned a value that is never used. [unreadVariable]
    int8_t size = modules->bitOffsetOrWidth;
                ^
TotalCrossVM/src/nm/qrcode/qrcode.c:704:28: style: Variable 'numShortBlocks' is assigned a value that is never used. [unreadVariable]
    uint8_t numShortBlocks = numBlocks - moduleCount / 8 % numBlocks;
                           ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:306:45: warning: Either the condition '0<=(int)ecl' is redundant or the array 'NUM_ERROR_CORRECTION_BLOCKS[4][41]' is accessed at index NUM_ERROR_CORRECTION_BLOCKS[-1][*], which is out of bounds. [negativeIndex]
 int numBlocks = NUM_ERROR_CORRECTION_BLOCKS[(int)ecl][version];
                                            ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:315:11: note: Assuming that condition '0<=(int)ecl' is not redundant
 assert(0 <= (int)ecl && (int)ecl < 4 && qrcodegen_VERSION_MIN <= version && version <= qrcodegen_VERSION_MAX);
          ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:306:45: note: Negative array index
 int numBlocks = NUM_ERROR_CORRECTION_BLOCKS[(int)ecl][version];
                                            ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:307:45: warning: Either the condition '0<=(int)ecl' is redundant or the array 'ECC_CODEWORDS_PER_BLOCK[4][41]' is accessed at index ECC_CODEWORDS_PER_BLOCK[-1][*], which is out of bounds. [negativeIndex]
 int blockEccLen = ECC_CODEWORDS_PER_BLOCK  [(int)ecl][version];
                                            ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:315:11: note: Assuming that condition '0<=(int)ecl' is not redundant
 assert(0 <= (int)ecl && (int)ecl < 4 && qrcodegen_VERSION_MIN <= version && version <= qrcodegen_VERSION_MAX);
          ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:307:45: note: Negative array index
 int blockEccLen = ECC_CODEWORDS_PER_BLOCK  [(int)ecl][version];
                                            ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:224:7: style: Local variable 'dataCapacityBits' shadows outer variable [shadowVariable]
  int dataCapacityBits = getNumDataCodewords(version, ecl) * 8;  // Number of data bits available
      ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:215:6: note: Shadowed declaration
 int dataCapacityBits, terminatorBits;
     ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:224:7: note: Shadow variable
  int dataCapacityBits = getNumDataCodewords(version, ecl) * 8;  // Number of data bits available
      ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:674:7: style: Local variable 'x' shadows outer variable [shadowVariable]
  int x;
      ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:666:9: note: Shadowed declaration
 int y, x, k;
        ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:674:7: note: Shadow variable
  int x;
      ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:699:7: style: Local variable 'y' shadows outer variable [shadowVariable]
  int y;
      ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:666:6: note: Shadowed declaration
 int y, x, k;
     ^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:699:7: note: Shadow variable
  int y;
      ^
TotalCrossVM/src/nm/sys/Convert.c:186:9: style: The scope of the variable 'buffer' can be reduced. [variableScope]
   char buffer[9];
        ^
TotalCrossVM/src/nm/sys/Convert.c:623:33: style: The scope of the variable 'chars' can be reduced. [variableScope]
   JChar c = (JChar)p->i32[0], *chars;
                                ^
TotalCrossVM/src/nm/sys/Convert_test.h:71:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:96:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:129:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:162:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:189:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:220:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:251:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:278:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:314:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:350:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:428:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:506:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:535:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:565:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:660:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:765:1: style: Label 'finish' is not used. [unusedLabel]
finish:
^
TotalCrossVM/src/nm/sys/Convert_test.h:801:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Convert_test.h:837:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/win/Registry_c.h:151:20: style: Variable 'array' is assigned a value that is never used. [unreadVariable]
   TCObject *array = null;
                   ^
TotalCrossVM/src/nm/sys/win/Registry_c.h:153:17: style: Variable 'bufSize' is assigned a value that is never used. [unreadVariable]
   DWORD bufSize=255;
                ^
TotalCrossVM/src/nm/sys/Time_test.h:31:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm.c:386:18: style: Suspicious condition (assignment + comparison); Clarify expression with parentheses. [clarifyCondition]
   vmShowKeyCodes(showKeyCodes = p->i32[0] == 1);
                 ^
TotalCrossVM/src/nm/sys/Vm.c:266:9: style: The scope of the variable 'name' can be reduced. [variableScope]
   char name[MAX_PATHNAME];
        ^
TotalCrossVM/src/nm/sys/Vm.c:282:9: style: The scope of the variable 'name' can be reduced. [variableScope]
   char name[MAX_PATHNAME],*c; // usualy a short name
        ^
TotalCrossVM/src/nm/sys/Vm.c:282:29: style: The scope of the variable 'c' can be reduced. [variableScope]
   char name[MAX_PATHNAME],*c; // usualy a short name
                            ^
TotalCrossVM/src/nm/sys/Vm.c:137:18: style: Variable 'szArgs' is assigned a value that is never used. [unreadVariable]
   TCHARP szArgs = null;
                 ^
TotalCrossVM/src/nm/sys/Vm.c:323:17: style: Variable 'nameLen' is assigned a value that is never used. [unreadVariable]
   if ((nameLen = String_charsLen(name)) > 0)
                ^
TotalCrossVM/src/nm/sys/Vm.c:136:11: style: Unused variable: szCommand [unusedVariable]
   TCHARP szCommand;
          ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:140:38: style: The scope of the variable 'p2' can be reduced. [variableScope]
      char pathEnv[4097],*p=pathEnv,*p2;
                                     ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:168:16: style: Local variable 'err' shadows outer variable [shadowVariable]
         DWORD err;
               ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:61:10: note: Shadowed declaration
   DWORD err;
         ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:168:16: note: Shadow variable
         DWORD err;
               ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:205:20: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
               err = GetLastError();
                   ^
TotalCrossVM/src/nm/sys/Vm_test.h:177:4: style: Label 'finish' is not used. [unusedLabel]
   finish:
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:188:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:237:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:248:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:318:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:323:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:354:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:365:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:379:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:394:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:423:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:428:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:433:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:444:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:484:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:498:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:503:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:508:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/sys/Vm_test.h:162:11: style: Variable 'i32[2]' is assigned a value that is never used. [unreadVariable]
   i32[2] = 2;
          ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:367:4: warning: Redundant assignment of 'hClipData' to itself. [selfAssignment]
   ClipboardUnlock (hClipData);
   ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:406:7: warning: Redundant assignment of 'hClipData' to itself. [selfAssignment]
      ClipboardUnlock(hClipData);
      ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:406:7: style: Variable 'hClipData' is assigned a value that is never used. [unreadVariable]
      ClipboardUnlock(hClipData);
      ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:14:26: style: Variable 'newTime.wYear' is assigned a value that is never used. [unreadVariable]
   newTime.wYear         = Time_year(time);
                         ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:15:26: style: Variable 'newTime.wMonth' is assigned a value that is never used. [unreadVariable]
   newTime.wMonth        = Time_month(time);
                         ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:16:26: style: Variable 'newTime.wDay' is assigned a value that is never used. [unreadVariable]
   newTime.wDay          = Time_day(time);
                         ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:17:26: style: Variable 'newTime.wHour' is assigned a value that is never used. [unreadVariable]
   newTime.wHour         = Time_hour(time);
                         ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:18:26: style: Variable 'newTime.wMinute' is assigned a value that is never used. [unreadVariable]
   newTime.wMinute       = Time_minute(time);
                         ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:19:26: style: Variable 'newTime.wSecond' is assigned a value that is never used. [unreadVariable]
   newTime.wSecond       = Time_second(time);
                         ^
TotalCrossVM/src/nm/sys/win/Vm_c.h:21:26: style: Variable 'newTime.wMilliseconds' is assigned a value that is never used. [unreadVariable]
   newTime.wMilliseconds = Time_millis(time);
                         ^
TotalCrossVM/src/nm/telephony/SmsManager.c:15:24: style: Variable 'smsManager' is assigned a value that is never used. [unreadVariable]
   TCObject smsManager = p->obj[0];
                       ^
TotalCrossVM/src/nm/telephony/SmsManager.c:17:23: style: Variable 'scAddress' is assigned a value that is never used. [unreadVariable]
   TCObject scAddress = p->obj[2];
                      ^
TotalCrossVM/src/nm/telephony/SmsManager.c:39:15: style: Variable 'port' is assigned a value that is never used. [unreadVariable]
   int32 port = p->i32[0];
              ^
TotalCrossVM/src/nm/telephony/SmsManager.c:49:22: style: Variable 'smsManager' is assigned a value that is never used. [unreadVariable]
 TCObject smsManager = p->obj[0];
                     ^
TotalCrossVM/src/nm/telephony/SmsManager.c:51:21: style: Variable 'scAddress' is assigned a value that is never used. [unreadVariable]
 TCObject scAddress = p->obj[2];
                    ^
TotalCrossVM/src/nm/telephony/SmsManager.c:52:13: style: Variable 'port' is assigned a value that is never used. [unreadVariable]
 int32 port = p->i32[0];
            ^
TotalCrossVM/src/nm/telephony/TelephonyManager.c:15:25: style: Variable 'deviceIds' is assigned a value that is never used. [unreadVariable]
    TCObject* deviceIds = &TelephonyManager_deviceIds(telephonyManager);
                        ^
TotalCrossVM/src/nm/telephony/TelephonyManager.c:16:32: style: Variable 'simSerialNumbers' is assigned a value that is never used. [unreadVariable]
    TCObject* simSerialNumbers = &TelephonyManager_simSerialNumbers(telephonyManager);
                               ^
TotalCrossVM/src/nm/telephony/TelephonyManager.c:17:27: style: Variable 'lineNumbers' is assigned a value that is never used. [unreadVariable]
    TCObject* lineNumbers = &TelephonyManager_lineNumbers(telephonyManager);
                          ^
TotalCrossVM/src/nm/telephony/android/TelephonyManager_c.h:7:10: style: The scope of the variable 'buffer' can be reduced. [variableScope]
    char buffer[128];
         ^
TotalCrossVM/src/nm/ui/Control_test.h:11:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/MainWindow_test.h:11:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/MainWindow_test.h:16:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/MainWindow_test.h:21:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/Window_test.h:11:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/Window_test.h:16:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/win/Window_c.h:57:17: style: Variable 'sipOption' is assigned a value that is never used. [unreadVariable]
      sipOption = sipOption == SIP_HIDE ? SIP_DISABLE_NUMERICPAD : SIP_ENABLE_NUMERICPAD;
                ^
TotalCrossVM/src/nm/ui/android/skia.cpp:285:18: style: Local variable 'bitmap' shadows outer variable [shadowVariable]
        SkBitmap bitmap;
                 ^
TotalCrossVM/src/nm/ui/android/skia.cpp:126:10: note: Shadowed declaration
SkBitmap bitmap;
         ^
TotalCrossVM/src/nm/ui/android/skia.cpp:285:18: note: Shadow variable
        SkBitmap bitmap;
                 ^
TotalCrossVM/src/nm/ui/android/skia.cpp:312:19: style: Local variable 'bitmap' shadows outer variable [shadowVariable]
        SkBitmap& bitmap = textures[id];
                  ^
TotalCrossVM/src/nm/ui/android/skia.cpp:126:10: note: Shadowed declaration
SkBitmap bitmap;
         ^
TotalCrossVM/src/nm/ui/android/skia.cpp:312:19: note: Shadow variable
        SkBitmap& bitmap = textures[id];
                  ^
TotalCrossVM/src/nm/ui/android/skia.cpp:381:14: style: Local variable 'bitmap' shadows outer variable [shadowVariable]
    SkBitmap bitmap;
             ^
TotalCrossVM/src/nm/ui/android/skia.cpp:126:10: note: Shadowed declaration
SkBitmap bitmap;
         ^
TotalCrossVM/src/nm/ui/android/skia.cpp:381:14: note: Shadow variable
    SkBitmap bitmap;
             ^
TotalCrossVM/src/nm/ui/android/skia.cpp:653:14: style: Local variable 'bitmap' shadows outer variable [shadowVariable]
    SkBitmap bitmap;
             ^
TotalCrossVM/src/nm/ui/android/skia.cpp:126:10: note: Shadowed declaration
SkBitmap bitmap;
         ^
TotalCrossVM/src/nm/ui/android/skia.cpp:653:14: note: Shadow variable
    SkBitmap bitmap;
             ^
TotalCrossVM/src/nm/ui/android/skia.cpp:701:18: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
        bool ret = canvas->readPixels(info, dstPixels, dstInfo.stride, 0, 0);
                 ^
TotalCrossVM/src/nm/ui/event_Event_test.h:11:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:547:65: style:inconclusive: Function 'loadUserFont' argument 3 names different: declaration 'plain' definition 'bold'. [funcArgNamesDifferent]
UserFont loadUserFont(Context currentContext, FontFile ff, bool bold, int32 size, JChar c)
                                                                ^
TotalCrossVM/src/nm/ui/PalmFont.h:72:65: note: Function 'loadUserFont' argument 3 names different: declaration 'plain' definition 'bold'.
UserFont loadUserFont(Context currentContext, FontFile ff, bool plain, int32 size, JChar c);  // use size=-1 to load the normal size
                                                                ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:547:65: note: Function 'loadUserFont' argument 3 names different: declaration 'plain' definition 'bold'.
UserFont loadUserFont(Context currentContext, FontFile ff, bool bold, int32 size, JChar c)
                                                                ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:223:21: style: Local variable 'csc' shadows outer variable [shadowVariable]
      CharSizeCache csc = (CharSizeCache)csclist->value;
                    ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:209:18: note: Shadowed declaration
   CharSizeCache csc;
                 ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:223:21: note: Shadow variable
      CharSizeCache csc = (CharSizeCache)csclist->value;
                    ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:323:19: style: Local variable 'iweight' shadows outer variable [shadowVariable]
            int32 iweight = *p_weight++;
                  ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:187:22: note: Shadowed declaration
   int32 i, j, n, s, iweight, a;
                     ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:323:19: note: Shadow variable
            int32 iweight = *p_weight++;
                  ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:400:17: style: Local variable 'iweight' shadows outer variable [shadowVariable]
            int iweight = *p_weight++;
                ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:187:22: note: Shadowed declaration
   int32 i, j, n, s, iweight, a;
                     ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:400:17: note: Shadow variable
            int iweight = *p_weight++;
                ^
TotalCrossVM/src/nm/ui/PalmFont_c.h:29:57: error: Uninitialized variable: defaultFontNameObj [uninitvar]
   if (!maxfs || !minfs || !normal || !tabSizeField || !defaultFontNameObj)
                                                        ^
TotalCrossVM/src/nm/ui/font_Font_test.h:64:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:51:6: style: Variable 'c' is reassigned a value before the old one has been used. [redundantAssignment]
   c = 'b';
     ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:47:6: note: c is assigned
   c = ' ';
     ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:51:6: note: c is overwritten
   c = 'b';
     ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:55:6: style: Variable 'c' is reassigned a value before the old one has been used. [redundantAssignment]
   c = 0x1234; // invalid char
     ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:51:6: note: c is assigned
   c = 'b';
     ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:55:6: note: c is overwritten
   c = 0x1234; // invalid char
     ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:35:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:59:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:81:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:75:11: style: Variable 'obj[1]' is assigned a value that is never used. [unreadVariable]
   obj[1] = String_chars(s); // get the char array created for the string object
          ^
TotalCrossVM/src/nm/ui/font_FontMetrics_test.h:77:10: style: Variable 'sc[1]' is assigned a value that is never used. [unreadVariable]
   sc[1] = 7; // count
         ^
TotalCrossVM/src/nm/ui/gfx_Graphics.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1652:35: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
   for (i = nPoints2; --i >= 0; yp++)
                                  ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2064:104: note: Calling function 'fillPolygon', 7th argument '0' value is 0
         fillPolygon(currentContext, g, xPoints+startIndex, yPoints+startIndex, endIndex-startIndex, 0,0,0, xc,yc, gradient ? c : c2, c2, gradient, true);
                                                                                                       ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1627:31: note: Assuming condition is Assuming condition is false
   if (!xPoints1 || !yPoints1 || nPoints1 < 2)
                              ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1651:9: note: Assignment 'yp=yPoints2', assigned value is 0
   yp = yPoints2;
        ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1652:35: note: Null pointer addition
   for (i = nPoints2; --i >= 0; yp++)
                                  ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1676:15: style: Variable 'c.pixel' is reassigned a value before the old one has been used. [redundantAssignment]
      c.pixel = c2;
              ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1672:15: note: c.pixel is assigned
      c.pixel = c1;
              ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1676:15: note: c.pixel is overwritten
      c.pixel = c2;
              ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2581:17: style: Redundant initialization for 'pf'. The initialized value is overwritten before it is read. [redundantInitialization]
         for (pf=rowf=f, pt=rowt=t, y = currentContext->dirtyY1; y < currentContext->dirtyY2; y++, pt = (rowt = (Pixel32*)(((uint8*)rowt) + screen.pitch)), pf = (rowf += screenW))
                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2579:161: note: pf is initialized
         PixelConv *f = ((PixelConv*)ARRAYOBJ_START(screen.mainWindowPixels)) + (currentContext->dirtyY1+shiftY) * screenW + currentContext->dirtyX1, *rowf, *pf=f;
                                                                                                                                                                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2581:17: note: pf is overwritten
         for (pf=rowf=f, pt=rowt=t, y = currentContext->dirtyY1; y < currentContext->dirtyY2; y++, pt = (rowt = (Pixel32*)(((uint8*)rowt) + screen.pitch)), pf = (rowf += screenW))
                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2581:28: style: Redundant initialization for 'pt'. The initialized value is overwritten before it is read. [redundantInitialization]
         for (pf=rowf=f, pt=rowt=t, y = currentContext->dirtyY1; y < currentContext->dirtyY2; y++, pt = (rowt = (Pixel32*)(((uint8*)rowt) + screen.pitch)), pf = (rowf += screenW))
                           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2580:137: note: pt is initialized
         Pixel32 *t = ((Pixel32*)BITMAP_PTR(screen.pixels, currentContext->dirtyY1, screen.pitch)) + currentContext->dirtyX1, *rowt, *pt=t;
                                                                                                                                        ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2581:28: note: pt is overwritten
         for (pf=rowf=f, pt=rowt=t, y = currentContext->dirtyY1; y < currentContext->dirtyY2; y++, pt = (rowt = (Pixel32*)(((uint8*)rowt) + screen.pitch)), pf = (rowf += screenW))
                           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2620:17: style: Redundant initialization for 'pf'. The initialized value is overwritten before it is read. [redundantInitialization]
         for (pf=rowf=f, pt=rowt=t, y = currentContext->dirtyY1; y < currentContext->dirtyY2; y++, pt = (rowt = (Pixel24*)(((uint8*)rowt) + screen.pitch)), pf = (rowf += screenW))
                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2618:161: note: pf is initialized
         PixelConv *f = ((PixelConv*)ARRAYOBJ_START(screen.mainWindowPixels)) + (currentContext->dirtyY1+shiftY) * screenW + currentContext->dirtyX1, *rowf, *pf=f;
                                                                                                                                                                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2620:17: note: pf is overwritten
         for (pf=rowf=f, pt=rowt=t, y = currentContext->dirtyY1; y < currentContext->dirtyY2; y++, pt = (rowt = (Pixel24*)(((uint8*)rowt) + screen.pitch)), pf = (rowf += screenW))
                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2620:28: style: Redundant initialization for 'pt'. The initialized value is overwritten before it is read. [redundantInitialization]
         for (pf=rowf=f, pt=rowt=t, y = currentContext->dirtyY1; y < currentContext->dirtyY2; y++, pt = (rowt = (Pixel24*)(((uint8*)rowt) + screen.pitch)), pf = (rowf += screenW))
                           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2619:137: note: pt is initialized
         Pixel24 *t = ((Pixel24*)BITMAP_PTR(screen.pixels, currentContext->dirtyY1, screen.pitch)) + currentContext->dirtyX1, *rowt, *pt=t;
                                                                                                                                        ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2620:28: note: pt is overwritten
         for (pf=rowf=f, pt=rowt=t, y = currentContext->dirtyY1; y < currentContext->dirtyY2; y++, pt = (rowt = (Pixel24*)(((uint8*)rowt) + screen.pitch)), pf = (rowf += screenW))
                           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1607:11: style: The scope of the variable 'newArray' can be reduced. [variableScope]
   int32 *newArray,*oldArray, oldLen;
          ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1607:21: style: The scope of the variable 'oldArray' can be reduced. [variableScope]
   int32 *newArray,*oldArray, oldLen;
                    ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2519:22: style: Local variable 'grayp' shadows outer variable [shadowVariable]
            PixelPal grayp = toGray[gray.r];
                     ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2506:16: note: Shadowed declaration
      PixelPal grayp = toGray[gray.r];
               ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2519:22: note: Shadow variable
            PixelPal grayp = toGray[gray.r];
                     ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2874:12: style: Local variable 'markDirty' shadows outer function [shadowFunction]
      bool markDirty = !currentContext->fullDirty && !Graphics_isImageSurface(g);
           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:213:6: note: Shadowed declaration
void markDirty(Context currentContext, TCObject surface, int x, int y, int w, int h) {
     ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2874:12: note: Shadow variable
      bool markDirty = !currentContext->fullDirty && !Graphics_isImageSurface(g);
           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1470:18: style: Variable 'numSteps' is assigned a value that is never used. [unreadVariable]
   int32 numSteps=0, startRed=0, startGreen=0, startBlue=0, endRed=0, endGreen=0, endBlue=0, redInc=0, greenInc=0, blueInc=0, red=0, green=0, blue=0;
                 ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1470:30: style: Variable 'startRed' is assigned a value that is never used. [unreadVariable]
   int32 numSteps=0, startRed=0, startGreen=0, startBlue=0, endRed=0, endGreen=0, endBlue=0, redInc=0, greenInc=0, blueInc=0, red=0, green=0, blue=0;
                             ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1470:44: style: Variable 'startGreen' is assigned a value that is never used. [unreadVariable]
   int32 numSteps=0, startRed=0, startGreen=0, startBlue=0, endRed=0, endGreen=0, endBlue=0, redInc=0, greenInc=0, blueInc=0, red=0, green=0, blue=0;
                                           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1470:57: style: Variable 'startBlue' is assigned a value that is never used. [unreadVariable]
   int32 numSteps=0, startRed=0, startGreen=0, startBlue=0, endRed=0, endGreen=0, endBlue=0, redInc=0, greenInc=0, blueInc=0, red=0, green=0, blue=0;
                                                        ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1470:67: style: Variable 'endRed' is assigned a value that is never used. [unreadVariable]
   int32 numSteps=0, startRed=0, startGreen=0, startBlue=0, endRed=0, endGreen=0, endBlue=0, redInc=0, greenInc=0, blueInc=0, red=0, green=0, blue=0;
                                                                  ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1470:79: style: Variable 'endGreen' is assigned a value that is never used. [unreadVariable]
   int32 numSteps=0, startRed=0, startGreen=0, startBlue=0, endRed=0, endGreen=0, endBlue=0, redInc=0, greenInc=0, blueInc=0, red=0, green=0, blue=0;
                                                                              ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1470:90: style: Variable 'endBlue' is assigned a value that is never used. [unreadVariable]
   int32 numSteps=0, startRed=0, startGreen=0, startBlue=0, endRed=0, endGreen=0, endBlue=0, redInc=0, greenInc=0, blueInc=0, red=0, green=0, blue=0;
                                                                                         ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:1620:28: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
   int32 x1, y1, x2, y2,y,n=0,temp, i,j, miny, maxy, a, numSteps=0, startRed=0, startGreen=0, startBlue=0, endRed=0, endGreen=0, endBlue=0, redInc=0, greenInc=0, blueInc=0, red=0, green=0, blue=0;
                           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2810:16: style: Variable 'ri' is assigned a value that is never used. [unreadVariable]
            ri = red; gi = green; bi = blue;
               ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2810:26: style: Variable 'gi' is assigned a value that is never used. [unreadVariable]
            ri = red; gi = green; bi = blue;
                         ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2810:38: style: Variable 'bi' is assigned a value that is never used. [unreadVariable]
            ri = red; gi = green; bi = blue;
                                     ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2816:16: style: Variable 'rf' is assigned a value that is never used. [unreadVariable]
            rf = red; gf = green; bf = blue;
               ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2816:26: style: Variable 'gf' is assigned a value that is never used. [unreadVariable]
            rf = red; gf = green; bf = blue;
                         ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2816:38: style: Variable 'bf' is assigned a value that is never used. [unreadVariable]
            rf = red; gf = green; bf = blue;
                                     ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2827:10: style: Variable 'rf' is assigned a value that is never used. [unreadVariable]
      rf = red; gf = green; bf = blue;
         ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2827:20: style: Variable 'gf' is assigned a value that is never used. [unreadVariable]
      rf = red; gf = green; bf = blue;
                   ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2827:32: style: Variable 'bf' is assigned a value that is never used. [unreadVariable]
      rf = red; gf = green; bf = blue;
                               ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2370:12: style: Local variable 'window' shadows outer variable [shadowVariable]
   TCClass window;
           ^
TotalCrossVM/src/nm/ui/android/gfx_Graphics_c.h:32:23: note: Shadowed declaration
static ANativeWindow *window,*lastWindow;
                      ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2370:12: note: Shadow variable
   TCClass window;
           ^
TotalCrossVM/src/nm/ui/android/gfx_Graphics_c.h:103:11: style: Unused variable: i [unusedVariable]
    int32 i;
          ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:3056:17: style: Variable 'screenObj' is assigned a value that is never used. [unreadVariable]
      screenObj = getStaticFieldObject(currentContext,loadClass(currentContext, "totalcross.ui.gfx.Graphics",false), "mainWindowPixels");
                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2652:14: style: The scope of the variable 'r' can be reduced. [variableScope]
   uint32 i, r,g,b;
             ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2652:16: style: The scope of the variable 'g' can be reduced. [variableScope]
   uint32 i, r,g,b;
               ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2652:18: style: The scope of the variable 'b' can be reduced. [variableScope]
   uint32 i, r,g,b;
                 ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2633:34: style: Local variable 'lastShiftY' shadows outer variable [shadowVariable]
   int32 shiftY = 0, shiftH = 0, lastShiftY = 0;
                                 ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2272:66: note: Shadowed declaration
int32 *shiftYfield, *shiftHfield, *lastShiftYfield, *needsPaint, lastShiftY, screenY = 0;
                                                                 ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2633:34: note: Shadow variable
   int32 shiftY = 0, shiftH = 0, lastShiftY = 0;
                                 ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2634:12: style: Local variable 'window' shadows outer variable [shadowVariable]
   TCClass window;
           ^
TotalCrossVM/src/nm/ui/android/gfx_Graphics_c.h:32:23: note: Shadowed declaration
static ANativeWindow *window,*lastWindow;
                      ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2634:12: note: Shadow variable
   TCClass window;
           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:3009:13: style: Local variable 'window' shadows outer variable [shadowVariable]
    TCClass window;
            ^
TotalCrossVM/src/nm/ui/android/gfx_Graphics_c.h:32:23: note: Shadowed declaration
static ANativeWindow *window,*lastWindow;
                      ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:3009:13: note: Shadow variable
    TCClass window;
            ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:447:17: style: Unused variable: p [unusedVariable]
      PixelConv p;
                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2633:17: style: Variable 'shiftY' is assigned a value that is never used. [unreadVariable]
   int32 shiftY = 0, shiftH = 0, lastShiftY = 0;
                ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2633:29: style: Variable 'shiftH' is assigned a value that is never used. [unreadVariable]
   int32 shiftY = 0, shiftH = 0, lastShiftY = 0;
                            ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:2633:45: style: Variable 'lastShiftY' is assigned a value that is never used. [unreadVariable]
   int32 shiftY = 0, shiftH = 0, lastShiftY = 0;
                                            ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:3020:12: style: Variable 'shiftY' is assigned a value that is never used. [unreadVariable]
    shiftY = *shiftYfield;
           ^
TotalCrossVM/src/nm/ui/GraphicsPrimitives_c.h:3021:12: style: Variable 'shiftH' is assigned a value that is never used. [unreadVariable]
    shiftH = *shiftHfield;
           ^
TotalCrossVM/src/nm/ui/gfx_Graphics_test.h:252:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/gfx_Graphics_test.h:142:9: style: Variable 'fore' is assigned a value that is never used. [unreadVariable]
   fore = makePixel(0,255,255);
        ^
TotalCrossVM/src/nm/ui/gfx_Graphics_test.h:143:9: style: Variable 'back' is assigned a value that is never used. [unreadVariable]
   back = makePixel(255,255,0);
        ^
TotalCrossVM/src/nm/ui/gfx_Graphics_test.h:230:11: style: Variable 'obj[1]' is assigned a value that is never used. [unreadVariable]
   obj[1] = null;
          ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:558:17: style: Variable 'out->a' is reassigned a value before the old one has been used. [redundantAssignment]
         out->a = in->a;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:553:14: note: out->a is assigned
      out->a = in->a;
             ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:558:17: note: out->a is overwritten
         out->a = in->a;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:559:17: style: Variable 'out->r' is reassigned a value before the old one has been used. [redundantAssignment]
         out->r = (in->r + (int32)r) >> 1;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:554:14: note: out->r is assigned
      out->r = (in->r + (int32)r) >> 1;
             ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:559:17: note: out->r is overwritten
         out->r = (in->r + (int32)r) >> 1;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:560:17: style: Variable 'out->g' is reassigned a value before the old one has been used. [redundantAssignment]
         out->g = (in->g + (int32)g) >> 1;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:555:14: note: out->g is assigned
      out->g = (in->g + (int32)g) >> 1;
             ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:560:17: note: out->g is overwritten
         out->g = (in->g + (int32)g) >> 1;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:561:17: style: Variable 'out->b' is reassigned a value before the old one has been used. [redundantAssignment]
         out->b = (in->b + (int32)b) >> 1;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:556:14: note: out->b is assigned
      out->b = (in->b + (int32)b) >> 1;
             ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:561:17: note: out->b is overwritten
         out->b = (in->b + (int32)b) >> 1;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:340:11: style: The scope of the variable 'dst' can be reduced. [variableScope]
   Pixel *dst,*src;
          ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:185:19: style: Local variable 'iweight' shadows outer variable [shadowVariable]
            int32 iweight = *p_weight++;
                  ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:80:24: note: Shadowed declaration
   int32 i=0, j, n, s, iweight,a,r,g,b;
                       ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:185:19: note: Shadow variable
            int32 iweight = *p_weight++;
                  ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:272:17: style: Local variable 'iweight' shadows outer variable [shadowVariable]
            int iweight = *p_weight++;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:80:24: note: Shadowed declaration
   int32 i=0, j, n, s, iweight,a,r,g,b;
                       ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:272:17: note: Shadow variable
            int iweight = *p_weight++;
                ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:45:12: style: Variable 'c.pixel' is assigned a value that is never used. [unreadVariable]
   c.pixel = color;
           ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:336:13: style: Variable 'wf' is assigned a value that is never used. [unreadVariable]
   int32 wf = 0;
            ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:547:15: style: Variable 'back.pixel' is assigned a value that is never used. [unreadVariable]
   back.pixel = backColor;
              ^
TotalCrossVM/src/nm/ui/ImagePrimitives_c.h:618:12: style: Variable 'c.pixel' is assigned a value that is never used. [unreadVariable]
   c.pixel = color;
           ^
TotalCrossVM/src/nm/ui/image_Image.c:209:26: style: Variable 'inputPathObj' is assigned a value that is never used. [unreadVariable]
   TCObject inputPathObj = p->obj[0];
                         ^
TotalCrossVM/src/nm/ui/image_Image.c:210:27: style: Variable 'outputPathObj' is assigned a value that is never used. [unreadVariable]
   TCObject outputPathObj = p->obj[1];
                          ^
TotalCrossVM/src/nm/ui/image_Image.c:211:23: style: Variable 'maxPixelSize' is assigned a value that is never used. [unreadVariable]
   int32 maxPixelSize = p->i32[0];
                      ^
TotalCrossVM/src/nm/ui/image_Image.c:241:25: style: Variable 'initMethod' is assigned a value that is never used. [unreadVariable]
         && (initMethod = getMethod(OBJ_CLASS(imageObj), false, "init", 0)) != NULL ) {
                        ^
TotalCrossVM/src/nm/ui/image_Image.c:286:25: style: Variable 'initMethod' is assigned a value that is never used. [unreadVariable]
         && (initMethod = getMethod(OBJ_CLASS(imageObj), false, "init", 0)) != NULL ) {
                        ^
TotalCrossVM/src/nm/ui/image_Image_test.h:55:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/image_Image_test.h:60:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/image_Image_test.h:65:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/image_Image_test.h:70:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/image_Image_test.h:75:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/darwin/media_Camera_c.h:27:10: style: The scope of the variable 'fileName' can be reduced. [variableScope]
    char fileName[MAX_PATHNAME];
         ^
TotalCrossVM/src/nm/ui/media_MediaClip.c:28:14: style: The scope of the variable 'media' can be reduced. [variableScope]
   MediaData media;
             ^
TotalCrossVM/src/nm/ui/media_MediaClip_test.h:48:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/media_MediaClip_test.h:53:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/media_MediaClip_test.h:58:4: style: Label 'finish' is not used. [unusedLabel]
   finish: ;
   ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:240:8: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
   err = waveInAddBuffer(media->waveIN, &media->waveInBuffer.headers[0], sizeof(WAVEHDR));
       ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:238:11: note: err is assigned
      err = waveInPrepareHeader(media->waveIN, &media->waveInBuffer.headers[i], sizeof(WAVEHDR));
          ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:240:8: note: err is overwritten
   err = waveInAddBuffer(media->waveIN, &media->waveInBuffer.headers[0], sizeof(WAVEHDR));
       ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:244:8: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
   err = waveInStart(media->waveIN);
       ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:240:8: note: err is assigned
   err = waveInAddBuffer(media->waveIN, &media->waveInBuffer.headers[0], sizeof(WAVEHDR));
       ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:244:8: note: err is overwritten
   err = waveInStart(media->waveIN);
       ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:302:11: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
      err = waveOutWrite(media->waveOUT, current, sizeof(WAVEHDR));
          ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:301:11: note: err is assigned
      err = waveOutPrepareHeader(media->waveOUT, current, sizeof(WAVEHDR));
          ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:302:11: note: err is overwritten
      err = waveOutWrite(media->waveOUT, current, sizeof(WAVEHDR));
          ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:261:4: style:inconclusive: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
   return;
   ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:318:13: style: The scope of the variable 'current' can be reduced. [variableScope]
   WAVEHDR* current;
            ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:319:13: style: The scope of the variable 'next' can be reduced. [variableScope]
   WAVEHDR* next;
            ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:139:16: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      if ((err = waveOutClose(media->waveOUT)) != MMSYSERR_NOERROR)
               ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:148:11: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      err = waveInClose(media->waveIN);
          ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:244:8: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   err = waveInStart(media->waveIN);
       ^
TotalCrossVM/src/nm/ui/win/media_MediaClip_c.h:333:11: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      err = waveInPrepareHeader(media->waveIN, next, sizeof(WAVEHDR));
          ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:383:27: style:inconclusive: Function 'getDeviceIdCPP' argument 1 names different: declaration 'buf' definition 'ret'. [funcArgNamesDifferent]
void getDeviceIdCPP(CharP ret)
                          ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.h:101:27: note: Function 'getDeviceIdCPP' argument 1 names different: declaration 'buf' definition 'ret'.
void getDeviceIdCPP(CharP buf);
                          ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:383:27: note: Function 'getDeviceIdCPP' argument 1 names different: declaration 'buf' definition 'ret'.
void getDeviceIdCPP(CharP ret)
                          ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:388:34: style:inconclusive: Function 'getRomSerialNumberCPP' argument 1 names different: declaration 'buf' definition 'ret'. [funcArgNamesDifferent]
void getRomSerialNumberCPP(CharP ret)
                                 ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.h:102:34: note: Function 'getRomSerialNumberCPP' argument 1 names different: declaration 'buf' definition 'ret'.
void getRomSerialNumberCPP(CharP buf);
                                 ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:388:34: note: Function 'getRomSerialNumberCPP' argument 1 names different: declaration 'buf' definition 'ret'.
void getRomSerialNumberCPP(CharP ret)
                                 ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:202:20: warning:inconclusive: Found suspicious operator '^' [constStatement]
   Platform::String^ messageReceived;
                   ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:203:20: warning:inconclusive: Found suspicious operator '^' [constStatement]
   Platform::String^ lowSignalReason;
                   ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:292:23: style:inconclusive: Function 'dxFillRect' argument 1 names different: declaration 'x1' definition 'x'. [funcArgNamesDifferent]
void dxFillRect(int32 x, int32 y, int32 w, int32 h, int color)
                      ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.h:74:21: note: Function 'dxFillRect' argument 1 names different: declaration 'x1' definition 'x'.
void dxFillRect(int x1, int y1, int x2, int y2, int color);
                    ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:292:23: note: Function 'dxFillRect' argument 1 names different: declaration 'x1' definition 'x'.
void dxFillRect(int32 x, int32 y, int32 w, int32 h, int color)
                      ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:292:32: style:inconclusive: Function 'dxFillRect' argument 2 names different: declaration 'y1' definition 'y'. [funcArgNamesDifferent]
void dxFillRect(int32 x, int32 y, int32 w, int32 h, int color)
                               ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.h:74:29: note: Function 'dxFillRect' argument 2 names different: declaration 'y1' definition 'y'.
void dxFillRect(int x1, int y1, int x2, int y2, int color);
                            ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:292:32: note: Function 'dxFillRect' argument 2 names different: declaration 'y1' definition 'y'.
void dxFillRect(int32 x, int32 y, int32 w, int32 h, int color)
                               ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:292:41: style:inconclusive: Function 'dxFillRect' argument 3 names different: declaration 'x2' definition 'w'. [funcArgNamesDifferent]
void dxFillRect(int32 x, int32 y, int32 w, int32 h, int color)
                                        ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.h:74:37: note: Function 'dxFillRect' argument 3 names different: declaration 'x2' definition 'w'.
void dxFillRect(int x1, int y1, int x2, int y2, int color);
                                    ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:292:41: note: Function 'dxFillRect' argument 3 names different: declaration 'x2' definition 'w'.
void dxFillRect(int32 x, int32 y, int32 w, int32 h, int color)
                                        ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:292:50: style:inconclusive: Function 'dxFillRect' argument 4 names different: declaration 'y2' definition 'h'. [funcArgNamesDifferent]
void dxFillRect(int32 x, int32 y, int32 w, int32 h, int color)
                                                 ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.h:74:45: note: Function 'dxFillRect' argument 4 names different: declaration 'y2' definition 'h'.
void dxFillRect(int x1, int y1, int x2, int y2, int color);
                                            ^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:292:50: note: Function 'dxFillRect' argument 4 names different: declaration 'y2' definition 'h'.
void dxFillRect(int32 x, int32 y, int32 w, int32 h, int color)
                                                 ^
TotalCrossVM/src/nm/util/BigInteger.c:133:17: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
         q += 1 << 31;
                ^
TotalCrossVM/src/nm/util/BigInteger.c:133:17: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
         q += 1 << 31;
                ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 66 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:146:15: style: Variable 'p->retI' is reassigned a value before the old one has been used. [redundantAssignment]
      p->retI = result;
              ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:131:21: note: p->retI is assigned
            p->retI = -1;
                    ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:146:15: note: p->retI is overwritten
      p->retI = result;
              ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:129:44: style: Checking if unsigned expression 'zstreamRef->c_stream.avail_in' is less than zero. [unsignedLessThanZero]
         if (zstreamRef->c_stream.avail_in < 0)
                                           ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:55:12: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   Err err = Z_OK;
           ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:69:16: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      if ((err = inflateInit2(&zstreamRef->c_stream, 32 + MAX_WBITS)) != Z_OK)
               ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:83:12: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   Err err = Z_OK;
           ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:95:16: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      if ((err = deflateInit2(&zstreamRef->c_stream, Z_DEFAULT_COMPRESSION, Z_DEFLATED, bits, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY)) != Z_OK) //flsobral@tc114_82: now supports GZip compression.
               ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:162:12: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   Err err = Z_OK;
           ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:175:19: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
         if ((err = deflate(&zstreamRef->c_stream, Z_NO_FLUSH)) != Z_OK)
                  ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:222:22: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
            if ((err = deflateEnd(&zstreamRef->c_stream)) != Z_OK)
                     ^
TotalCrossVM/src/nm/util/zip/CompressedStream.c:227:22: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
            if ((err = inflateEnd(&zstreamRef->c_stream)) != Z_OK)
                     ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:20:25: style: Variable 'zipEntryObj' is assigned a value that is never used. [unreadVariable]
   TCObject zipEntryObj = p->obj[0];
                        ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:21:15: style: Variable 'time' is assigned a value that is never used. [unreadVariable]
   int64 time = p->i64[0];
              ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:38:8: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
   err = FileTimeToSystemTime(&fileTimeLocal, &systemTime);
       ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:36:8: note: err is assigned
   err = FileTimeToLocalFileTime((FILETIME*) &fileTimeUTC, &fileTimeLocal);
       ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:38:8: note: err is overwritten
   err = FileTimeToSystemTime(&fileTimeLocal, &systemTime);
       ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:87:11: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
      err = LocalFileTimeToFileTime(&fileTimeLocal, (FILETIME*) &fileTimeUTC);
          ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:83:11: note: err is assigned
      err = SystemTimeToFileTime(&systemTime, &fileTimeLocal);
          ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:87:11: note: err is overwritten
      err = LocalFileTimeToFileTime(&fileTimeLocal, (FILETIME*) &fileTimeUTC);
          ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:38:8: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   err = FileTimeToSystemTime(&fileTimeLocal, &systemTime);
       ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:87:11: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      err = LocalFileTimeToFileTime(&fileTimeLocal, (FILETIME*) &fileTimeUTC);
          ^
TotalCrossVM/src/nm/util/zip/ZipEntry.c:83:11: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      err = SystemTimeToFileTime(&systemTime, &fileTimeLocal);
          ^
TotalCrossVM/src/nm/util/zip/ZipFile.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/nm/util/zip/ZipFile.c:276:9: style: The scope of the variable 'zipEntryName' can be reduced. [variableScope]
   char zipEntryName[MAX_PATHNAME];
        ^
TotalCrossVM/src/nm/util/zip/ZipFile.c:344:9: style: The scope of the variable 'zipEntryName' can be reduced. [variableScope]
   char zipEntryName[MAX_PATHNAME];
        ^
TotalCrossVM/src/nm/util/zip/ZipFile.c:260:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = unzGetCurrentFileInfo(*unzipFile, &file_info, null, 0, null, 0, null, 0)) != UNZ_OK)
            ^
TotalCrossVM/src/nm/util/zip/ZipFile.c:294:21: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      else if ((err = unzGetCurrentFileInfo(zipNativeP->zipFile, &file_info, zipEntryName, MAX_PATHNAME, null, 0, null, 0)) != UNZ_OK)
                    ^
TotalCrossVM/src/nm/util/zip/ZipFile.c:304:21: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      else if ((err = unzGetCurrentFileInfo(zipNativeP->zipFile, &file_info, zipEntryName, MAX_PATHNAME,
                    ^
TotalCrossVM/src/nm/util/zip/ZipFile.c:428:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = zipOpenNewFileInZip(zipNativeP->zipFile, zipEntryNameP, &fileInfo,
            ^
TotalCrossVM/src/nm/util/zip/ZipFile.c:549:16: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      if ((err = unzClose(zipNativeP->zipFile)) != UNZ_OK)
               ^
TotalCrossVM/src/nm/util/zip/ZipFile.c:582:16: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      if ((err = zipClose(zipNativeP->zipFile, null)) != UNZ_OK)
               ^
TotalCrossVM/src/nm/util/zip_ZLib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 66 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/nm/util/zip_ZLib_test.h:112:4: style: Label 'finish' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   finish:
   ^
TotalCrossVM/src/openbsd/libutil/pkcs5_pbkdf2.c:116:9: style: The scope of the variable 'r' can be reduced. [variableScope]
 size_t r;
        ^
TotalCrossVM/src/openbsd/libutil/pkcs5_pbkdf2.c:171:17: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
            ret = pkcs5_pbkdf2(password, passLen, ARRAYOBJ_START(saltObj), ARRAYOBJ_LEN(saltObj), ARRAYOBJ_START(keyObj), ARRAYOBJ_LEN(keyObj), iterations);
                ^
TotalCrossVM/src/palmdb/palmdb.c:693:8: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
   err = PDBWriteAt(db->fh, &modNumber, 2, 50, &bytesRW);
       ^
TotalCrossVM/src/palmdb/palmdb.c:690:8: note: err is assigned
   err = PDBWriteAt(db->fh, &numRecords, 2, 76, &bytesRW);
       ^
TotalCrossVM/src/palmdb/palmdb.c:693:8: note: err is overwritten
   err = PDBWriteAt(db->fh, &modNumber, 2, 50, &bytesRW);
       ^
TotalCrossVM/src/palmdb/palmdb.c:79:9: style: The scope of the variable 'changed' can be reduced. [variableScope]
   bool changed;
        ^
TotalCrossVM/src/palmdb/palmdb.c:81:9: style: The scope of the variable 'appending' can be reduced. [variableScope]
   bool appending;
        ^
TotalCrossVM/src/palmdb/palmdb.c:728:16: style: The scope of the variable 'rl' can be reduced. [variableScope]
   RecordList *rl;
               ^
TotalCrossVM/src/palmdb/palmdb.c:55:30: style:inconclusive: Function 'myDmRecordInfo' argument 1 names different: declaration 'dbref' definition 'dbP'. [funcArgNamesDifferent]
Err myDmRecordInfo(DmOpenRef dbP, uint16 index, uint16* attrs)
                             ^
TotalCrossVM/src/palmdb/palmdb.h:339:30: note: Function 'myDmRecordInfo' argument 1 names different: declaration 'dbref' definition 'dbP'.
Err myDmRecordInfo(DmOpenRef dbref, uint16 index, uint16* attrs); //int8* attrs);
                             ^
TotalCrossVM/src/palmdb/palmdb.c:55:30: note: Function 'myDmRecordInfo' argument 1 names different: declaration 'dbref' definition 'dbP'.
Err myDmRecordInfo(DmOpenRef dbP, uint16 index, uint16* attrs)
                             ^
TotalCrossVM/src/palmdb/palmdb.c:61:33: style:inconclusive: Function 'myDmSetRecordInfo' argument 1 names different: declaration 'dbref' definition 'dbP'. [funcArgNamesDifferent]
Err myDmSetRecordInfo(DmOpenRef dbP, uint16 index, uint16 attrs)
                                ^
TotalCrossVM/src/palmdb/palmdb.h:340:33: note: Function 'myDmSetRecordInfo' argument 1 names different: declaration 'dbref' definition 'dbP'.
Err myDmSetRecordInfo(DmOpenRef dbref, uint16 index, uint16 attrs); //int8 attrs);
                                ^
TotalCrossVM/src/palmdb/palmdb.c:61:33: note: Function 'myDmSetRecordInfo' argument 1 names different: declaration 'dbref' definition 'dbP'.
Err myDmSetRecordInfo(DmOpenRef dbP, uint16 index, uint16 attrs)
                                ^
TotalCrossVM/src/palmdb/palmdb.c:70:33: style:inconclusive: Function 'myDmReleaseRecord' argument 1 names different: declaration 'dbref' definition 'dbP'. [funcArgNamesDifferent]
Err myDmReleaseRecord(DmOpenRef dbP, int32 index, bool dirty)
                                ^
TotalCrossVM/src/palmdb/palmdb.h:320:33: note: Function 'myDmReleaseRecord' argument 1 names different: declaration 'dbref' definition 'dbP'.
Err myDmReleaseRecord(DmOpenRef dbref, int32 index, bool dirty);
                                ^
TotalCrossVM/src/palmdb/palmdb.c:70:33: note: Function 'myDmReleaseRecord' argument 1 names different: declaration 'dbref' definition 'dbP'.
Err myDmReleaseRecord(DmOpenRef dbP, int32 index, bool dirty)
                                ^
TotalCrossVM/src/palmdb/palmdb.c:233:33: style:inconclusive: Function 'myDmCloseDatabase' argument 1 names different: declaration 'dbref' definition 'dbP'. [funcArgNamesDifferent]
Err myDmCloseDatabase(DmOpenRef dbP)
                                ^
TotalCrossVM/src/palmdb/palmdb.h:319:33: note: Function 'myDmCloseDatabase' argument 1 names different: declaration 'dbref' definition 'dbP'.
Err myDmCloseDatabase(DmOpenRef dbref);
                                ^
TotalCrossVM/src/palmdb/palmdb.c:233:33: note: Function 'myDmCloseDatabase' argument 1 names different: declaration 'dbref' definition 'dbP'.
Err myDmCloseDatabase(DmOpenRef dbP)
                                ^
TotalCrossVM/src/palmdb/palmdb.c:414:31: style:inconclusive: Function 'myDmCreateDatabase' argument 1 names different: declaration 'pdbName' definition 'fileName'. [funcArgNamesDifferent]
Err myDmCreateDatabase(TCHARP fileName, uint32 creator, uint32 type, bool isResDB)
                              ^
TotalCrossVM/src/palmdb/palmdb.h:327:31: note: Function 'myDmCreateDatabase' argument 1 names different: declaration 'pdbName' definition 'fileName'.
Err myDmCreateDatabase(TCHARP pdbName, uint32 creator, uint32 type, bool isResDB);
                              ^
TotalCrossVM/src/palmdb/palmdb.c:414:31: note: Function 'myDmCreateDatabase' argument 1 names different: declaration 'pdbName' definition 'fileName'.
Err myDmCreateDatabase(TCHARP fileName, uint32 creator, uint32 type, bool isResDB)
                              ^
TotalCrossVM/src/palmdb/palmdb.c:698:37: style:inconclusive: Function 'myDmQueryRecord' argument 1 names different: declaration 'dbref' definition 'dbP'. [funcArgNamesDifferent]
MemHandle myDmQueryRecord(DmOpenRef dbP, uint16 index)
                                    ^
TotalCrossVM/src/palmdb/palmdb.h:342:37: note: Function 'myDmQueryRecord' argument 1 names different: declaration 'dbref' definition 'dbP'.
MemHandle myDmQueryRecord(DmOpenRef dbref, uint16 index);
                                    ^
TotalCrossVM/src/palmdb/palmdb.c:698:37: note: Function 'myDmQueryRecord' argument 1 names different: declaration 'dbref' definition 'dbP'.
MemHandle myDmQueryRecord(DmOpenRef dbP, uint16 index)
                                    ^
TotalCrossVM/src/palmdb/palmdb.c:715:33: style:inconclusive: Function 'myDmNumRecords' argument 1 names different: declaration 'db' definition 'dbP'. [funcArgNamesDifferent]
uint16 myDmNumRecords(DmOpenRef dbP)
                                ^
TotalCrossVM/src/palmdb/palmdb.h:334:34: note: Function 'myDmNumRecords' argument 1 names different: declaration 'db' definition 'dbP'.
uint16 myDmNumRecords (DmOpenRef db);
                                 ^
TotalCrossVM/src/palmdb/palmdb.c:715:33: note: Function 'myDmNumRecords' argument 1 names different: declaration 'db' definition 'dbP'.
uint16 myDmNumRecords(DmOpenRef dbP)
                                ^
TotalCrossVM/src/palmdb/palmdb.c:722:64: style:inconclusive: Function 'myDmResizeRecord' argument 3 names different: declaration 'newSize' definition 'size'. [funcArgNamesDifferent]
MemHandle myDmResizeRecord(DmOpenRef dbP, uint16 index, uint32 size)
                                                               ^
TotalCrossVM/src/palmdb/palmdb.h:335:11: note: Function 'myDmResizeRecord' argument 3 names different: declaration 'newSize' definition 'size'.
MemHandle DmResizeRecord (DmOpenRef dbP, uint16 index, uint32 newSize);
          ^
TotalCrossVM/src/palmdb/palmdb.c:722:64: note: Function 'myDmResizeRecord' argument 3 names different: declaration 'newSize' definition 'size'.
MemHandle myDmResizeRecord(DmOpenRef dbP, uint16 index, uint32 size)
                                                               ^
TotalCrossVM/src/palmdb/palmdb.c:693:8: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   err = PDBWriteAt(db->fh, &modNumber, 2, 50, &bytesRW);
       ^
TotalCrossVM/src/palmdb/palmdb.c:705:20: style: Variable 'currentIndex' is assigned a value that is never used. [unreadVariable]
      currentIndex = db->recordIndex;
                   ^
TotalCrossVM/src/palmdb/palmdb.c:1255:20: style: Variable 'recordBuf' is assigned a value that is never used. [unreadVariable]
   CharP recordBuf = null;
                   ^
TotalCrossVM/src/png/PngLoader.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 135 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/PngLoader.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/png.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 238 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/png.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngerror.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 202 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngerror.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngget.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 226 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngget.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngmem.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 186 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngmem.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngpread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 201 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngpread.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 249 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngread.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngrio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 184 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngrio.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngrtran.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 242 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngrtran.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngrutil.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 244 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngrutil.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngset.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 217 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngset.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/png/pngtrans.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 206 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/png/pngtrans.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
TotalCrossVM/src/ras/ras_Utils.c:190:9: style: The scope of the variable 'buffer' can be reduced. [variableScope]
   char buffer[64];
        ^
TotalCrossVM/src/scanner/datalogic/Datalogic_barcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/scanner/dolphin/Dolphin_barcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/scanner/dolphin/Dolphin_barcode.c:120:21: style: Variable 'checkDigit' is assigned a value that is never used. [unreadVariable]
   int32 checkDigit = 0;
                    ^
TotalCrossVM/src/scanner/dolphin/Dolphin_barcode.c:117:9: style: Unused variable: barcode2 [unusedVariable]
   char barcode2[MAX_MESSAGE_LENGTH];
        ^
TotalCrossVM/src/scanner/dolphin/Dolphin_barcode.c:224:18: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   else if ((err = decConnectProc()) != RESULT_SUCCESS)
                 ^
TotalCrossVM/src/scanner/dolphin/Dolphin_barcode.c:239:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = decEnableDisableSymbologyProc(barcodeType, enable)) != RESULT_SUCCESS)
            ^
TotalCrossVM/src/scanner/dolphin/Dolphin_barcode.c:286:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = decGetDecoderRevisionProc(buf)) != RESULT_SUCCESS)
            ^
TotalCrossVM/src/scanner/dolphin/Dolphin_barcode.c:297:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = decGetDecoderRevisionProc(buf)) != RESULT_SUCCESS)
            ^
TotalCrossVM/src/scanner/dolphin/Dolphin_barcode.c:308:13: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   if ((err = decDisconnectProc()) != RESULT_SUCCESS)
            ^
TotalCrossVM/src/scanner/dolphin/Dolphin_camera.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/scanner/dolphin/Dolphin_camera.c:127:305: style: Same expression on both sides of '&&'. [duplicateExpression]
   return imgGammaCorrection && imgGetAimer && imgCreateHDIB && imgInitCamera && imgUninitCamera && imgDisplayImage && imgStopCapture && imgCaptureImage && imgStartCapture && imgSaveJPG && imgWidth && imgHeight && imgBitCount && imgNumColors && imgSetAimer && imgSetIllumination && imgHistogramStretchEx && imgGammaCorrection;
                                                                                                                                                                                                                                                                                                                ^
TotalCrossVM/src/scanner/dolphin/Dolphin_camera.c:241:9: style: The scope of the variable 'wmId' can be reduced. [variableScope]
    int wmId, wmEvent;
        ^
TotalCrossVM/src/scanner/dolphin/Dolphin_camera.c:241:15: style: The scope of the variable 'wmEvent' can be reduced. [variableScope]
    int wmId, wmEvent;
              ^
TotalCrossVM/src/scanner/dolphin/Dolphin_camera.c:258:28: style: Variable 'error' is assigned a value that is never used. [unreadVariable]
                  int error=0;
                           ^
TotalCrossVM/src/scanner/dolphin/Dolphin_camera.c:378:17: style: Variable 'hdc' is assigned a value that is never used. [unreadVariable]
            hdc = GetDC(hWnd);
                ^
TotalCrossVM/src/scanner/dolphin/Dolphin_camera.c:134:8: style: Unused variable: msg [unusedVariable]
   MSG msg;
       ^
TotalCrossVM/src/scanner/intermec/Intermec_barcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/scanner/opticonh16/OpticonH16_barcode.c:147:16: style: Variable 'value' is assigned a value that is never used. [unreadVariable]
   int32 value = p->i32[1];
               ^
TotalCrossVM/src/scanner/pidion/CameraNatives.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/scanner/pidion/CameraNatives.cpp:104:26: style: Variable '((int32*)((uint8*)(obj)))[8]' is assigned a value that is never used. [unreadVariable]
      CAM_errorCode(obj) = ret;
                         ^
TotalCrossVM/src/scanner/pidion/CameraNatives.cpp:138:29: style: Variable '((int32*)((uint8*)(obj)))[8]' is assigned a value that is never used. [unreadVariable]
         CAM_errorCode(obj) = ret;
                            ^
TotalCrossVM/src/scanner/pidion/PidionLib.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/scanner/socketscan/SocketScan_barcode.c:164:22: style: Variable 'barcodeType' is assigned a value that is never used. [unreadVariable]
   int32 barcodeType = p->i32[0];
                     ^
TotalCrossVM/src/scanner/socketscan/SocketScan_barcode.c:165:16: style: Variable 'value' is assigned a value that is never used. [unreadVariable]
   int32 value = p->i32[1];
               ^
TotalCrossVM/src/scanner/socketscan/SocketScan_barcode.c:175:15: style: Variable 'type' is assigned a value that is never used. [unreadVariable]
   int32 type = p->i32[0];
              ^
TotalCrossVM/src/scanner/socketscan/SocketScan_barcode.c:176:22: style: Variable 'barcodeType' is assigned a value that is never used. [unreadVariable]
   int32 barcodeType = p->i32[1];
                     ^
TotalCrossVM/src/scanner/socketscan/SocketScan_barcode.c:177:16: style: Variable 'value' is assigned a value that is never used. [unreadVariable]
   int32 value = p->i32[2];
               ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:157:9: style: The scope of the variable 'msg' can be reduced. [variableScope]
   char msg[128];
        ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:802:11: style: The scope of the variable 'barcode' can be reduced. [variableScope]
   TCHAR *barcode;
          ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:424:22: style: Local variable 'dwResult' shadows outer variable [shadowVariable]
               DWORD dwResult;
                     ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:352:13: note: Shadowed declaration
      DWORD dwResult = 0;
            ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:424:22: note: Shadow variable
               DWORD dwResult;
                     ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:711:62: error: Uninitialized variable: Decoder [uninitvar]
   if ((dwResult = TranslateDecoder(barcodeType, (LPDECODER) Decoder)))
                                                             ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:711:18: style: Variable 'dwResult' is assigned a value that is never used. [unreadVariable]
   if ((dwResult = TranslateDecoder(barcodeType, (LPDECODER) Decoder)))
                 ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:722:22: style: Variable 'barcodetype' is assigned a value that is never used. [unreadVariable]
   int32 barcodetype = p->i32[1];
                     ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:781:19: style: Variable 'dwResult' is assigned a value that is never used. [unreadVariable]
   if (!(dwResult = TranslateDecoder(barcodeType, (LPDECODER) Decoder)))
                  ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:805:18: style: Variable 'dwResult' is assigned a value that is never used. [unreadVariable]
   if ((dwResult = SCNBUF_GETSTAT(lpScanBuffer)) != E_SCN_SUCCESS)
                 ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:826:18: style: Variable 'dwResult' is assigned a value that is never used. [unreadVariable]
   if ((dwResult = SCAN_GetVersionInfo(hScanner, &scanVersionInfo)) != E_SCN_SUCCESS)
                 ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:847:18: style: Variable 'dwResult' is assigned a value that is never used. [unreadVariable]
   if ((dwResult = SCAN_GetVersionInfo(hScanner, &scanVersionInfo)) != E_SCN_SUCCESS)
                 ^
TotalCrossVM/src/scanner/symbol/Symbol_barcode.c:681:8: error: Syntax Error: AST broken, binary operator '=' doesn't have two operands. [internalAstError]
   ret = PostMessage(getMainWindowHandle(), UM_SCAN_ERROR, 0, (LPARAM)szMsg) != 0; // Zero means failure.
       ^
TotalCrossVM/src/sync/Conduit.cpp:1373:25: style: Redundant condition: idx>=0. 'A || (!A && B)' is equivalent to 'A || B' [redundantCondition]
            if (idx < 0 || (idx >= 0 && procSyncReadRecordByIndex(info) == SYNCERR_NONE)) // appending or overwriting. if overwriting, get the record id
                        ^
TotalCrossVM/src/sync/Conduit.cpp:483:9: style: The scope of the variable 'pathLower' can be reduced. [variableScope]
   char pathLower[16384],vmPathLower[MAX_PATHNAME];
        ^
TotalCrossVM/src/sync/Conduit.cpp:483:26: style: The scope of the variable 'vmPathLower' can be reduced. [variableScope]
   char pathLower[16384],vmPathLower[MAX_PATHNAME];
                         ^
TotalCrossVM/src/sync/Conduit.cpp:616:9: style: The scope of the variable 'classPath' can be reduced. [variableScope]
   char classPath[512];
        ^
TotalCrossVM/src/sync/Conduit.cpp:689:9: style: The scope of the variable 'fullPath' can be reduced. [variableScope]
   char fullPath[512];
        ^
TotalCrossVM/src/sync/Conduit.cpp:715:12: style: The scope of the variable 'fullPath' can be reduced. [variableScope]
      char fullPath[512];
           ^
TotalCrossVM/src/sync/Conduit.cpp:1344:11: style: The scope of the variable 'buf' can be reduced. [variableScope]
   uint8* buf;
          ^
TotalCrossVM/src/sync/Conduit.cpp:1662:15: style: The scope of the variable 'bufn' can be reduced. [variableScope]
         char bufn[20];
              ^
TotalCrossVM/src/sync/Conduit.cpp:1663:17: style: The scope of the variable 'read' can be reduced. [variableScope]
         size_t read;
                ^
TotalCrossVM/src/sync/Conduit.cpp:1668:16: style: The scope of the variable 'dataP' can be reduced. [variableScope]
         char* dataP;
               ^
TotalCrossVM/src/sync/Conduit.cpp:1719:13: style: The scope of the variable 'buff' can be reduced. [variableScope]
       char buff[5006];
            ^
TotalCrossVM/src/sync/Conduit.cpp:1799:14: style: The scope of the variable 'ofs' can be reduced. [variableScope]
         int ofs = 0;
             ^
TotalCrossVM/src/sync/Conduit.cpp:1850:13: style: The scope of the variable 'buff' can be reduced. [variableScope]
       char buff[5006];
            ^
TotalCrossVM/src/sync/Conduit.cpp:1902:9: style: The scope of the variable 'szFileOrFolderA' can be reduced. [variableScope]
   char szFileOrFolderA[MAX_PATH];
        ^
TotalCrossVM/src/sync/Conduit.cpp:1683:94: style: Checking if unsigned expression 'read=fread(dataP,1,65400-(dataP-dstFileNameP),srcRef)' is less than zero. [unsignedLessThanZero]
            if ((read = fread(dataP, 1, (RECEIVE_BUFSIZE - (dataP - dstFileNameP)), srcRef)) <= 0)
                                                                                             ^
TotalCrossVM/src/sync/Conduit.cpp:1699:100: style: Checking if unsigned expression 'read=fread(dataP,1,65400-(dataP-dstFileNameP),srcRef)' is less than zero. [unsignedLessThanZero]
                  if ((read = fread(dataP, 1, (RECEIVE_BUFSIZE - (dataP - dstFileNameP)), srcRef)) <= 0)
                                                                                                   ^
TotalCrossVM/src/sync/Conduit.cpp:166:23: style: Variable 'tcvmModule' is assigned a value that is never used. [unreadVariable]
   HMODULE tcvmModule = GetModuleHandle("tcvm.dll");
                      ^
TotalCrossVM/src/sync/Conduit.cpp:487:12: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   Err err = 0;
           ^
TotalCrossVM/src/sync/Conduit.cpp:697:16: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      if ((err = execTC(fullPath, "/cp", className)) == 0)
               ^
TotalCrossVM/src/sync/Conduit.cpp:709:11: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
      err = CONDERR_UNSUPPORTED_CFGCONDUIT_ENUM;
          ^
TotalCrossVM/src/sync/Conduit.cpp:720:23: style: Variable 'execErr' is assigned a value that is never used. [unreadVariable]
         if ((execErr = execTC(fullPath, "/cp", className)) != 0)
                      ^
TotalCrossVM/src/sync/Conduit.cpp:913:25: style: Variable 'conduitName' is assigned a value that is never used. [unreadVariable]
   TCObject conduitName = Conduit_conduitName(conduit);
                        ^
TotalCrossVM/src/sync/Conduit.cpp:945:12: style: Variable 'r' is assigned a value that is never used. [unreadVariable]
   int32 r = 0;
           ^
TotalCrossVM/src/sync/Conduit.cpp:1118:21: style: Variable 'dbId' is assigned a value that is never used. [unreadVariable]
         VoidP dbId = null;
                    ^
TotalCrossVM/src/sync/Conduit.cpp:1402:27: style: Variable 'ok' is assigned a value that is never used. [unreadVariable]
               boolean ok = false;
                          ^
TotalCrossVM/src/sync/Conduit.cpp:1407:22: style: Variable 'ok' is assigned a value that is never used. [unreadVariable]
                  ok = true;
                     ^
TotalCrossVM/src/sync/Conduit.cpp:1558:12: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
   Err err = NO_ERROR;
           ^
TotalCrossVM/src/sync/Conduit.cpp:1576:19: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
         if ((err = procSyncCallRemoteModule(params)) != errNone)
                  ^
TotalCrossVM/src/sync/Conduit.cpp:1606:17: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
            err = procCeGetLastError();
                ^
TotalCrossVM/src/sync/Conduit.cpp:1970:29: style: Variable 'createProcessRet' is assigned a value that is never used. [unreadVariable]
      if ((createProcessRet = procCeCreateProcess(applicationName, commandLine, null, null, false, 0, null, null, null, &processInformation)) != 0)
                            ^
TotalCrossVM/src/sync/Conduit.cpp:1968:0: information: Skipping configuration 'CERAPI_E_ALREADYINITIALIZED' since the value of 'CERAPI_E_ALREADYINITIALIZED' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (initRet == NO_ERROR || initRet == CERAPI_E_ALREADYINITIALIZED)
^
TotalCrossVM/src/tcvm/context.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tcvm/context.c:21:12: style: The scope of the variable 'c' can be reduced. [variableScope]
   Context c;
           ^
TotalCrossVM/src/tcvm/context.c:83:0: information: Skipping configuration 'ANDROID;POSIX;PTHREAD_MUTEX_RECURSIVE' since the value of 'PTHREAD_MUTEX_RECURSIVE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SETUP_MUTEX;
^
TotalCrossVM/src/tcvm/objectmemorymanager.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tcvm/objectmemorymanager.c:213:32: warning: Either the condition 'node->next' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
   ObjectProperties nodeNext = OBJ_PROPERTIES(node->next);
                               ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:221:12: note: Assuming that condition 'node->next' is not redundant
   if (node->next) // not the last node?
           ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:213:32: note: Null pointer subtraction
   ObjectProperties nodeNext = OBJ_PROPERTIES(node->next);
                               ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:909:18: style: Redundant initialization for 'oa'. The initialized value is overwritten before it is read. [redundantInitialization]
         for (oa = c->regOStart; oa < c->regO; oa++)
                 ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:903:27: note: oa is initialized
         TCObjectArray oa = c->regOStart;
                          ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:909:18: note: oa is overwritten
         for (oa = c->regOStart; oa < c->regO; oa++)
                 ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:569:14: style: The scope of the variable 'oa' can be reduced. [variableScope]
   TCObject *oa;
             ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:440:10: style: Variable 'op' is assigned a value that is never used. [unreadVariable]
      op = OBJ_PROPERTIES(o);
         ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:826:23: style: Variable 'op' is assigned a value that is never used. [unreadVariable]
   ObjectProperties op=null,op0;
                      ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:926:15: style: Variable 'c0' is assigned a value that is never used. [unreadVariable]
   TCClass c0 = c;
              ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:439:13: style: The scope of the variable 'objectBytesRemaining' can be reduced. [variableScope]
      int32 objectBytesRemaining; // may be < 0 !
            ^
TotalCrossVM/src/tcvm/objectmemorymanager.c:808:18: style: The scope of the variable 'j' can be reduced. [variableScope]
   int32 n = 0,i,j;
                 ^
TotalCrossVM/src/tcvm/tcclass.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 35 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tcvm/tcclass.c:869:8: style: Expression is always true because 'else if' condition is opposite to previous condition at line 831. [multiCondition]
   if (sIsArray)
       ^
TotalCrossVM/src/tcvm/tcclass.c:831:8: note: first condition
   if (!sIsArray)
       ^
TotalCrossVM/src/tcvm/tcclass.c:869:8: note: else if condition is opposite to first condition
   if (sIsArray)
       ^
TotalCrossVM/src/tcvm/tcclass.c:333:12: style: The scope of the variable 'p' can be reduced. [variableScope]
   uint16 *p;
           ^
TotalCrossVM/src/tcvm/tcclass.c:376:19: style: The scope of the variable 'ex' can be reduced. [variableScope]
   ExceptionArray ex; TExceptionInfo exi;
                  ^
TotalCrossVM/src/tcvm/tcclass.c:422:19: style: The scope of the variable 'pend' can be reduced. [variableScope]
      uint16 *p, *pend;
                  ^
TotalCrossVM/src/tcvm/tcclass.c:792:74: style:inconclusive: Function 'areClassesCompatible' argument 2 names different: declaration 'c' definition 's'. [funcArgNamesDifferent]
CompatibilityResult areClassesCompatible(Context currentContext, TCClass s, CharP ident)  // S instanceof idenT ?
                                                                         ^
TotalCrossVM/src/tcvm/tcclass.h:622:81: note: Function 'areClassesCompatible' argument 2 names different: declaration 'c' definition 's'.
TC_API CompatibilityResult areClassesCompatible(Context currentContext, TCClass c, CharP className);
                                                                                ^
TotalCrossVM/src/tcvm/tcclass.c:792:74: note: Function 'areClassesCompatible' argument 2 names different: declaration 'c' definition 's'.
CompatibilityResult areClassesCompatible(Context currentContext, TCClass s, CharP ident)  // S instanceof idenT ?
                                                                         ^
TotalCrossVM/src/tcvm/tcclass.c:792:83: style:inconclusive: Function 'areClassesCompatible' argument 3 names different: declaration 'className' definition 'ident'. [funcArgNamesDifferent]
CompatibilityResult areClassesCompatible(Context currentContext, TCClass s, CharP ident)  // S instanceof idenT ?
                                                                                  ^
TotalCrossVM/src/tcvm/tcclass.h:622:90: note: Function 'areClassesCompatible' argument 3 names different: declaration 'className' definition 'ident'.
TC_API CompatibilityResult areClassesCompatible(Context currentContext, TCClass c, CharP className);
                                                                                         ^
TotalCrossVM/src/tcvm/tcclass.c:792:83: note: Function 'areClassesCompatible' argument 3 names different: declaration 'className' definition 'ident'.
CompatibilityResult areClassesCompatible(Context currentContext, TCClass s, CharP ident)  // S instanceof idenT ?
                                                                                  ^
TotalCrossVM/src/tcvm/tcclass.c:794:13: style: Variable 't' is assigned a value that is never used. [unreadVariable]
   TCClass t=null;
            ^
TotalCrossVM/src/tcvm/tcclass.c:72:13: style: The scope of the variable 's1' can be reduced. [variableScope]
   int32 n2,s1,s2;
            ^
TotalCrossVM/src/tcvm/tcclass.c:72:16: style: The scope of the variable 's2' can be reduced. [variableScope]
   int32 n2,s1,s2;
               ^
TotalCrossVM/src/tcvm/tcclass.c:99:10: style: The scope of the variable 'i' can be reduced. [variableScope]
   int32 i;
         ^
TotalCrossVM/src/tcvm/tcclass.c:520:13: style: The scope of the variable 'j' can be reduced. [variableScope]
   int32 i, j, superI32, superObj, superV64, totalI32, totalObj, totalV64;
            ^
TotalCrossVM/src/tcvm/tcclass.c:520:16: style: The scope of the variable 'superI32' can be reduced. [variableScope]
   int32 i, j, superI32, superObj, superV64, totalI32, totalObj, totalV64;
               ^
TotalCrossVM/src/tcvm/tcclass.c:520:26: style: The scope of the variable 'superObj' can be reduced. [variableScope]
   int32 i, j, superI32, superObj, superV64, totalI32, totalObj, totalV64;
                         ^
TotalCrossVM/src/tcvm/tcclass.c:520:36: style: The scope of the variable 'superV64' can be reduced. [variableScope]
   int32 i, j, superI32, superObj, superV64, totalI32, totalObj, totalV64;
                                   ^
TotalCrossVM/src/tcvm/tcclass.c:520:46: style: The scope of the variable 'totalI32' can be reduced. [variableScope]
   int32 i, j, superI32, superObj, superV64, totalI32, totalObj, totalV64;
                                             ^
TotalCrossVM/src/tcvm/tcclass.c:520:56: style: The scope of the variable 'totalObj' can be reduced. [variableScope]
   int32 i, j, superI32, superObj, superV64, totalI32, totalObj, totalV64;
                                                       ^
TotalCrossVM/src/tcvm/tcclass.c:520:66: style: The scope of the variable 'totalV64' can be reduced. [variableScope]
   int32 i, j, superI32, superObj, superV64, totalI32, totalObj, totalV64;
                                                                 ^
TotalCrossVM/src/tcvm/tcclass.c:644:0: information: Skipping configuration 'ANDROID;POSIX;PTHREAD_MUTEX_RECURSIVE' since the value of 'PTHREAD_MUTEX_RECURSIVE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   SETUP_MUTEX;
^
TotalCrossVM/src/tcvm/tcexception.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 34 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tcvm/tcexception.c:208:71: style:inconclusive: Function 'fillStackTrace' argument 3 names different: declaration 'pc' definition 'pc0'. [funcArgNamesDifferent]
void fillStackTrace(Context currentContext, TCObject exception, int32 pc0, VoidPArray callStack)
                                                                      ^
TotalCrossVM/src/tcvm/tcexception.h:85:71: note: Function 'fillStackTrace' argument 3 names different: declaration 'pc' definition 'pc0'.
void fillStackTrace(Context currentContext, TCObject exception, int32 pc, VoidPArray callStack);
                                                                      ^
TotalCrossVM/src/tcvm/tcexception.c:208:71: note: Function 'fillStackTrace' argument 3 names different: declaration 'pc' definition 'pc0'.
void fillStackTrace(Context currentContext, TCObject exception, int32 pc0, VoidPArray callStack)
                                                                      ^
TotalCrossVM/src/tcvm/tcexception.c:210:12: style: Variable 'm' is assigned a value that is never used. [unreadVariable]
   Method m=null;
           ^
TotalCrossVM/src/tcvm/tcfield.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tcvm/tcfield.c:129:12: style: The if condition is the same as the previous if condition [duplicateCondition]
   if (ext == null)
           ^
TotalCrossVM/src/tcvm/tcfield.c:121:12: note: First condition
   if (ext == null) // guich@tc310
           ^
TotalCrossVM/src/tcvm/tcfield.c:129:12: note: Second condition
   if (ext == null)
           ^
TotalCrossVM/src/tcvm/tcfield.c:95:62: style:inconclusive: Function 'getSField_Ref' argument 3 names different: declaration 'classAndField' definition 'sym'. [funcArgNamesDifferent]
VoidP getSField_Ref(Context currentContext, TCClass c, int32 sym, RegType t)
                                                             ^
TotalCrossVM/src/tcvm/tcfield.h:63:69: note: Function 'getSField_Ref' argument 3 names different: declaration 'classAndField' definition 'sym'.
extern VoidP getSField_Ref(Context currentContext, TCClass c, int32 classAndField, RegType t);
                                                                    ^
TotalCrossVM/src/tcvm/tcfield.c:95:62: note: Function 'getSField_Ref' argument 3 names different: declaration 'classAndField' definition 'sym'.
VoidP getSField_Ref(Context currentContext, TCClass c, int32 sym, RegType t)
                                                             ^
TotalCrossVM/src/tcvm/tcfield.c:210:59: style:inconclusive: Function 'getIField_Index' argument 3 names different: declaration 'classAndField' definition 'sym'. [funcArgNamesDifferent]
uint16 getIField_Index(ConstantPool cp, TCObject o, int32 sym, RegType t)
                                                          ^
TotalCrossVM/src/tcvm/tcfield.h:61:66: note: Function 'getIField_Index' argument 3 names different: declaration 'classAndField' definition 'sym'.
extern uint16 getIField_Index(ConstantPool cp, TCObject o, int32 classAndField, RegType t);
                                                                 ^
TotalCrossVM/src/tcvm/tcfield.c:210:59: note: Function 'getIField_Index' argument 3 names different: declaration 'classAndField' definition 'sym'.
uint16 getIField_Index(ConstantPool cp, TCObject o, int32 sym, RegType t)
                                                          ^
TotalCrossVM/src/tcvm/tcfield.c:77:21: style: Variable 'fields' is assigned a value that is never used. [unreadVariable]
   FieldArray fields=null, f;
                    ^
TotalCrossVM/src/tcvm/tcfield.c:102:21: style: Variable 'fields' is assigned a value that is never used. [unreadVariable]
   FieldArray fields=null, f;
                    ^
TotalCrossVM/src/tcvm/tcmethod.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tcvm/tcmethod.c:11:12: style: The scope of the variable 'params' can be reduced. [variableScope]
   va_list params;
           ^
TotalCrossVM/src/tcvm/tcmethod.c:10:10: style: The scope of the variable 'i' can be reduced. [variableScope]
   int32 i,j;
         ^
TotalCrossVM/src/tcvm/tcmethod.c:10:12: style: The scope of the variable 'j' can be reduced. [variableScope]
   int32 i,j;
           ^
TotalCrossVM/src/tcvm/tcthread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:34:11: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
      ret = pthread_attr_getstacksize(&attr, &ssize);
          ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:33:11: note: ret is assigned
      ret = pthread_attr_init(&attr);
          ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:34:11: note: ret is overwritten
      ret = pthread_attr_getstacksize(&attr, &ssize);
          ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:37:11: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
      ret = pthread_attr_destroy(&attr);
          ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:34:11: note: ret is assigned
      ret = pthread_attr_getstacksize(&attr, &ssize);
          ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:37:11: note: ret is overwritten
      ret = pthread_attr_destroy(&attr);
          ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:37:11: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
      ret = pthread_attr_destroy(&attr);
          ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:36:14: note: ret is assigned
         ret = pthread_attr_setstacksize(&attr, 1*1024*1024);
             ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:37:11: note: ret is overwritten
      ret = pthread_attr_destroy(&attr);
          ^
TotalCrossVM/src/tcvm/tcthread.c:74:12: style: The scope of the variable 'c' can be reduced. [variableScope]
   Context c;
           ^
TotalCrossVM/src/tcvm/tcthread.c:84:34: style:inconclusive: Function 'freeMutex' argument 2 names different: declaration 'mutex' definition 'pmutex'. [funcArgNamesDifferent]
void freeMutex(int32 hash, VoidP pmutex)
                                 ^
TotalCrossVM/src/tcvm/tcthread.h:150:34: note: Function 'freeMutex' argument 2 names different: declaration 'mutex' definition 'pmutex'.
void freeMutex(int32 hash, VoidP mutex);
                                 ^
TotalCrossVM/src/tcvm/tcthread.c:84:34: note: Function 'freeMutex' argument 2 names different: declaration 'mutex' definition 'pmutex'.
void freeMutex(int32 hash, VoidP pmutex)
                                 ^
TotalCrossVM/src/tcvm/posix/tcthread_c.h:37:11: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
      ret = pthread_attr_destroy(&attr);
          ^
TotalCrossVM/src/tcvm/tcthread.c:104:0: information: Skipping configuration 'ANDROID;POSIX;PTHREAD_MUTEX_RECURSIVE' since the value of 'PTHREAD_MUTEX_RECURSIVE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      SETUP_MUTEX;
^
TotalCrossVM/src/tcvm/tcvm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 34 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tcvm/tcvm.c:155:37: style:inconclusive: Function 'executeMethod' argument 1 names different: declaration 'currentContext' definition 'context'. [funcArgNamesDifferent]
TC_API TValue executeMethod(Context context, Method method, ...)
                                    ^
TotalCrossVM/src/tcvm/tcvm.h:161:37: note: Function 'executeMethod' argument 1 names different: declaration 'currentContext' definition 'context'.
TC_API TValue executeMethod(Context currentContext, Method method, ...);
                                    ^
TotalCrossVM/src/tcvm/tcvm.c:155:37: note: Function 'executeMethod' argument 1 names different: declaration 'currentContext' definition 'context'.
TC_API TValue executeMethod(Context context, Method method, ...)
                                    ^
TotalCrossVM/src/tcvm/tcvm.c:883:29: style: Local variable 'i' shadows outer variable [shadowVariable]
         int32 low,high,mid,i;
                            ^
TotalCrossVM/src/tcvm/tcvm.c:169:10: note: Shadowed declaration
   int32 i,len;
         ^
TotalCrossVM/src/tcvm/tcvm.c:883:29: note: Shadow variable
         int32 low,high,mid,i;
                            ^
TotalCrossVM/src/tcvm/wp8/ThreadEmulation.cpp:64:72: error: syntax error: ^) [syntaxError]
        auto workItemHandler = ref new WorkItemHandler([=](IAsyncAction^)
                                                                       ^
TotalCrossVM/src/tests/tc_testsuite.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/tests/tc_testsuite.c:285:7: warning: Redundant assignment of 'tc' to itself. [selfAssignment]
   tc = tc; // remove warning
      ^
TotalCrossVM/src/tests/tc_testsuite.c:334:9: style: The scope of the variable 'buf' can be reduced. [variableScope]
   char buf[128];
        ^
TotalCrossVM/src/tests/tc_testsuite.c:336:8: style: The scope of the variable 'i' can be reduced. [variableScope]
   int i;
       ^
TotalCrossVM/src/tests/tc_testsuite.c:130:72: style:inconclusive: Function 'assertEqualsBlock' argument 4 names different: declaration 'v3' definition 'n'. [funcArgNamesDifferent]
bool assertEqualsBlock(struct TestSuite *tc, void* v1, void* v2, int32 n, const char *file, int line)
                                                                       ^
TotalCrossVM/src/tests/tc_testsuite.h:267:1: note: Function 'assertEqualsBlock' argument 4 names different: declaration 'v3' definition 'n'.
DECLARE_ASSERT_FUNC3(EqualsBlock   , VoidP   , VoidP  , int32 )
^
TotalCrossVM/src/tests/tc_testsuite.c:130:72: note: Function 'assertEqualsBlock' argument 4 names different: declaration 'v3' definition 'n'.
bool assertEqualsBlock(struct TestSuite *tc, void* v1, void* v2, int32 n, const char *file, int line)
                                                                       ^
TotalCrossVM/src/tests/tc_testsuite.c:143:64: style:inconclusive: Function 'assertEqualsFilled' argument 3 names different: declaration 'v2' definition 'size'. [funcArgNamesDifferent]
bool assertEqualsFilled(struct TestSuite *tc, void* v1, uint32 size, uint8 filledWith, const char *file, int line)
                                                               ^
TotalCrossVM/src/tests/tc_testsuite.h:268:1: note: Function 'assertEqualsFilled' argument 3 names different: declaration 'v2' definition 'size'.
DECLARE_ASSERT_FUNC3(EqualsFilled  , VoidP   , uint32 , uint8 )
^
TotalCrossVM/src/tests/tc_testsuite.c:143:64: note: Function 'assertEqualsFilled' argument 3 names different: declaration 'v2' definition 'size'.
bool assertEqualsFilled(struct TestSuite *tc, void* v1, uint32 size, uint8 filledWith, const char *file, int line)
                                                               ^
TotalCrossVM/src/tests/tc_testsuite.c:143:76: style:inconclusive: Function 'assertEqualsFilled' argument 4 names different: declaration 'v3' definition 'filledWith'. [funcArgNamesDifferent]
bool assertEqualsFilled(struct TestSuite *tc, void* v1, uint32 size, uint8 filledWith, const char *file, int line)
                                                                           ^
TotalCrossVM/src/tests/tc_testsuite.h:268:1: note: Function 'assertEqualsFilled' argument 4 names different: declaration 'v3' definition 'filledWith'.
DECLARE_ASSERT_FUNC3(EqualsFilled  , VoidP   , uint32 , uint8 )
^
TotalCrossVM/src/tests/tc_testsuite.c:143:76: note: Function 'assertEqualsFilled' argument 4 names different: declaration 'v3' definition 'filledWith'.
bool assertEqualsFilled(struct TestSuite *tc, void* v1, uint32 size, uint8 filledWith, const char *file, int line)
                                                                           ^
TotalCrossVM/src/tests/tc_testsuite.c:285:7: style: Variable 'tc' is assigned a value that is never used. [unreadVariable]
   tc = tc; // remove warning
      ^
TotalCrossVM/src/util/datastructures.c:180:16: style: The scope of the variable 'prev' can be reduced. [variableScope]
   HtEntry *e,*prev;
               ^
TotalCrossVM/src/util/debug.c:37:22: warning: Redundant assignment of 'usedOpcodes' to itself. [selfAssignment]
   int8* usedOpcodes = usedOpcodes;
                     ^
TotalCrossVM/src/util/debug.c:37:24: error: Uninitialized variable: usedOpcodes [uninitvar]
   int8* usedOpcodes = usedOpcodes;
                       ^
TotalCrossVM/src/util/dlmalloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 53 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/util/dlmalloc.c:5053:24: warning: The address of local variable 'sz' might be accessed at non-zero index. [objectIndex]
      contents_size += request2size(sizes[i]);
                       ^
TotalCrossVM/src/util/dlmalloc.c:5354:33: note: Address of variable taken here.
  return ialloc(gm, n_elements, &sz, 3, chunks);
                                ^
TotalCrossVM/src/util/dlmalloc.c:5354:33: note: Calling function 'ialloc', 3rd argument '&sz' value is lifetime=sz
  return ialloc(gm, n_elements, &sz, 3, chunks);
                                ^
TotalCrossVM/src/util/dlmalloc.c:5053:24: note: The address of local variable 'sz' might be accessed at non-zero index.
      contents_size += request2size(sizes[i]);
                       ^
TotalCrossVM/src/util/dlmalloc.c:3533:35: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      size_t mfree = m->topsize + TOP_FOOT_SIZE;
                                  ^
TotalCrossVM/src/util/dlmalloc.c:3578:33: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      used = fp - (m->topsize + TOP_FOOT_SIZE);
                                ^
TotalCrossVM/src/util/dlmalloc.c:3945:39: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  chunk_plus_offset(p, psize)->head = TOP_FOOT_SIZE;
                                      ^
TotalCrossVM/src/util/dlmalloc.c:4038:41: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  init_top(m, (mchunkptr)tbase, tsize - TOP_FOOT_SIZE);
                                        ^
TotalCrossVM/src/util/dlmalloc.c:4091:11: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  asize = granularity_align(nb + SYS_ALLOC_PADDING);
          ^
TotalCrossVM/src/util/dlmalloc.c:4147:15: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      ssize = granularity_align(nb - m->topsize + SYS_ALLOC_PADDING);
              ^
TotalCrossVM/src/util/dlmalloc.c:4159:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
            ssize < nb + SYS_ALLOC_PADDING) {
                         ^
TotalCrossVM/src/util/dlmalloc.c:4160:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
          size_t esize = granularity_align(nb + SYS_ALLOC_PADDING - ssize);
                         ^
TotalCrossVM/src/util/dlmalloc.c:4202:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        if (ssize > nb + TOP_FOOT_SIZE) {
                         ^
TotalCrossVM/src/util/dlmalloc.c:4226:47: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        init_top(m, (mchunkptr)tbase, tsize - TOP_FOOT_SIZE);
                                              ^
TotalCrossVM/src/util/dlmalloc.c:4232:64: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        init_top(m, mn, (size_t)((tbase + tsize) - (char*)mn) -TOP_FOOT_SIZE);
                                                               ^
TotalCrossVM/src/util/dlmalloc.c:4301:61: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      if (!is_inuse(p) && (char*)p + psize >= base + size - TOP_FOOT_SIZE) {
                                                            ^
TotalCrossVM/src/util/dlmalloc.c:4338:12: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    pad += TOP_FOOT_SIZE; /* ensure enough room for segment overhead */
           ^
TotalCrossVM/src/util/dlmalloc.c:5408:12: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    result = 0;                    /* disable */
           ^
TotalCrossVM/src/util/dlmalloc.c:5406:12: note: result is assigned
    result = granularity_align(1); /* Use minimal size */
           ^
TotalCrossVM/src/util/dlmalloc.c:5408:12: note: result is overwritten
    result = 0;                    /* disable */
           ^
TotalCrossVM/src/util/dlmalloc.c:3533:35: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      size_t mfree = m->topsize + TOP_FOOT_SIZE;
                                  ^
TotalCrossVM/src/util/dlmalloc.c:3578:33: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      used = fp - (m->topsize + TOP_FOOT_SIZE);
                                ^
TotalCrossVM/src/util/dlmalloc.c:3945:39: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  chunk_plus_offset(p, psize)->head = TOP_FOOT_SIZE;
                                      ^
TotalCrossVM/src/util/dlmalloc.c:4038:41: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  init_top(m, (mchunkptr)tbase, tsize - TOP_FOOT_SIZE);
                                        ^
TotalCrossVM/src/util/dlmalloc.c:4091:11: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  asize = granularity_align(nb + SYS_ALLOC_PADDING);
          ^
TotalCrossVM/src/util/dlmalloc.c:4147:15: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      ssize = granularity_align(nb - m->topsize + SYS_ALLOC_PADDING);
              ^
TotalCrossVM/src/util/dlmalloc.c:4159:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
            ssize < nb + SYS_ALLOC_PADDING) {
                         ^
TotalCrossVM/src/util/dlmalloc.c:4160:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
          size_t esize = granularity_align(nb + SYS_ALLOC_PADDING - ssize);
                         ^
TotalCrossVM/src/util/dlmalloc.c:4202:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        if (ssize > nb + TOP_FOOT_SIZE) {
                         ^
TotalCrossVM/src/util/dlmalloc.c:4226:47: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        init_top(m, (mchunkptr)tbase, tsize - TOP_FOOT_SIZE);
                                              ^
TotalCrossVM/src/util/dlmalloc.c:4232:64: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        init_top(m, mn, (size_t)((tbase + tsize) - (char*)mn) -TOP_FOOT_SIZE);
                                                               ^
TotalCrossVM/src/util/dlmalloc.c:4301:61: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      if (!is_inuse(p) && (char*)p + psize >= base + size - TOP_FOOT_SIZE) {
                                                            ^
TotalCrossVM/src/util/dlmalloc.c:4338:12: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    pad += TOP_FOOT_SIZE; /* ensure enough room for segment overhead */
           ^
TotalCrossVM/src/util/dlmalloc.c:4506:27: style: Opposite expression on both sides of '&'. [oppositeExpression]
      binmap_t leastbit = least_bit(leftbits);
                          ^
TotalCrossVM/src/util/dlmalloc.c:4548:23: style: Opposite expression on both sides of '&'. [oppositeExpression]
  binmap_t leastbit = least_bit(m->treemap);
                      ^
TotalCrossVM/src/util/dlmalloc.c:4640:31: style: Opposite expression on both sides of '&'. [oppositeExpression]
          binmap_t leastbit = least_bit(leftbits);
                              ^
TotalCrossVM/src/util/dlmalloc.c:4136:33: style: Checking if unsigned expression 'ssize' is less than zero. [unsignedLessThanZero]
        if (ssize > nb && ssize < HALF_MAX_SIZE_T &&
                                ^
TotalCrossVM/src/util/dlmalloc.c:4149:17: style: Checking if unsigned expression 'ssize' is less than zero. [unsignedLessThanZero]
      if (ssize < HALF_MAX_SIZE_T &&
                ^
TotalCrossVM/src/util/dlmalloc.c:4158:19: style: Checking if unsigned expression 'ssize' is less than zero. [unsignedLessThanZero]
        if (ssize < HALF_MAX_SIZE_T &&
                  ^
TotalCrossVM/src/util/dlmalloc.c:4161:21: style: Checking if unsigned expression 'esize' is less than zero. [unsignedLessThanZero]
          if (esize < HALF_MAX_SIZE_T) {
                    ^
TotalCrossVM/src/util/dlmalloc.c:4193:15: style: Checking if unsigned expression 'asize' is less than zero. [unsignedLessThanZero]
    if (asize < HALF_MAX_SIZE_T) {
              ^
TotalCrossVM/src/util/dlmalloc.c:4362:21: style: Unsigned expression 'extra' can't be negative so it is unnecessary to test it. [unsignedPositive]
          if (extra >= HALF_MAX_SIZE_T) /* Avoid wrapping negative */
                    ^
TotalCrossVM/src/util/dlmalloc.c:5362:42: style:inconclusive: Function 'dlbulk_free' argument 2 names different: declaration 'n_elements' definition 'nelem'. [funcArgNamesDifferent]
size_t dlbulk_free(void* array[], size_t nelem) {
                                         ^
TotalCrossVM/src/util/dlmalloc.c:1233:52: note: Function 'dlbulk_free' argument 2 names different: declaration 'n_elements' definition 'nelem'.
DLMALLOC_EXPORT size_t  dlbulk_free(void**, size_t n_elements);
                                                   ^
TotalCrossVM/src/util/dlmalloc.c:5362:42: note: Function 'dlbulk_free' argument 2 names different: declaration 'n_elements' definition 'nelem'.
size_t dlbulk_free(void* array[], size_t nelem) {
                                         ^
TotalCrossVM/src/util/dlmalloc.c:806:23: style: struct member 'mallinfo::smblks' is never used. [unusedStructMember]
  MALLINFO_FIELD_TYPE smblks;   /* always 0 */
                      ^
TotalCrossVM/src/util/dlmalloc.c:807:23: style: struct member 'mallinfo::hblks' is never used. [unusedStructMember]
  MALLINFO_FIELD_TYPE hblks;    /* always 0 */
                      ^
TotalCrossVM/src/util/dlmalloc.c:810:23: style: struct member 'mallinfo::fsmblks' is never used. [unusedStructMember]
  MALLINFO_FIELD_TYPE fsmblks;  /* always 0 */
                      ^
TotalCrossVM/src/util/dlmalloc.c:3154:0: information: Skipping configuration 'CLSIZE;NBPG' since the value of 'CLSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    psize = malloc_getpagesize;
^
TotalCrossVM/src/util/dlmalloc.c:3154:0: information: Skipping configuration 'CLSIZE;NBPG' since the value of 'NBPG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    psize = malloc_getpagesize;
^
TotalCrossVM/src/util/dlmalloc.c:3272:53: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  assert(sz == ((sp->base + sp->size) - (char*)p) - TOP_FOOT_SIZE);
                                                    ^
TotalCrossVM/src/util/dlmalloc.c:3466:25: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    sum += m->topsize + TOP_FOOT_SIZE;
                        ^
TotalCrossVM/src/util/dlmalloc.c:3272:53: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  assert(sz == ((sp->base + sp->size) - (char*)p) - TOP_FOOT_SIZE);
                                                    ^
TotalCrossVM/src/util/dlmalloc.c:3466:25: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    sum += m->topsize + TOP_FOOT_SIZE;
                        ^
TotalCrossVM/src/util/dlmalloc.c:5053:24: warning: The address of local variable 'sz' might be accessed at non-zero index. [objectIndex]
      contents_size += request2size(sizes[i]);
                       ^
TotalCrossVM/src/util/dlmalloc.c:5877:33: note: Address of variable taken here.
  return ialloc(ms, n_elements, &sz, 3, chunks);
                                ^
TotalCrossVM/src/util/dlmalloc.c:5877:33: note: Calling function 'ialloc', 3rd argument '&sz' value is lifetime=sz
  return ialloc(ms, n_elements, &sz, 3, chunks);
                                ^
TotalCrossVM/src/util/dlmalloc.c:5053:24: note: The address of local variable 'sz' might be accessed at non-zero index.
      contents_size += request2size(sizes[i]);
                       ^
TotalCrossVM/src/util/dlmalloc.c:5463:59: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  init_top(m, mn, (size_t)((tbase + tsize) - (char*)mn) - TOP_FOOT_SIZE);
                                                          ^
TotalCrossVM/src/util/dlmalloc.c:5473:37: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  if (capacity < (size_t) -(msize + TOP_FOOT_SIZE + mparams.page_size)) {
                                    ^
TotalCrossVM/src/util/dlmalloc.c:5475:30: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
                 (capacity + TOP_FOOT_SIZE + msize));
                             ^
TotalCrossVM/src/util/dlmalloc.c:5492:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  if (capacity > msize + TOP_FOOT_SIZE &&
                         ^
TotalCrossVM/src/util/dlmalloc.c:5493:37: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      capacity < (size_t) -(msize + TOP_FOOT_SIZE + mparams.page_size)) {
                                    ^
TotalCrossVM/src/util/dlmalloc.c:5985:14: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
      result = 0;                    /* disable */
             ^
TotalCrossVM/src/util/dlmalloc.c:5983:14: note: result is assigned
      result = granularity_align(1); /* Use minimal size */
             ^
TotalCrossVM/src/util/dlmalloc.c:5985:14: note: result is overwritten
      result = 0;                    /* disable */
             ^
TotalCrossVM/src/util/dlmalloc.c:5259:41: style: Same value in both branches of ternary operator. [duplicateValueTernary]
          size_t oc = chunksize(oldp) - overhead_for(oldp);
                                        ^
TotalCrossVM/src/util/dlmalloc.c:5434:29: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      return chunksize(p) - overhead_for(p);
                            ^
TotalCrossVM/src/util/dlmalloc.c:5463:59: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  init_top(m, mn, (size_t)((tbase + tsize) - (char*)mn) - TOP_FOOT_SIZE);
                                                          ^
TotalCrossVM/src/util/dlmalloc.c:5473:37: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  if (capacity < (size_t) -(msize + TOP_FOOT_SIZE + mparams.page_size)) {
                                    ^
TotalCrossVM/src/util/dlmalloc.c:5475:30: style: Same value in both branches of ternary operator. [duplicateValueTernary]
                 (capacity + TOP_FOOT_SIZE + msize));
                             ^
TotalCrossVM/src/util/dlmalloc.c:5492:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  if (capacity > msize + TOP_FOOT_SIZE &&
                         ^
TotalCrossVM/src/util/dlmalloc.c:5493:37: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      capacity < (size_t) -(msize + TOP_FOOT_SIZE + mparams.page_size)) {
                                    ^
TotalCrossVM/src/util/dlmalloc.c:5581:31: style: Opposite expression on both sides of '&'. [oppositeExpression]
          binmap_t leastbit = least_bit(leftbits);
                              ^
TotalCrossVM/src/util/dlmalloc.c:5816:41: style: Same value in both branches of ternary operator. [duplicateValueTernary]
          size_t oc = chunksize(oldp) - overhead_for(oldp);
                                        ^
TotalCrossVM/src/util/dlmalloc.c:6010:29: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      return chunksize(p) - overhead_for(p);
                            ^
TotalCrossVM/src/util/dlmalloc.c:5781:40: style:inconclusive: Function 'mspace_realloc' argument 2 names different: declaration 'mem' definition 'oldmem'. [funcArgNamesDifferent]
void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {
                                       ^
TotalCrossVM/src/util/dlmalloc.c:1383:56: note: Function 'mspace_realloc' argument 2 names different: declaration 'mem' definition 'oldmem'.
DLMALLOC_EXPORT void* mspace_realloc(mspace msp, void* mem, size_t newsize);
                                                       ^
TotalCrossVM/src/util/dlmalloc.c:5781:40: note: Function 'mspace_realloc' argument 2 names different: declaration 'mem' definition 'oldmem'.
void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {
                                       ^
TotalCrossVM/src/util/dlmalloc.c:5781:55: style:inconclusive: Function 'mspace_realloc' argument 3 names different: declaration 'newsize' definition 'bytes'. [funcArgNamesDifferent]
void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {
                                                      ^
TotalCrossVM/src/util/dlmalloc.c:1383:68: note: Function 'mspace_realloc' argument 3 names different: declaration 'newsize' definition 'bytes'.
DLMALLOC_EXPORT void* mspace_realloc(mspace msp, void* mem, size_t newsize);
                                                                   ^
TotalCrossVM/src/util/dlmalloc.c:5781:55: note: Function 'mspace_realloc' argument 3 names different: declaration 'newsize' definition 'bytes'.
void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {
                                                      ^
TotalCrossVM/src/util/dlmalloc.c:3873:0: information: Skipping configuration 'DIRECT_MMAP' since the value of 'DIRECT_MMAP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    char* mm = (char*)(CALL_DIRECT_MMAP(mmsize));
^
TotalCrossVM/src/util/dlmalloc.c:3154:0: information: Skipping configuration 'EXEC_PAGESIZE' since the value of 'EXEC_PAGESIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    psize = malloc_getpagesize;
^
TotalCrossVM/src/util/jchar.c:99:9: style: Variable 'buf5' is not assigned a value. [unassignedVariable]
   char buf5[5];
        ^
TotalCrossVM/src/util/jchar.c:136:9: style: Variable 'buf5' is not assigned a value. [unassignedVariable]
   char buf5[5];
        ^
TotalCrossVM/src/util/mem.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/util/mem.c:48:7: error: Memory leak: p [memleak]
      p = malloc(size);
      ^
TotalCrossVM/src/util/mem.c:512:16: warning: Possible null pointer dereference: ptr-1 [nullPointer]
      if (*(ptr-1) != 0x01 || *(ptr-2) != 0x01 || *(ptr-3) != 0x01 || *(ptr-4) != 0x01)
               ^
TotalCrossVM/src/util/mem.c:511:20: note: Assignment 'ptr=(uint8*)p', assigned value is 1
      uint8 *ptr = (uint8 *)p;
                   ^
TotalCrossVM/src/util/mem.c:512:16: note: Null pointer dereference
      if (*(ptr-1) != 0x01 || *(ptr-2) != 0x01 || *(ptr-3) != 0x01 || *(ptr-4) != 0x01)
               ^
TotalCrossVM/src/util/mem.c:515:128: warning: Possible null pointer dereference: ptr-1 [nullPointer]
         debug("%s - not a memory chunk or chunk's start was overwritten: %lx - %d. %s at %s, line %d",msg, (long)p, (int)*(ptr-1), e ? "allocated" : "freed", e ? e->src : file, e ? e->line : line); // this message will be printed inconditionally
                                                                                                                               ^
TotalCrossVM/src/util/mem.c:511:20: note: Assignment 'ptr=(uint8*)p', assigned value is 1
      uint8 *ptr = (uint8 *)p;
                   ^
TotalCrossVM/src/util/mem.c:515:128: note: Null pointer dereference
         debug("%s - not a memory chunk or chunk's start was overwritten: %lx - %d. %s at %s, line %d",msg, (long)p, (int)*(ptr-1), e ? "allocated" : "freed", e ? e->src : file, e ? e->line : line); // this message will be printed inconditionally
                                                                                                                               ^
TotalCrossVM/src/util/mem.c:523:18: warning: Possible null pointer dereference: ptr-1 [nullPointer]
            *(ptr-1) = *(ptr-2) = *(ptr-3) = *(ptr-4) = 2; // set them to 2 so we can find a block that was freed twice
                 ^
TotalCrossVM/src/util/mem.c:511:20: note: Assignment 'ptr=(uint8*)p', assigned value is 1
      uint8 *ptr = (uint8 *)p;
                   ^
TotalCrossVM/src/util/mem.c:523:18: note: Null pointer dereference
            *(ptr-1) = *(ptr-2) = *(ptr-3) = *(ptr-4) = 2; // set them to 2 so we can find a block that was freed twice
                 ^
TotalCrossVM/src/util/mem.c:151:12: style: Variable 'b1' is assigned a value that is never used. [unreadVariable]
   bool b1 = checkMemHeapLeaks();
           ^
TotalCrossVM/src/util/mem.c:152:12: style: Variable 'b2' is assigned a value that is never used. [unreadVariable]
   bool b2 = checkMallocLeaks();
           ^
TotalCrossVM/src/util/mem.c:92:6: style: Variable 'res' is assigned a value that is never used. [unreadVariable]
 res = VirtualProtect(start + rounded_size, pageSize, PAGE_NOACCESS, &old_protect);
     ^
TotalCrossVM/src/util/mem.c:693:18: style: Variable 'oldSize' is assigned a value that is never used. [unreadVariable]
   uint32 oldSize=0;
                 ^
TotalCrossVM/src/util/mem.c:50:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
         debug("*** Sleep worked to alloc %d", size);
^
TotalCrossVM/src/util/mem.c:137:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      debug("The programmer forgot to destroy some heaps created at:");
^
TotalCrossVM/src/util/mem.c:141:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
         debug(" %s (%d): %X #%d", m->ex.creationFile, m->ex.creationLine, m, m->count);
^
TotalCrossVM/src/util/mem.c:195:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      debug("heap error of heap created at %s (%d). setjmp at %s (%d)",m->ex.creationFile,m->ex.creationLine,m->ex.setjmpFile, m->ex.setjmpLine);
^
TotalCrossVM/src/util/mem.c:455:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
         debug("%s (%d): %X #%d", np->src, np->line, np->addr, np->count);
^
TotalCrossVM/src/util/mem.c:515:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
         debug("%s - not a memory chunk or chunk's start was overwritten: %lx - %d. %s at %s, line %d",msg, (long)p, (int)*(ptr-1), e ? "allocated" : "freed", e ? e->src : file, e ? e->line : line); // this message will be printed inconditionally
^
TotalCrossVM/src/util/mem.c:527:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            debug("%s - chunk's end was overwritten: %lx (%ld) - %d. %s at %s, line %d",msg,(long)p,(long)size,(int)*(ptr+size), e ? "allocated" : "freed", e ? e->src : file, e ? e->line : line); // this message will be printed inconditionally
^
TotalCrossVM/src/util/mem.c:545:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   debug("%s(%d) RETURNING NULL TO %s, line %d. Free memory: %d",func, (int)origSize,file,line,(int)getFreeMemory(false));
^
TotalCrossVM/src/util/mem.c:560:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
         debug("\nTotal memory leaked: %d bytes\n Number of xmallocs: %d\n Number of xfrees: %d\nList of places where the leaks were xmalloc'd:",(int)totalAllocated,(int)allocCount,(int)freeCount); // guich@570_94
^
TotalCrossVM/src/util/mem.c:671:0: information: Skipping configuration 'DEBUG;debug' since the value of 'debug' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
               debug("free(%d): %lX NOT REMOVED. xfree called from %s (%d)",(int)size, (long)pp, file, line);
^
TotalCrossVM/src/util/posix/nativelib_c.h:72:4: style:inconclusive: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
   return NULL;
   ^
TotalCrossVM/src/util/nativelib.c:101:9: style: The scope of the variable 'ok' can be reduced. [variableScope]
   bool ok = false;
        ^
TotalCrossVM/src/util/nativelib.c:101:12: style: Variable 'ok' is assigned a value that is never used. [unreadVariable]
   bool ok = false;
           ^
TotalCrossVM/src/util/tcz.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 46 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/util/tcz.c:185:7: style: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
      ntcz->header = newXH(TCZFileHeader, hheap);
      ^
TotalCrossVM/src/util/tcz.c:24:14: style: Unused variable: i [unusedVariable]
   int32 ret,i;
             ^
TotalCrossVM/src/util/tcz.c:70:0: information: Skipping configuration 'SEEK_SET;Z_SOLO' since the value of 'SEEK_SET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      fseek(f->header->fin, f->expectedFilePos, SEEK_SET);
^
TotalCrossVM/src/util/tcz.c:259:0: information: Skipping configuration 'SEEK_SET;Z_SOLO' since the value of 'SEEK_SET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   fseek(ntcz->header->fin, ntcz->expectedFilePos, SEEK_SET);
^
TotalCrossVM/src/util/utils.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/util/utils.c:778:7: error: Resource leak: f [resourceLeak]
      f = fopen(fullName,"rb");
      ^
TotalCrossVM/src/util/utils.c:784:7: error: Resource leak: f [resourceLeak]
      f = fopen(fullName,"rb");
      ^
TotalCrossVM/src/util/utils.c:790:7: error: Resource leak: f [resourceLeak]
      f = fopen(fullName,"rb");
      ^
TotalCrossVM/src/util/utils.c:146:9: style: The scope of the variable 'c' can be reduced. [variableScope]
   char c;
        ^
TotalCrossVM/src/util/utils.c:189:9: style: The scope of the variable 'c' can be reduced. [variableScope]
   char c;
        ^
TotalCrossVM/src/util/utils.c:74:20: style: Local variable 's' shadows outer variable [shadowVariable]
            JCharP s = va_arg(vaargs, JCharP);
                   ^
TotalCrossVM/src/util/utils.c:45:10: note: Shadowed declaration
   CharP s;
         ^
TotalCrossVM/src/util/utils.c:74:20: note: Shadow variable
            JCharP s = va_arg(vaargs, JCharP);
                   ^
TotalCrossVM/src/util/utils.c:89:29: error: Uninitialized variable: buf [uninitvar]
            s = long2str(i, buf);
                            ^
TotalCrossVM/src/util/utils.c:650:33: error: Uninitialized variable: lb [uninitvar]
         s = long2str(integral, lb);
                                ^
TotalCrossVM/src/util/utils.c:669:33: error: Uninitialized variable: lb [uninitvar]
         s = long2str(integral, lb);
                                ^
TotalCrossVM/src/util/utils.c:705:31: error: Uninitialized variable: ib [uninitvar]
         s = int2str(exponent,ib);
                              ^
TotalCrossVM/src/util/utils.c:745:10: style: Variable 'i' is not assigned a value. [unassignedVariable]
   int32 i,err;
         ^
TotalCrossVM/src/util/utils.c:753:10: style: Variable 'i' is not assigned a value. [unassignedVariable]
   int16 i;
         ^
TotalCrossVM/src/util/utils.c:827:7: error: Resource leak: f [resourceLeak]
      f = fopen(fullName,"rb");
      ^
TotalCrossVM/src/util/utils.c:880:4: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
   if (!maxblock)
   ^
TotalCrossVM/src/util/utils.c:768:0: information: Skipping configuration 'CURRENT_DEBUG_PATH' since the value of 'CURRENT_DEBUG_PATH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   xstrprintf(fullName,"%s/%s", CURRENT_DEBUG_PATH, name);
^
TotalCrossVM/src/util/utils_test.h:43:6: style: Variable 'd' is reassigned a value before the old one has been used. [redundantAssignment]
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:38:6: note: d is assigned
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:43:6: note: d is overwritten
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:48:6: style: Variable 'd' is reassigned a value before the old one has been used. [redundantAssignment]
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:43:6: note: d is assigned
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:48:6: note: d is overwritten
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:53:6: style: Variable 'd' is reassigned a value before the old one has been used. [redundantAssignment]
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:48:6: note: d is assigned
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:53:6: note: d is overwritten
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:58:6: style: Variable 'd' is reassigned a value before the old one has been used. [redundantAssignment]
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:53:6: note: d is assigned
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:58:6: note: d is overwritten
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:63:6: style: Variable 'd' is reassigned a value before the old one has been used. [redundantAssignment]
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:58:6: note: d is assigned
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:63:6: note: d is overwritten
   d = str2double(dblBuffer,&err);
     ^
TotalCrossVM/src/util/utils_test.h:23:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/util/utils_test.h:67:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/util/utils_test.h:84:1: style: Label 'finish' is not used. [unusedLabel]
finish: ;
^
TotalCrossVM/src/util/utils_test.h:77:32: error: Uninitialized variable: db [uninitvar]
   dblBuffer = double2str(d,-1,db);
                               ^
TotalCrossVM/src/zlib/adler32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 66 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/adler32.c:71:14: style: The scope of the variable 'n' can be reduced. [variableScope]
    unsigned n;
             ^
TotalCrossVM/src/zlib/compress.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/crc32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 67 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/deflate.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 71 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/deflate.c:470:9: style: The scope of the variable 'put' can be reduced. [variableScope]
    int put;
        ^
TotalCrossVM/src/zlib/deflate.c:572:12: style: The scope of the variable 'str' can be reduced. [variableScope]
    Bytef *str;
           ^
TotalCrossVM/src/zlib/deflate.c:1572:9: style: The scope of the variable 'max_start' can be reduced. [variableScope]
    ulg max_start;
        ^
TotalCrossVM/src/zlib/deflate.c:816:17: error: Uninitialized variable: val [uninitvar]
            if (val == 0) {
                ^
TotalCrossVM/src/zlib/deflate.c:847:17: error: Uninitialized variable: val [uninitvar]
            if (val == 0)
                ^
TotalCrossVM/src/zlib/deflate.c:155:32: style: struct member 'static_tree_desc_s::dummy' is never used. [unusedStructMember]
struct static_tree_desc_s {int dummy;}; /* for buggy compilers */
                               ^
TotalCrossVM/src/zlib/deflate.c:1842:9: style: Variable 'bflush' is assigned a value that is never used. [unreadVariable]
        _tr_tally_lit(s, s->window[s->strstart-1], bflush);
        ^
TotalCrossVM/src/zlib/deflate.c:1372:9: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
        fprintf(stderr,"\\[%d,%d]", start-match, length);
        ^
TotalCrossVM/src/zlib/deflate.c:1938:9: style: The scope of the variable 'bflush' can be reduced. [variableScope]
    int bflush;             /* set if current block must be flushed */
        ^
TotalCrossVM/src/zlib/deflate.c:1467:11: style: Variable 'n' is reassigned a value before the old one has been used. [redundantAssignment]
        n = read_buf(s->strm, s->window + s->strstart + s->lookahead, more);
          ^
TotalCrossVM/src/zlib/deflate.c:1439:15: note: n is assigned
            n = wsize;
              ^
TotalCrossVM/src/zlib/deflate.c:1467:11: note: n is overwritten
        n = read_buf(s->strm, s->window + s->strstart + s->lookahead, more);
          ^
TotalCrossVM/src/zlib/gzclose.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 63 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/gzlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 68 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/gzlib.c:367:14: style: The scope of the variable 'n' can be reduced. [variableScope]
    unsigned n;
             ^
TotalCrossVM/src/zlib/gzlib.c:368:15: style: The scope of the variable 'ret' can be reduced. [variableScope]
    z_off64_t ret;
              ^
TotalCrossVM/src/zlib/gzlib.c:422:0: information: Skipping configuration 'INT_MAX' since the value of 'INT_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        n = GT_OFF(state->x.have) || (z_off64_t)state->x.have > offset ?
^
TotalCrossVM/src/zlib/gzread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 63 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/gzread.c:515:9: style: Condition 'left' is always true [knownConditionTrueFalse]
    if (left) do {
        ^
TotalCrossVM/src/zlib/gzread.c:494:44: note: Assuming that condition 'len<1' is not redundant
    if (file == NULL || buf == NULL || len < 1)
                                           ^
TotalCrossVM/src/zlib/gzread.c:499:32: note: Assuming condition is false
    if (state->mode != GZ_READ ||
                               ^
TotalCrossVM/src/zlib/gzread.c:514:26: note: Assignment 'left=(unsigned int)len-1', assigned value is 4294967295
    left = (unsigned)len - 1;
                         ^
TotalCrossVM/src/zlib/gzread.c:515:9: note: Condition 'left' is always true
    if (left) do {
        ^
TotalCrossVM/src/zlib/gzread.c:488:20: style: The scope of the variable 'n' can be reduced. [variableScope]
    unsigned left, n;
                   ^
TotalCrossVM/src/zlib/gzread.c:490:20: style: The scope of the variable 'eol' can be reduced. [variableScope]
    unsigned char *eol;
                   ^
TotalCrossVM/src/zlib/gzread.c:266:0: information: Skipping configuration 'INT_MAX' since the value of 'INT_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            n = GT_OFF(state->x.have) || (z_off64_t)state->x.have > len ?
^
TotalCrossVM/src/zlib/gzwrite.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 69 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/gzwrite.c:18:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
TotalCrossVM/src/zlib/gzwrite.c:138:14: style: The scope of the variable 'n' can be reduced. [variableScope]
    unsigned n;
             ^
TotalCrossVM/src/zlib/gzwrite.c:249:14: style: The scope of the variable 'have' can be reduced. [variableScope]
    unsigned have;
             ^
TotalCrossVM/src/zlib/gzwrite.c:295:17: style:inconclusive: Function 'gzputs' argument 2 names different: declaration 's' definition 'str'. [funcArgNamesDifferent]
    const char *str;
                ^
TotalCrossVM/src/zlib/zlib.h:1368:28: note: Function 'gzputs' argument 2 names different: declaration 's' definition 'str'.
ZEXTERN int ZEXPORT gzputs OF((gzFile file, const char *s));
                           ^
TotalCrossVM/src/zlib/gzwrite.c:295:17: note: Function 'gzputs' argument 2 names different: declaration 's' definition 'str'.
    const char *str;
                ^
TotalCrossVM/src/zlib/gzwrite.c:148:0: information: Skipping configuration 'INT_MAX' since the value of 'INT_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        n = GT_OFF(state->size) || (z_off64_t)state->size > len ?
^
TotalCrossVM/src/zlib/infback.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 66 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/inffast.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 68 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/inffast.c:142:17: style: Condition 'op' is always true [knownConditionTrueFalse]
            if (op) {
                ^
TotalCrossVM/src/zlib/inffast.c:133:16: note: Assuming that condition 'op==0' is not redundant
        if (op == 0) {                          /* literal */
               ^
TotalCrossVM/src/zlib/inffast.c:141:13: note: Compound assignment '&=', assigned value is 0
            op &= 15;                           /* number of extra bits */
            ^
TotalCrossVM/src/zlib/inffast.c:142:17: note: Condition 'op' is always true
            if (op) {
                ^
TotalCrossVM/src/zlib/inffast.c:264:33: style: Condition 'len>1' is always false [knownConditionTrueFalse]
                        if (len > 1)
                                ^
TotalCrossVM/src/zlib/inffast.c:262:25: note: Assuming condition 'len' is true
                    if (len) {
                        ^
TotalCrossVM/src/zlib/inffast.c:264:33: note: Condition 'len>1' is always false
                        if (len > 1)
                                ^
TotalCrossVM/src/zlib/inffast.c:278:33: style: Condition 'len>1' is always false [knownConditionTrueFalse]
                        if (len > 1)
                                ^
TotalCrossVM/src/zlib/inffast.c:276:25: note: Assuming condition 'len' is true
                    if (len) {
                        ^
TotalCrossVM/src/zlib/inffast.c:278:33: note: Condition 'len>1' is always false
                        if (len > 1)
                                ^
TotalCrossVM/src/zlib/inflate.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 69 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/inflate.c:1497:17: style: Variable 'state->sane' is reassigned a value before the old one has been used. [redundantAssignment]
    state->sane = 1;
                ^
TotalCrossVM/src/zlib/inflate.c:1493:17: note: state->sane is assigned
    state->sane = !subvert;
                ^
TotalCrossVM/src/zlib/inflate.c:1497:17: note: state->sane is overwritten
    state->sane = 1;
                ^
TotalCrossVM/src/zlib/inflate.c:385:14: style: The scope of the variable 'dist' can be reduced. [variableScope]
    unsigned dist;
             ^
TotalCrossVM/src/zlib/inflate.c:1297:19: style: The scope of the variable 'dictid' can be reduced. [variableScope]
    unsigned long dictid;
                  ^
TotalCrossVM/src/zlib/inflate.c:1382:19: style: The scope of the variable 'buf' can be reduced. [variableScope]
    unsigned char buf[4];       /* to restore bit buffer to byte string */
                  ^
TotalCrossVM/src/zlib/inflate.c:1445:14: style: The scope of the variable 'wsize' can be reduced. [variableScope]
    unsigned wsize;
             ^
TotalCrossVM/src/zlib/inflate.c:1507:61: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
    if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;
                                                            ^
TotalCrossVM/src/zlib/inftrees.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 65 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/inftrees.c:50:14: style: The scope of the variable 'fill' can be reduced. [variableScope]
    unsigned fill;              /* index for replicating entries */
             ^
TotalCrossVM/src/zlib/trees.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 73 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/trees.c:712:9: style: The scope of the variable 'curlen' can be reduced. [variableScope]
    int curlen;                /* length of current code */
        ^
TotalCrossVM/src/zlib/trees.c:757:9: style: The scope of the variable 'curlen' can be reduced. [variableScope]
    int curlen;                /* length of current code */
        ^
TotalCrossVM/src/zlib/trees.c:1065:14: style: The scope of the variable 'dist' can be reduced. [variableScope]
    unsigned dist;      /* distance of matched string */
             ^
TotalCrossVM/src/zlib/trees.c:1066:9: style: The scope of the variable 'lc' can be reduced. [variableScope]
    int lc;             /* match length or unmatched char (if dist == 0) */
        ^
TotalCrossVM/src/zlib/trees.c:1067:14: style: The scope of the variable 'lx' can be reduced. [variableScope]
    unsigned lx = 0;    /* running index in l_buf */
             ^
TotalCrossVM/src/zlib/trees.c:1068:14: style: The scope of the variable 'code' can be reduced. [variableScope]
    unsigned code;      /* the code to send */
             ^
TotalCrossVM/src/zlib/trees.c:1069:9: style: The scope of the variable 'extra' can be reduced. [variableScope]
    int extra;          /* number of extra bits to send */
        ^
TotalCrossVM/src/zlib/trees.c:825:5: warning: %ld in format string (no. 1) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
    Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
    ^
TotalCrossVM/src/zlib/trees.c:825:5: warning: %ld in format string (no. 2) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
    Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",
    ^
TotalCrossVM/src/zlib/trees.c:853:5: warning: %ld in format string (no. 1) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
    Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));
    ^
TotalCrossVM/src/zlib/trees.c:856:5: warning: %ld in format string (no. 1) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
    Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));
    ^
TotalCrossVM/src/zlib/trees.c:859:5: warning: %ld in format string (no. 1) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
    Tracev((stderr, "\ndist tree: sent %ld", s->bits_sent));
    ^
TotalCrossVM/src/zlib/trees.c:925:9: warning: %ld in format string (no. 1) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
        Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
        ^
TotalCrossVM/src/zlib/trees.c:925:9: warning: %ld in format string (no. 2) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
        Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,
        ^
TotalCrossVM/src/zlib/trees.c:929:9: warning: %ld in format string (no. 1) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
        Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
        ^
TotalCrossVM/src/zlib/trees.c:929:9: warning: %ld in format string (no. 2) requires 'long' but the argument type is 'unsigned long'. [invalidPrintfArgType_sint]
        Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,
        ^
TotalCrossVM/src/zlib/trees.c:1080:13: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
            send_code(s, code+LITERALS+1, ltree); /* send the length code */
            ^
TotalCrossVM/src/zlib/trees.c:1090:13: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
            send_code(s, code, dtree);       /* send the distance code */
            ^
TotalCrossVM/src/zlib/trees.c:970:28: style: Unsigned expression 'static_lenb' can't be negative so it is unnecessary to test it. [unsignedPositive]
    } else if (static_lenb >= 0) { /* force static trees */
                           ^
TotalCrossVM/src/zlib/trees.c:364:9: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'int'. [invalidPrintfArgType_uint]
        fprintf(header, "%1u%s", base_length[i],
        ^
TotalCrossVM/src/zlib/trees.c:370:9: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'int'. [invalidPrintfArgType_uint]
        fprintf(header, "%5u%s", base_dist[i],
        ^
TotalCrossVM/src/zlib/trees.c:1155:14: style:inconclusive: Function 'bi_reverse' argument 1 names different: declaration 'value' definition 'code'. [funcArgNamesDifferent]
    unsigned code; /* the value to invert */
             ^
TotalCrossVM/src/zlib/trees.c:152:27: note: Function 'bi_reverse' argument 1 names different: declaration 'value' definition 'code'.
local unsigned bi_reverse OF((unsigned value, int length));
                          ^
TotalCrossVM/src/zlib/trees.c:1155:14: note: Function 'bi_reverse' argument 1 names different: declaration 'value' definition 'code'.
    unsigned code; /* the value to invert */
             ^
TotalCrossVM/src/zlib/trees.c:1156:9: style:inconclusive: Function 'bi_reverse' argument 2 names different: declaration 'length' definition 'len'. [funcArgNamesDifferent]
    int len;       /* its bit length */
        ^
TotalCrossVM/src/zlib/trees.c:152:27: note: Function 'bi_reverse' argument 2 names different: declaration 'length' definition 'len'.
local unsigned bi_reverse OF((unsigned value, int length));
                          ^
TotalCrossVM/src/zlib/trees.c:1156:9: note: Function 'bi_reverse' argument 2 names different: declaration 'length' definition 'len'.
    int len;       /* its bit length */
        ^
TotalCrossVM/src/zlib/uncompr.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/zutil.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 100 configurations. Use --force to check all configurations. [toomanyconfigs]

^
TotalCrossVM/src/zlib/zutil.c:311:31: style: Same expression on both sides of '-'. [duplicateExpression]
    if (opaque) items += size - size; /* make compiler happy */
                              ^
TotalCrossVM/src/zlib/zutil.c:16:33: style: struct member 'internal_state::dummy' is never used. [unusedStructMember]
struct internal_state      {int dummy;}; /* for buggy compilers */
                                ^
TotalCrossVM/src/nm/ui/android/gfx_ex.h:17:9: error: The one definition rule is violated, different classes/structs have the same name 'TScreenSurfaceEx' [ctuOneDefinitionRuleViolation]
typedef struct
        ^
TotalCrossVM/src/nm/ui/linux/gfx_ex.h:24:9: note: The one definition rule is violated, different classes/structs have the same name 'TScreenSurfaceEx'
typedef struct TScreenSurfaceEx
        ^
TotalCrossVM/src/nm/ui/android/gfx_ex.h:17:9: note: The one definition rule is violated, different classes/structs have the same name 'TScreenSurfaceEx'
typedef struct
        ^
TotalCrossVM/src/nm/ui/android/gfx_ex.h:17:9: error: The one definition rule is violated, different classes/structs have the same name 'TScreenSurfaceEx' [ctuOneDefinitionRuleViolation]
typedef struct
        ^
TotalCrossVM/src/nm/ui/win/gfx_ex.h:12:9: note: The one definition rule is violated, different classes/structs have the same name 'TScreenSurfaceEx'
typedef struct
        ^
TotalCrossVM/src/nm/ui/android/gfx_ex.h:17:9: note: The one definition rule is violated, different classes/structs have the same name 'TScreenSurfaceEx'
typedef struct
        ^
TotalCrossVM/src/tcvm/tcthread.h:132:10: error: The one definition rule is violated, different classes/structs have the same name 'Unnamed1' [ctuOneDefinitionRuleViolation]
 typedef struct
         ^
TotalCrossVM/src/tcvm/tcthread.h:120:10: note: The one definition rule is violated, different classes/structs have the same name 'Unnamed1'
 typedef struct
         ^
TotalCrossVM/src/tcvm/tcthread.h:132:10: note: The one definition rule is violated, different classes/structs have the same name 'Unnamed1'
 typedef struct
         ^
TotalCrossVM/src/axtls/openssl.c:314:0: style: The function 'BIO_free' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:305:0: style: The function 'BIO_new' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:313:0: style: The function 'BIO_new_fp' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:296:0: style: The function 'BIO_printf' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:304:0: style: The function 'BIO_s_null' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:704:0: style: The function 'CfgConduit' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:685:0: style: The function 'ConfigureConduit' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:288:0: style: The function 'ERR_print_errors_fp' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:80:0: style: The function 'GetAppPathWP8' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:728:0: style: The function 'GetConduitInfo' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:606:0: style: The function 'GetConduitVersion' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:100:0: style: The function 'GetDisplayNameWP8' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:90:0: style: The function 'GetVmPathWP8' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/android/skia.cpp:687:0: style: The function 'Java_totalcross_Launcher4A_drawIntoBitmap' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/firebase/firebase.c:60:0: style: The function 'Java_totalcross_Launcher4A_nativeOnMessageReceived' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/firebase/firebase.c:42:0: style: The function 'Java_totalcross_Launcher4A_nativeOnTokenRefresh' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/YoutubePlayer.c:31:0: style: The function 'Java_totalcross_Launcher4A_nativeYoutubeCallback' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/md2.c:176:0: style: The function 'MD2Final' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/md2.c:79:0: style: The function 'MD2Init' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/md2.c:92:0: style: The function 'MD2Update' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:612:0: style: The function 'OpenConduit' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/lang/StringBuffer.c:101:0: style: The function 'SB_insert' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:269:0: style: The function 'SSL_CTX_check_private_key' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:204:0: style: The function 'SSL_CTX_ctrl' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:73:0: style: The function 'SSL_CTX_free' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:214:0: style: The function 'SSL_CTX_load_verify_locations' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:65:0: style: The function 'SSL_CTX_new' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:274:0: style: The function 'SSL_CTX_set_cipher_list' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:225:0: style: The function 'SSL_CTX_set_client_CA_list' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:231:0: style: The function 'SSL_CTX_set_default_passwd_cb' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:233:0: style: The function 'SSL_CTX_set_default_passwd_cb_userdata' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:173:0: style: The function 'SSL_CTX_set_default_verify_paths' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:285:0: style: The function 'SSL_CTX_set_options' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:167:0: style: The function 'SSL_CTX_set_session_id_context' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:293:0: style: The function 'SSL_CTX_set_timeout' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:209:0: style: The function 'SSL_CTX_set_verify' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:212:0: style: The function 'SSL_CTX_set_verify_depth' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:156:0: style: The function 'SSL_CTX_use_PrivateKey_file' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:161:0: style: The function 'SSL_CTX_use_certificate_ASN1' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:178:0: style: The function 'SSL_CTX_use_certificate_chain_file' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:151:0: style: The function 'SSL_CTX_use_certificate_file' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:201:0: style: The function 'SSL_SESSION_free' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:108:0: style: The function 'SSL_accept' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:263:0: style: The function 'SSL_clear' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:120:0: style: The function 'SSL_connect' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:126:0: style: The function 'SSL_free' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:190:0: style: The function 'SSL_get1_session' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:279:0: style: The function 'SSL_get_error' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:258:0: style: The function 'SSL_get_peer_certificate' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:246:0: style: The function 'SSL_get_verify_result' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:286:0: style: The function 'SSL_library_init' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:220:0: style: The function 'SSL_load_client_CA_file' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:287:0: style: The function 'SSL_load_error_strings' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:79:0: style: The function 'SSL_new' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:238:0: style: The function 'SSL_peek' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:131:0: style: The function 'SSL_read' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:244:0: style: The function 'SSL_set_bio' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:102:0: style: The function 'SSL_set_fd' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:195:0: style: The function 'SSL_set_session' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:184:0: style: The function 'SSL_shutdown' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:251:0: style: The function 'SSL_state' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:146:0: style: The function 'SSL_write' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:54:0: style: The function 'SSLv3_client_method' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:52:0: style: The function 'SSLv3_server_method' is never used. [unusedFunction]

^
TotalCrossVM/src/util/jchar.c:344:0: style: The function 'TCHARP2JCharP' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:55:0: style: The function 'TLSv1_client_method' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/openssl.c:53:0: style: The function 'TLSv1_server_method' is never used. [unusedFunction]

^
TotalCrossVM/src/launchers/win/Launcher.c:78:0: style: The function 'WinMain' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/os_port.c:334:0: style: The function '_isatty' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/adler32.c:165:0: style: The function 'adler32_combine' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/adler32.c:173:0: style: The function 'adler32_combine64' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/bigint.c:656:0: style: The function 'bi_str_import' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/compress.c:62:0: style: The function 'compress' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/compress.c:75:0: style: The function 'compressBound' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/lang/posix/cpproc.c:56:0: style: The function 'cpproc_forkAndExec' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/crc32.c:411:0: style: The function 'crc32_combine' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/crc32.c:419:0: style: The function 'crc32_combine64' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/lang/Runtime.c:127:0: style: The function 'createFileStream' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5468:0: style: The function 'create_mspace' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5487:0: style: The function 'create_mspace_with_base' is never used. [unusedFunction]

^
TotalCrossVM/src/util/mem.c:110:0: style: The function 'dbgGetPtrSize' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/deflate.c:566:0: style: The function 'deflateBound' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/deflate.c:1014:0: style: The function 'deflateCopy' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/deflate.c:450:0: style: The function 'deflatePending' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/deflate.c:464:0: style: The function 'deflatePrime' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/deflate.c:323:0: style: The function 'deflateSetDictionary' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/deflate.c:439:0: style: The function 'deflateSetHeader' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/deflate.c:531:0: style: The function 'deflateTune' is never used. [unusedFunction]

^
TotalCrossVM/src/util/debug.c:90:0: style: The function 'deleteDebugFile' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5518:0: style: The function 'destroy_mspace' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5362:0: style: The function 'dlbulk_free' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:4830:0: style: The function 'dlcalloc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5351:0: style: The function 'dlindependent_calloc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5357:0: style: The function 'dlindependent_comalloc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5390:0: style: The function 'dlmalloc_footprint' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5398:0: style: The function 'dlmalloc_footprint_limit' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5367:0: style: The function 'dlmalloc_inspect_all' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5394:0: style: The function 'dlmalloc_max_footprint' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5403:0: style: The function 'dlmalloc_set_footprint_limit' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5421:0: style: The function 'dlmalloc_stats' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5380:0: style: The function 'dlmalloc_trim' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5430:0: style: The function 'dlmalloc_usable_size' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5426:0: style: The function 'dlmallopt' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5314:0: style: The function 'dlposix_memalign' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5344:0: style: The function 'dlpvalloc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5269:0: style: The function 'dlrealloc_in_place' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5337:0: style: The function 'dlvalloc' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:247:0: style: The function 'dxGetPixels' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:257:0: style: The function 'dxGetScreenSize' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:38:0: style: The function 'eventQueuePush' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:237:0: style: The function 'fileIsCardInsertedCPP' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:101:0: style: The function 'flushAll' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:55:0: style: The function 'flushPixels' is never used. [unusedFunction]

^
TotalCrossVM/src/util/mem.c:36:0: style: The function 'getCountToReturnNull' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:147:0: style: The function 'getFreeMemoryWP8' is never used. [unusedFunction]

^
TotalCrossVM/src/tcvm/tcclass.c:97:0: style: The function 'getIndexInCP' is never used. [unusedFunction]

^
TotalCrossVM/src/tcvm/tcfield.c:180:0: style: The function 'getInstanceFieldDouble' is never used. [unusedFunction]

^
TotalCrossVM/src/tcvm/tcfield.c:186:0: style: The function 'getInstanceFieldLong' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/os_port.c:90:0: style: The function 'getNowUTC' is never used. [unusedFunction]

^
TotalCrossVM/src/tcvm/tcfield.c:41:0: style: The function 'getStaticFieldLong' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:153:0: style: The function 'getUsedMemoryWP8' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/rdbmp.c:182:0: style: The function 'get_32bit_row' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/crc32.c:190:0: style: The function 'get_crc_table' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:164:0: style: The function 'glDrawLine' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:158:0: style: The function 'glDrawLines' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:151:0: style: The function 'glDrawPixel' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:140:0: style: The function 'glDrawPixelColors' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:145:0: style: The function 'glDrawPixels' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:213:0: style: The function 'glDrawTexture' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:83:0: style: The function 'glDrawThickLine' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:194:0: style: The function 'glFillRect' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:170:0: style: The function 'glFillShadedRect' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:87:0: style: The function 'glGetPixel' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:95:0: style: The function 'glGetPixels' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:199:0: style: The function 'glSetLineWidth' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:314:0: style: The function 'gzbuffer' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:549:0: style: The function 'gzclearerr' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzclose.c:11:0: style: The function 'gzclose' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzread.c:547:0: style: The function 'gzdirect' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:284:0: style: The function 'gzdopen' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:511:0: style: The function 'gzeof' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:528:0: style: The function 'gzerror' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzwrite.c:465:0: style: The function 'gzflush' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzread.c:416:0: style: The function 'gzgetc_' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzread.c:483:0: style: The function 'gzgets' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:501:0: style: The function 'gzoffset' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:268:0: style: The function 'gzopen' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:276:0: style: The function 'gzopen64' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzwrite.c:386:0: style: The function 'gzprintf' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzwrite.c:245:0: style: The function 'gzputc' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzwrite.c:293:0: style: The function 'gzputs' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:439:0: style: The function 'gzseek' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzwrite.c:497:0: style: The function 'gzsetparams' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzlib.c:468:0: style: The function 'gztell' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/gzread.c:423:0: style: The function 'gzungetc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/mem.c:255:0: style: The function 'heapFree' is never used. [unusedFunction]

^
TotalCrossVM/src/util/datastructures.c:171:0: style: The function 'htPutPtrIfNew' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/infback.c:250:0: style: The function 'inflateBack' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/infback.c:631:0: style: The function 'inflateBackEnd' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/infback.c:28:0: style: The function 'inflateBackInit_' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:1438:0: style: The function 'inflateCopy' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:1268:0: style: The function 'inflateGetDictionary' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:1326:0: style: The function 'inflateGetHeader' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:1502:0: style: The function 'inflateMark' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:230:0: style: The function 'inflatePrime' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:1291:0: style: The function 'inflateSetDictionary' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:1377:0: style: The function 'inflateSync' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:1428:0: style: The function 'inflateSyncPoint' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/inflate.c:1485:0: style: The function 'inflateUndermine' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jcphuff.c:814:0: style: The function 'jinit_phuff_encoder' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/rdppm.c:444:0: style: The function 'jinit_read_ppm' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/rdtarga.c:484:0: style: The function 'jinit_read_targa' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/wrppm.c:220:0: style: The function 'jinit_write_ppm' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdapimin.c:104:0: style: The function 'jpeg_abort_decompress' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdapistd.c:254:0: style: The function 'jpeg_finish_output' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdapimin.c:353:0: style: The function 'jpeg_has_multiple_scans' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdapimin.c:338:0: style: The function 'jpeg_input_complete' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdatadst.c:235:0: style: The function 'jpeg_mem_dest' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdatasrc.c:249:0: style: The function 'jpeg_mem_src' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdmaster.c:497:0: style: The function 'jpeg_new_colormap' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdapistd.c:186:0: style: The function 'jpeg_read_raw_data' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jdapistd.c:229:0: style: The function 'jpeg_start_output' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jcapimin.c:234:0: style: The function 'jpeg_write_m_byte' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jcapimin.c:222:0: style: The function 'jpeg_write_m_header' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jcapistd.c:121:0: style: The function 'jpeg_write_raw_data' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/jcapimin.c:262:0: style: The function 'jpeg_write_tables' is never used. [unusedFunction]

^
TotalCrossVM/src/util/datastructures.c:372:0: style: The function 'list2array' is never used. [unusedFunction]

^
TotalCrossVM/src/util/utils.c:133:0: style: The function 'long2hex' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5890:0: style: The function 'mspace_bulk_free' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5761:0: style: The function 'mspace_calloc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5941:0: style: The function 'mspace_footprint' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5965:0: style: The function 'mspace_footprint_limit' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5869:0: style: The function 'mspace_independent_calloc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5880:0: style: The function 'mspace_independent_comalloc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5895:0: style: The function 'mspace_inspect_all' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5997:0: style: The function 'mspace_mallinfo' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5930:0: style: The function 'mspace_malloc_stats' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:6015:0: style: The function 'mspace_mallopt' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5953:0: style: The function 'mspace_max_footprint' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5858:0: style: The function 'mspace_memalign' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5781:0: style: The function 'mspace_realloc' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5826:0: style: The function 'mspace_realloc_in_place' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5978:0: style: The function 'mspace_set_footprint_limit' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5501:0: style: The function 'mspace_track_large_chunks' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:5914:0: style: The function 'mspace_trim' is never used. [unusedFunction]

^
TotalCrossVM/src/util/dlmalloc.c:6006:0: style: The function 'mspace_usable_size' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/cppwrapper.cpp:358:0: style: The function 'nativeSoundPlayCPP' is never used. [unusedFunction]

^
TotalCrossVM/src/util/utils.c:886:0: style: The function 'normalizePath' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/CameraNatives.cpp:91:0: style: The function 'pC_click' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/CameraNatives.cpp:110:0: style: The function 'pC_setPreview_b' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/CameraNatives.cpp:147:0: style: The function 'pC_setZoom_i' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:229:0: style: The function 'pP_flush' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:150:0: style: The function 'pP_getDensity' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:165:0: style: The function 'pP_getLineSpacing' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:199:0: style: The function 'pP_printBarcode_siiii' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:223:0: style: The function 'pP_printBitmap_si' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:175:0: style: The function 'pP_print_si' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:143:0: style: The function 'pP_setDensity_i' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/pidion/PrinterNatives.cpp:158:0: style: The function 'pP_setLineSpacing_i' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/ckconfig.c:222:0: style: The function 'possibly_dupli_function' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/ckconfig.c:217:0: style: The function 'possibly_duplicate_function' is never used. [unusedFunction]

^
TotalCrossVM/src/tcvm/tcexception.c:260:0: style: The function 'printStackTrace' is never used. [unusedFunction]

^
TotalCrossVM/src/util/mem.c:329:0: style: The function 'privateHeapError' is never used. [unusedFunction]

^
TotalCrossVM/src/util/datastructures.c:333:0: style: The function 'privateNewArray' is never used. [unusedFunction]

^
TotalCrossVM/src/util/mem.c:788:0: style: The function 'privateXcalloc' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:174:0: style: The function 'qrcodegen_encodeBinary' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:204:0: style: The function 'qrcodegen_encodeSegments' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:908:0: style: The function 'qrcodegen_makeBytes' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/qrcode/win/qrcodegen.c:995:0: style: The function 'qrcodegen_makeEci' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/example.c:284:0: style: The function 'read_JPEG_file' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:436:0: style: The function 'remoteQueryRegistry' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/JpegLoader.c:212:0: style: The function 'rgb565_2jpeg' is never used. [unusedFunction]

^
TotalCrossVM/src/util/mem.c:32:0: style: The function 'setCountToReturnNull' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/wp8/openglWrapper.cpp:177:0: style: The function 'setShiftYgl' is never used. [unusedFunction]

^
TotalCrossVM/src/scanner/dolphin/Dolphin_camera.c:132:0: style: The function 'showDolphinCamera' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/android/skia.cpp:648:0: style: The function 'skia_getsetRGB' is never used. [unusedFunction]

^
TotalCrossVM/src/nm/ui/android/skia.cpp:674:0: style: The function 'skia_shiftScreen' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/tls1.c:144:0: style: The function 'ssl_ext_new' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/tls1.c:512:0: style: The function 'ssl_get_cert_subject_alt_dnsname' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/tls1.c:1883:0: style: The function 'ssl_get_session_id_size' is never used. [unusedFunction]

^
LitebaseSDK/src/native/UtilsLB.c:227:0: style: The function 'strLeftTrim' is never used. [unusedFunction]

^
TotalCrossVM/src/axtls/os_port.c:67:0: style: The function 'strcasecmp' is never used. [unusedFunction]

^
TotalCrossVM/src/util/tcz.c:141:0: style: The function 'tczRead16BE' is never used. [unusedFunction]

^
TotalCrossVM/src/util/tcz.c:126:0: style: The function 'tczRead32BE' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/ckconfig.c:116:0: style: The function 'test2function' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/ckconfig.c:163:0: style: The function 'test3function' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/ckconfig.c:187:0: style: The function 'test4function' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/ckconfig.c:111:0: style: The function 'testfunction' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:785:0: style: The function 'tisC_finishSync' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:938:0: style: The function 'tisC_initSync' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:806:0: style: The function 'tisC_log_s' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:840:0: style: The function 'tisC_register_i' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:906:0: style: The function 'tisC_unregister' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:831:0: style: The function 'tisC_yield' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1768:0: style: The function 'tisRF_copyFromRemote_ss' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1631:0: style: The function 'tisRF_copyToRemote_ss' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1896:0: style: The function 'tisRF_delete_s' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1949:0: style: The function 'tisRF_exec_ssib' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1552:0: style: The function 'tisRF_listFiles_s' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1144:0: style: The function 'tisRPDBF_close' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1014:0: style: The function 'tisRPDBF_create' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1181:0: style: The function 'tisRPDBF_delete' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1425:0: style: The function 'tisRPDBF_deleteRecord_i' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1270:0: style: The function 'tisRPDBF_getNextModifiedRecordIn' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1234:0: style: The function 'tisRPDBF_getRecordCount' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1461:0: style: The function 'tisRPDBF_listPDBs_ii' is never used. [unusedFunction]

^
TotalCrossVM/src/sync/Conduit.cpp:1325:0: style: The function 'tisRPDBF_rwRecord_ibb' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/uncompr.c:24:0: style: The function 'uncompress' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:1672:0: style: The function 'unzGetCurrentFileZStreamPos64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:1338:0: style: The function 'unzGetFilePos' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:2065:0: style: The function 'unzGetGlobalComment' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:842:0: style: The function 'unzGetGlobalInfo64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:1970:0: style: The function 'unzGetLocalExtrafield' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:2108:0: style: The function 'unzGetOffset' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:1374:0: style: The function 'unzGoToFilePos' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:807:0: style: The function 'unzOpen' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:792:0: style: The function 'unzOpen2_64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:812:0: style: The function 'unzOpen64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:1665:0: style: The function 'unzOpenCurrentFile2' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:1660:0: style: The function 'unzOpenCurrentFilePassword' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:2136:0: style: The function 'unzSetOffset' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:1938:0: style: The function 'unzeof' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/unzip.c:1918:0: style: The function 'unztell64' is never used. [unusedFunction]

^
TotalCrossVM/src/tcvm/objectmemorymanager.c:980:0: style: The function 'visitImages' is never used. [unusedFunction]

^
TotalCrossVM/src/jpeg/example.c:72:0: style: The function 'write_JPEG_file' is never used. [unusedFunction]

^
TotalCrossVM/src/util/xtypes.c:33:0: style: The function 'xstrncasecmp' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/zutil.c:138:0: style: The function 'zError' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:961:0: style: The function 'zipOpen' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:945:0: style: The function 'zipOpen2_64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:966:0: style: The function 'zipOpen64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:1324:0: style: The function 'zipOpenNewFileInZip2' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:1337:0: style: The function 'zipOpenNewFileInZip2_64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:1294:0: style: The function 'zipOpenNewFileInZip3' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:1309:0: style: The function 'zipOpenNewFileInZip3_64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:1278:0: style: The function 'zipOpenNewFileInZip4' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:1350:0: style: The function 'zipOpenNewFileInZip64' is never used. [unusedFunction]

^
TotalCrossVM/src/minizip/zip.c:1964:0: style: The function 'zipRemoveExtraInfoBlock' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/zutil.c:37:0: style: The function 'zlibCompileFlags' is never used. [unusedFunction]

^
TotalCrossVM/src/zlib/zutil.c:32:0: style: The function 'zlibVersion' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

